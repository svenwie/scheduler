import { LayoutViewer } from '../index';
/**
 * Exports the document to Word format.
 */
export declare class WordExport {
    private getModuleName();
    private documentPath;
    private stylePath;
    private numberingPath;
    private settingsPath;
    private headerPath;
    private footerPath;
    private imagePath;
    private appPath;
    private corePath;
    private contentTypesPath;
    private generalRelationPath;
    private wordRelationPath;
    private headerRelationPath;
    private footerRelationPath;
    private xmlContentType;
    private fontContentType;
    private documentContentType;
    private settingsContentType;
    private footerContentType;
    private headerContentType;
    private numberingContentType;
    private stylesContentType;
    private webSettingsContentType;
    private appContentType;
    private coreContentType;
    private customContentType;
    private customXmlContentType;
    private relationContentType;
    private tableStyleContentType;
    private settingsRelType;
    private footerRelType;
    private headerRelType;
    private documentRelType;
    private numberingRelType;
    private stylesRelType;
    private fontRelType;
    private tableStyleRelType;
    private coreRelType;
    private appRelType;
    private customRelType;
    private imageRelType;
    private hyperlinkRelType;
    private controlRelType;
    private packageRelType;
    private customXmlRelType;
    private customUIRelType;
    private attachedTemplateRelType;
    private wNamespace;
    private wpNamespace;
    private pictureNamespace;
    private aNamespace;
    private a14Namespace;
    private rNamespace;
    private rpNamespace;
    private vNamespace;
    private oNamespace;
    private xmlNamespace;
    private w10Namespace;
    private cpNamespace;
    private dcNamespace;
    private docPropsNamespace;
    private veNamespace;
    private mNamespace;
    private wneNamespace;
    private customPropsNamespace;
    private vtNamespace;
    private chartNamespace;
    private slNamespace;
    private dtNamespace;
    private wmlNamespace;
    private w14Namespace;
    private wpCanvasNamespace;
    private wpDrawingNamespace;
    private wpGroupNamespace;
    private wpInkNamespace;
    private wpShapeNamespace;
    private w15Namespace;
    private diagramNamespace;
    private eNamespace;
    private pNamespace;
    private certNamespace;
    private cRelationshipsTag;
    private cRelationshipTag;
    private cIdTag;
    private cTypeTag;
    private cTargetTag;
    private cUserShapesTag;
    private cExternalData;
    private twipsInOnePoint;
    private twentiethOfPoint;
    private borderMultiplier;
    private percentageFactor;
    private emusPerPoint;
    private cConditionalTableStyleTag;
    private cTableFormatTag;
    private cTowFormatTag;
    private cCellFormatTag;
    private cParagraphFormatTag;
    private cCharacterFormatTag;
    private packageType;
    private relsPartPath;
    private documentRelsPartPath;
    private webSettingsPath;
    private wordMLDocumentPath;
    private wordMLStylePath;
    private wordMLNumberingPath;
    private wordMLSettingsPath;
    private wordMLHeaderPath;
    private wordMLFooterPath;
    private wordMLCommentsPath;
    private wordMLImagePath;
    private wordMLFootnotesPath;
    private wordMLEndnotesPath;
    private wordMLAppPath;
    private wordMLCorePath;
    private wordMLCustomPath;
    private wordMLFontTablePath;
    private wordMLChartsPath;
    private wordMLDefaultEmbeddingPath;
    private wordMLEmbeddingPath;
    private wordMLDrawingPath;
    private wordMLThemePath;
    private wordMLFontsPath;
    private wordMLDiagramPath;
    private wordMLControlPath;
    private wordMLVbaProject;
    private wordMLVbaData;
    private wordMLVbaProjectPath;
    private wordMLVbaDataPath;
    private wordMLWebSettingsPath;
    private wordMLCustomItemProp1Path;
    private wordMLFootnoteRelPath;
    private wordMLEndnoteRelPath;
    private wordMLSettingsRelPath;
    private wordMLNumberingRelPath;
    private wordMLFontTableRelPath;
    private wordMLCustomXmlPropsRelType;
    private wordMLControlRelType;
    private wordMLDiagramContentType;
    private section;
    private lastSection;
    private blockOwner;
    private paragraph;
    private table;
    private row;
    private headerFooter;
    private document;
    private mSections;
    private mLists;
    private mAbstractLists;
    private mStyles;
    private defCharacterFormat;
    private defParagraphFormat;
    private defaultTabWidthValue;
    private mRelationShipID;
    private mDocPrID;
    private mDifferentFirstPage;
    private mHeaderFooterColl;
    private mVerticalMerge;
    private mGridSpans;
    private mDocumentImages;
    private mExternalLinkImages;
    private mHeaderFooterImages;
    private mArchive;
    private mBookmarks;
    private readonly bookmarks;
    private readonly documentImages;
    private readonly externalImages;
    private readonly headerFooterImages;
    private readonly headersFooters;
    /**
     * @private
     */
    save(viewer: LayoutViewer, fileName: string): void;
    /**
     * @private
     */
    saveAsBlob(viewer: LayoutViewer): Promise<Blob>;
    /**
     * @private
     */
    destroy(): void;
    private serialize(viewer);
    private setDocument(document);
    private clearDocument();
    private serializeDocument();
    private writeCommonAttributeStrings(writer);
    private writeDup(writer);
    private writeCustom(writer);
    private serializeDocumentBody(writer);
    private serializeSection(writer, section, last);
    private serializeSectionProperties(writer, section);
    private serializeColumns(writer, section);
    private serializePageSetup(writer, pageSetup);
    private serializePageSize(writer, pageSetup);
    private serializePageMargins(writer, pageSetup);
    private serializeSectionType(writer, sectionBreakCode);
    private serializeHFReference(writer, headersFooters);
    private addHeaderFooter(hf, hfType, id);
    private serializeBodyItems(writer, blockCollection, isLastSection);
    private serializeBodyItem(writer, item, isLastSection);
    private serializeParagraph(writer, paragraph, isLastSection);
    private serializeParagraphItems(writer, paraItems);
    private serializeBookMark(writer, bookmark);
    private getBookmarkId(name);
    private serializePicture(writer, image);
    private serializeDrawing(writer, image);
    private serializeInlinePicture(writer, image);
    private startsWith(sourceString, startString);
    private serializeDrawingGraphics(writer, picture);
    private updateShapeId(picture);
    private addImageRelation(imageCollection, image);
    private updateHFImageRels(hf, image);
    private serializeTable(writer, table);
    private serializeTableGrid(writer, table);
    private serializeTableRows(writer, rows);
    private serializeRow(writer, row);
    private serializeRowFormat(writer, row);
    private serializeCells(writer, cells);
    private serializeCell(writer, cell);
    private serializeCellFormat(writer, cellFormat);
    private serializeCellWidth(writer, cell);
    private serializeCellMerge(writer, cellFormat);
    private createMerge(writer, collKey, cell);
    private serializeColumnSpan(collKey, writer);
    private checkMergeCell(collKey);
    private serializeGridSpan(writer, cell);
    private serializeTableCellDirection(writer, cellFormat);
    private serializeCellVerticalAlign(writer, alignment);
    private serializeGridColumns(writer, grid);
    private serializeTableFormat(writer, format, table);
    private serializeShading(writer, format);
    private getTextureStyle(textureStyle);
    private serializeTableBorders(writer, format);
    private serializeBorders(writer, borders, multipler);
    private serializeTblLayout(writer, format);
    private serializeBorder(writer, border, tagName, multiplier);
    private getBorderStyle(borderStyle);
    private serializeTableIndentation(writer, format);
    private serializeCellSpacing(writer, format);
    private serializeTableWidth(writer, table);
    private serializeTableAlignment(writer, format);
    private serializeFieldCharacter(writer, field);
    private serializeTextRange(writer, span, previousNode);
    private serializeParagraphFormat(writer, paragraphFormat, paragraph);
    private serializeTabs(writer, tabStops);
    private serializeTab(writer, tabStop);
    private getTabLeader(tabLeader);
    private getTabJustification(tabJustification);
    private serializeListFormat(writer, lf);
    private serializeParagraphAlignment(writer, txtAlignment);
    private serializeParagraphSpacing(writer, paragraphFormat);
    private serializeIndentation(writer, paragraphFormat);
    private serializeStyles();
    private serializeDefaultStyles(writer);
    private serializeDocumentStyles(writer);
    private serializeCharacterFormat(writer, characterFormat);
    private getColor(color);
    private getUnderlineStyle(underlineStyle);
    private getHighlightColor(highlight);
    private serializeBoolProperty(writer, tag, value);
    private serializeNumberings();
    private serializeAbstractListStyles(writer, listStyles);
    private serializeListInstances(writer, listStyles);
    private generateHex();
    private roundToTwoDecimal(num);
    private serializeListLevel(writer, listLevel, levelIndex);
    private getLevelPattern(levelPattern);
    private serializeLevelText(writer, listLevel, lvlIndex);
    private serializeLevelFollow(writer, listLevel);
    private serializeSettings();
    private serializeCoreProperties();
    private serializeAppProperties();
    private serializeFontTable(contentType);
    private serializeSettingsRelation();
    private serializeHeaderFooters();
    private serializeHeaderFooter(hfType);
    private serializeHeader(header, id, headerFooterPath, headerFooterRelsPath);
    private serializeHFRelations(hfId, headerFooterRelsPath);
    private writeHFCommonAttributes(writer);
    private serializeFooter(footer, id, headerFooterPath, headerFooterRelsPath);
    private serializeDocumentRelations();
    private serializeImagesRelations(images, writer);
    /**
     * @private
     */
    encodedString(input: string): Uint8Array;
    private serializeExternalLinkImages(writer);
    private serializeHeaderFooterRelations(writer);
    private serializeHFRelation(writer, hfType);
    private serializeRelationShip(writer, relationshipID, relationshipType, targetPath);
    private getNextRelationShipID();
    private serializeGeneralRelations();
    private serializeContentTypes(contentType);
    private serializeHFContentTypes(writer);
    private serializeHeaderFootersContentType(writer, headerFooterType);
    private serializeOverrideContentType(writer, partName, contentType);
    private serializeDefaultContentType(writer, extension, contentType);
    private resetRelationShipID();
    private close();
}
