{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/model/theme.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var color = null;\n        if (colorMapping[i].from && colorMapping[i].to && colorMapping[i].value) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                color = colorMapping[i].color;\n            }\n        }\n        else if ((colorMapping[i].from && colorMapping[i].to) || (colorMapping[i].value)) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                color = colorMapping[i].color;\n            }\n        }\n        if (colorMapping[i].minOpacity && colorMapping[i].maxOpacity && color) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], color, value);\n        }\n        fill = color;\n        opacity = (colorMapping[i].minOpacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 0;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = option['fill'];\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeClassNames } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.themeEffect();\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    /**\n     * To change font styles of map based on themes\n     */\n    TreeMap.prototype.themeEffect = function () {\n        switch (this.theme) {\n            case 'Material':\n            case 'Bootstrap':\n            case 'Fabric':\n                this.setTextStyle('#424242');\n                break;\n            case 'Highcontrast':\n                this.setTextStyle('#FFFFFF');\n                break;\n        }\n    };\n    TreeMap.prototype.setTextStyle = function (color) {\n        this.titleSettings.textStyle.color = this.titleSettings.textStyle.color || color;\n        this.titleSettings.subtitleSettings.textStyle.color = this.titleSettings.subtitleSettings.textStyle.color || color;\n        this.legendSettings.textStyle.color = this.legendSettings.textStyle.color || color;\n        this.legendSettings.titleStyle.color = this.legendSettings.titleStyle.color || color;\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var color = this.theme === 'Highcontrast' ? '#000000' : '#FFFFFF';\n        this.background = this.background ? this.background : color;\n        var borderElement = document.getElementById(this.element.id + '_TreeMap_Border');\n        if (isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else {\n            borderElement.setAttribute('fill', this.background);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color, groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        this.drawLegend();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if (this.treemap.palette.length > 0 && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                this.legendCollections.push({\n                    legendName: child[i]['name'],\n                    legendFill: this.treemap.palette[i % this.treemap.palette.length],\n                    legendData: [],\n                    itemArea: child[i]['weight']\n                });\n            }\n            this.legendCollections.sort(orderByArea);\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n            }\n        }\n    };\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        for (var i = 0; i < data.length; i++) {\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to) {\n                    colorMapProcess = true;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(legendText);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value) {\n                    colorMapProcess = true;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(legendText);\n                }\n                if (colorMapProcess && colorMap.maxOpacity && colorMap.minOpacity && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    var stop1Color = { colorStop: '0%', color: fill };\n                    var stop2Color = { colorStop: '100%', color: fill };\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    colors.push(stop1Color);\n                    colors.push(stop2Color);\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                    gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                if (isAddData && isAddData['process'] && colorMapProcess) {\n                    colorMapProcess = false;\n                    this.legendCollections.push({\n                        legendName: legendText, legendFill: fill, legendData: [], gradientElement: gradientElement\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                }\n                else if (colorMapProcess) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['legendName']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, 1, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, 1, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var areaX = treemap.areaRect.x;\n        var areaY = treemap.areaRect.y;\n        var areaHeight = treemap.areaRect.height;\n        var areaWidth = treemap.areaRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    treemap.areaRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + treemap.areaRect.height);\n                    treemap.areaRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    treemap.areaRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + treemap.areaRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    treemap.areaRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = treemap.areaRect.x;\n                    }\n                    else {\n                        y = treemap.areaRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    process = true;\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    for (var j = 0; j < selectionElements.length; j++) {\n                        if (element.id === selectionElements[j].id) {\n                            process = false;\n                            break;\n                        }\n                    }\n                    if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                        highLightElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                for (var k = 0; k < highLightElements.length; k++) {\n                    element = highLightElements[k];\n                    applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                    element.classList.add('treeMapHighLight');\n                    this.highLightId = targetId;\n                }\n                eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                treemap.trigger(itemHighlight, eventArgs);\n            }\n            else {\n                processHighlight = false;\n            }\n        }\n        else {\n            removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else {\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n            this.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var formatFunction;\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            toolTipHeader = item['name'];\n            value = item['weight'];\n            this.currentTime = new Date().getTime();\n            toolTipData = item['data'];\n            markerFill = item['options']['fill'];\n            tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                    this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n            if (document.getElementById(this.tooltipId)) {\n                tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                tooltipEle = createElement('div', {\n                    id: this.treemap.element.id + '_TreeMapTooltip',\n                    className: 'EJ2-TreeMap-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n            }\n            location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n            location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n            tootipArgs = {\n                cancel: false, name: tooltipRendering, item: item,\n                options: {\n                    location: location, text: tooltipContent, data: toolTipData,\n                    textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                },\n                treemap: this.treemap,\n                element: target, eventArgs: e\n            };\n            this.treemap.trigger(tooltipRendering, tootipArgs);\n            if (!tootipArgs.cancel) {\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    header: '',\n                    data: tootipArgs.options['data'],\n                    template: tootipArgs.options['template'],\n                    content: tootipArgs.options['text'],\n                    shapes: [],\n                    location: tootipArgs.options['location'],\n                    palette: [markerFill],\n                    areaBounds: this.treemap.areaRect,\n                    textStyle: tootipArgs.options['textStyle'],\n                    theme: this.treemap.theme\n                });\n                this.svgTooltip.appendTo(tooltipEle);\n            }\n            else {\n                this.removeTooltip();\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","from","to","minOpacity","maxOpacity","deSaturationColor","rangeValue","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","Number","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","componentToHex","r","g","hex","convertHexToColor","result","exec","ColorValue","colorNameToHex","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","mouseMove","legendItemRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","index","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","dataLength","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","round","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","collection","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","saturatedColor","rgbValue","backgroundColor","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","TreeMap","call","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","themeEffect","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","treeMapLegendModule","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","theme","setTextStyle","subtitleSettings","titleStyle","childElementCount","secondaryElement","legendGroup","insertBefore","background","borderElement","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","dataCount","childData","levelIndex","mainData_1","k","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","_loop_1","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","startEvent","endEvent","targetEle","newDrillItem","layoutID","notify","moveArgs","cursor","treeMapTooltipModule","removeTooltip","removeInteractivePointer","getElementsByClassName","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","Theme","mapsTitleFont","TreeMapLegend","page","legendBorderRect","currentPage","heightIncrement","widthIncrement","textMaxWidth","legendItemRect","legendRenderingCollections","legendCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","colorMapProcess","colorMapping_1","isAddNewLegendData","colors","gradient","stop1Color","colorStop","stop2Color","drawGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","legendElement","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","TreeMapHighlight","processHighlight","treeMapElement","orders","highlight","highLightElements","highLightId","selectionElements","TreeMapSelection","mouseDown","selection","selectionId","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","currentTime","Date","getTime","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}