{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/model/theme.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var color = null;\n        if (colorMapping[i].from && colorMapping[i].to && colorMapping[i].value) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                color = colorMapping[i].color;\n            }\n        }\n        else if ((colorMapping[i].from && colorMapping[i].to) || (colorMapping[i].value)) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                color = colorMapping[i].color;\n            }\n        }\n        if (colorMapping[i].minOpacity && colorMapping[i].maxOpacity && color) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], color, value);\n        }\n        fill = color;\n        opacity = (colorMapping[i].minOpacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 0;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = option['fill'];\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeClassNames } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.themeEffect();\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    /**\n     * To change font styles of map based on themes\n     */\n    TreeMap.prototype.themeEffect = function () {\n        switch (this.theme) {\n            case 'Material':\n            case 'Bootstrap':\n            case 'Fabric':\n                this.setTextStyle('#424242');\n                break;\n            case 'Highcontrast':\n                this.setTextStyle('#FFFFFF');\n                break;\n        }\n    };\n    TreeMap.prototype.setTextStyle = function (color) {\n        this.titleSettings.textStyle.color = this.titleSettings.textStyle.color || color;\n        this.titleSettings.subtitleSettings.textStyle.color = this.titleSettings.subtitleSettings.textStyle.color || color;\n        this.legendSettings.textStyle.color = this.legendSettings.textStyle.color || color;\n        this.legendSettings.titleStyle.color = this.legendSettings.titleStyle.color || color;\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var color = this.theme === 'Highcontrast' ? '#000000' : '#FFFFFF';\n        this.background = this.background ? this.background : color;\n        var borderElement = document.getElementById(this.element.id + '_TreeMap_Border');\n        if (isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else {\n            borderElement.setAttribute('fill', this.background);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color, groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        this.drawLegend();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if (this.treemap.palette.length > 0 && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                this.legendCollections.push({\n                    legendName: child[i]['name'],\n                    legendFill: this.treemap.palette[i % this.treemap.palette.length],\n                    legendData: [],\n                    itemArea: child[i]['weight']\n                });\n            }\n            this.legendCollections.sort(orderByArea);\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n            }\n        }\n    };\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        for (var i = 0; i < data.length; i++) {\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to) {\n                    colorMapProcess = true;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(legendText);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value) {\n                    colorMapProcess = true;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(legendText);\n                }\n                if (colorMapProcess && colorMap.maxOpacity && colorMap.minOpacity && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    var stop1Color = { colorStop: '0%', color: fill };\n                    var stop2Color = { colorStop: '100%', color: fill };\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    colors.push(stop1Color);\n                    colors.push(stop2Color);\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                    gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                if (isAddData && isAddData['process'] && colorMapProcess) {\n                    colorMapProcess = false;\n                    this.legendCollections.push({\n                        legendName: legendText, legendFill: fill, legendData: [], gradientElement: gradientElement\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                }\n                else if (colorMapProcess) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['legendName']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, 1, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, 1, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var areaX = treemap.areaRect.x;\n        var areaY = treemap.areaRect.y;\n        var areaHeight = treemap.areaRect.height;\n        var areaWidth = treemap.areaRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    treemap.areaRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + treemap.areaRect.height);\n                    treemap.areaRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    treemap.areaRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + treemap.areaRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    treemap.areaRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = treemap.areaRect.x;\n                    }\n                    else {\n                        y = treemap.areaRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    process = true;\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    for (var j = 0; j < selectionElements.length; j++) {\n                        if (element.id === selectionElements[j].id) {\n                            process = false;\n                            break;\n                        }\n                    }\n                    if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                        highLightElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                for (var k = 0; k < highLightElements.length; k++) {\n                    element = highLightElements[k];\n                    applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                    element.classList.add('treeMapHighLight');\n                    this.highLightId = targetId;\n                }\n                eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                treemap.trigger(itemHighlight, eventArgs);\n            }\n            else {\n                processHighlight = false;\n            }\n        }\n        else {\n            removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else {\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n            this.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var formatFunction;\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            toolTipHeader = item['name'];\n            value = item['weight'];\n            this.currentTime = new Date().getTime();\n            toolTipData = item['data'];\n            markerFill = item['options']['fill'];\n            tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                    this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n            if (document.getElementById(this.tooltipId)) {\n                tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                tooltipEle = createElement('div', {\n                    id: this.treemap.element.id + '_TreeMapTooltip',\n                    className: 'EJ2-TreeMap-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n            }\n            location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n            location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n            tootipArgs = {\n                cancel: false, name: tooltipRendering, item: item,\n                options: {\n                    location: location, text: tooltipContent, data: toolTipData,\n                    textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                },\n                treemap: this.treemap,\n                element: target, eventArgs: e\n            };\n            this.treemap.trigger(tooltipRendering, tootipArgs);\n            if (!tootipArgs.cancel) {\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    header: '',\n                    data: tootipArgs.options['data'],\n                    template: tootipArgs.options['template'],\n                    content: tootipArgs.options['text'],\n                    shapes: [],\n                    location: tootipArgs.options['location'],\n                    palette: [markerFill],\n                    areaBounds: this.treemap.areaRect,\n                    textStyle: tootipArgs.options['textStyle'],\n                    theme: this.treemap.theme\n                });\n                this.svgTooltip.appendTo(tooltipEle);\n            }\n            else {\n                this.removeTooltip();\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","from","to","minOpacity","maxOpacity","deSaturationColor","rangeValue","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","Number","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","componentToHex","r","g","hex","convertHexToColor","result","exec","ColorValue","colorNameToHex","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","index","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","dataLength","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","round","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","collection","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","saturatedColor","rgbValue","backgroundColor","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","TreeMap","call","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","themeEffect","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","treeMapLegendModule","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","theme","setTextStyle","subtitleSettings","titleStyle","childElementCount","secondaryElement","legendGroup","insertBefore","background","borderElement","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","dataCount","childData","levelIndex","mainData_1","k","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","startEvent","endEvent","targetEle","newDrillItem","layoutID","notify","moveArgs","cursor","treeMapTooltipModule","removeTooltip","removeInteractivePointer","getElementsByClassName","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","Theme","mapsTitleFont","TreeMapLegend","page","legendBorderRect","currentPage","heightIncrement","widthIncrement","textMaxWidth","legendItemRect","legendRenderingCollections","legendCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","colorMapProcess","colorMapping_1","isAddNewLegendData","colors","gradient","stop1Color","colorStop","stop2Color","drawGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","legendElement","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","TreeMapHighlight","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","highLightId","selectionElements","TreeMapSelection","mouseDown","selection","selectionId","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","currentTime","Date","getTime","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}