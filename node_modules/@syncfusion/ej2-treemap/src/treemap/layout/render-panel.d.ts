import { TreeMap } from '../treemap';
import { Rect } from '../utils/helper';
/**
 * To calculate and render the shape layer
 */
export declare class LayoutPanel {
    private treemap;
    private currentRect;
    layoutGroup: Element;
    private renderer;
    renderItems: Object[];
    private parentData;
    constructor(treemap: TreeMap);
    processLayoutPanel(): void;
    private getDrilldownData(data, drillData);
    calculateLayoutItems(data: Object, rect: Rect): void;
    private computeSliceAndDiceDimensional(data, coords);
    private sliceAndDiceProcess(processData, rect);
    private computeSquarifyDimensional(data, coords);
    private calculateChildrenLayout(parent, children, coords);
    private performRowsLayout(data, currentRow, rect, stack);
    private aspectRatio(currentRow, nextDatum, length);
    private findMaxAspectRatio(row, length);
    private cutArea(rect, area);
    private getCoordinates(row, rect);
    private computeTotalArea(data, area);
    renderLayoutItems(renderData: Object): void;
    private renderItemText(text, parentElement, textStyle, rect, interSectAction, groupId, fill, position);
    private getItemColor(isLeafItem, item);
    /**
     * To find saturated color for datalabel
     */
    private getSaturatedColor(color);
    private renderTemplate(secondaryEle, groupId, rect, position, template, item);
    private labelInterSectAction(rect, text, textStyle, alignment);
}
