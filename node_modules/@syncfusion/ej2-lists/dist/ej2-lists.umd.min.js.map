{"version":3,"file":"ej2-lists.umd.min.js","sources":["../src/common/list-base.js","../src/list-view/list-view.js","../src/list-view/virtualization.js"],"sourcesContent":["import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper'\n};\n/**\n * Base List Generator\n */\nexport var ListBase;\n(function (ListBase) {\n    /**\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right'\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, options, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListItemFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData.id;\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])) {\n                    var attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    prepend([createElement('img', { className: cssClass.image, attrs: attr })], li.firstElementChild);\n                }\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    prepend([createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] })], li.firstElementChild);\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            grpItem.id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query=new Query()} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // tslint:disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            json[fields.id] = generateId();\n            var attributes_1 = getAllAttributes(li);\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, fields, options) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var compiledString = compile(template);\n        var liCollection = [];\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], curFields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            var value = fieldData[curFields.value];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                value = fieldData[curFields.value];\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                li.innerText = fieldData[curFields.text];\n            }\n            else {\n                append(compiledString(curItem), li);\n                li.setAttribute('data-value', value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems) {\n        var compiledString = compile(groupTemplate);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var category = curFields.groupBy;\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            var headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            append(compiledString(headerData), header);\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList   \n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            if (!isNullOrUndefined(value)) {\n                li.setAttribute('data-value', value);\n            }\n            li.setAttribute('role', 'option');\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length) {\n                append(innerElements, li);\n            }\n            if (dataSource && fieldData.hasOwnProperty(fields.url) && fieldData[fields.url]) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text));\n            }\n            else {\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper'\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n        }\n        var anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, fields, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            uID = fieldData[fields.id];\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compile(options.groupTemplate);\n            append(compiledString(item), li);\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compile(options.template);\n            append(compiledString(item), li);\n        }\n        else {\n            var innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && fieldData.hasOwnProperty(fields.url) && fieldData[fields.url]) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text));\n            }\n            else {\n                innerDiv.appendChild(createElement('span', {\n                    className: cssClass.text, innerHTML: text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                }));\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     * @param  {liElement} liElement - Specifies LI element.\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            var dataField = fields[field];\n            var value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, formatUnit, isNullOrUndefined, append, detach } from '@syncfusion/ej2-base';\nimport { attributes, addClass, removeClass, prepend, closest, remove } from '@syncfusion/ej2-base';\nimport { Component, EventHandler, Property, Complex, Event } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { Animation, rippleEffect, Touch } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { ListBase, getFieldValues } from '../common/list-base';\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nvar effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nexport var classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listIcon: 'e-list-icon',\n    textContent: 'e-text-content',\n    listItemText: 'e-list-text',\n    groupListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    headerTemplateText: 'e-headertemplate-text',\n    text: 'e-text',\n    disable: 'e-disabled',\n    content: 'e-content',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checklist: 'e-checklist',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist'\n};\nvar FieldSettings = /** @class */ (function (_super) {\n    __extends(FieldSettings, _super);\n    function FieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('id')\n    ], FieldSettings.prototype, \"id\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('isChecked')\n    ], FieldSettings.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property('isVisible')\n    ], FieldSettings.prototype, \"isVisible\", void 0);\n    __decorate([\n        Property('enabled')\n    ], FieldSettings.prototype, \"enabled\", void 0);\n    __decorate([\n        Property('iconCss')\n    ], FieldSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('child')\n    ], FieldSettings.prototype, \"child\", void 0);\n    __decorate([\n        Property('tooltip')\n    ], FieldSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('groupBy')\n    ], FieldSettings.prototype, \"groupBy\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"sortBy\", void 0);\n    __decorate([\n        Property('htmlAttributes')\n    ], FieldSettings.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('tableName')\n    ], FieldSettings.prototype, \"tableName\", void 0);\n    return FieldSettings;\n}(ChildProperty));\nexport { FieldSettings };\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favourite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var lvObj = new ListView({});\n *   lvObj.appendTo(\"#listview\");\n * ```\n */\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function ListView(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    ListView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    this.listBaseOption.fields = this.fields.properties;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false);\n                    }\n                    break;\n                case 'showHeader':\n                    this.header(this.headerTitle, false);\n                    break;\n                case 'enableVirtualization':\n                    detach(this.contentContainer);\n                    this.refresh();\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.setCheckbox();\n                    }\n                    break;\n                case 'dataSource':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'sortOrder':\n                case 'showIcon':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.listBaseOption.showIcon = this.showIcon;\n                        this.curViewDS = this.getSubDS();\n                        this.resetCurrentList();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // Model Changes\n    ListView.prototype.setHTMLAttribute = function () {\n        if (Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    };\n    ListView.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' ').filter(function (css) { return css; }));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' ').filter(function (css) { return css; }));\n        }\n    };\n    ListView.prototype.setSize = function () {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n        this.isWindow = this.element.getBoundingClientRect().height ? false : true;\n    };\n    ListView.prototype.setEnable = function () {\n        this.enableElement(this.element, this.enable);\n    };\n    ListView.prototype.setEnableRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    ListView.prototype.enableElement = function (element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    };\n    //Suport Component Functions\n    ListView.prototype.header = function (text, showBack) {\n        if (this.headerEle === undefined && this.showHeader) {\n            this.headerEle = this.createElement('div', { className: classNames.header });\n            var innerHeaderEle = this.createElement('span', { className: classNames.headerText, innerHTML: this.headerTitle });\n            var textEle = this.createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            var hedBackButton = this.createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            if (this.headerTemplate) {\n                var compiledString = compile(this.headerTemplate);\n                var headerTemplateEle = this.createElement('div', { className: classNames.headerTemplateText });\n                append(compiledString({}), headerTemplateEle);\n                append([headerTemplateEle], this.headerEle);\n            }\n            if (this.headerTemplate && this.headerTitle) {\n                textEle.classList.add('header');\n            }\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                var textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                textEle.innerHTML = text;\n                if (this.headerTemplate && showBack) {\n                    textEle.parentElement.classList.remove('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n                }\n                if (this.headerTemplate && !showBack) {\n                    textEle.parentElement.classList.add('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n                }\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    };\n    // Animation Related Functions\n    ListView.prototype.switchView = function (fromView, toView, reverse) {\n        var _this = this;\n        if (fromView && toView) {\n            var fPos_1 = fromView.style.position;\n            var overflow_1 = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            var anim = void 0;\n            var duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                var slideLeft = 'SlideLeft';\n                anim = effectsConfig[slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function (model) {\n                    fromView.style.display = 'none';\n                    _this.element.style.overflow = overflow_1;\n                    fromView.style.position = fPos_1;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function () {\n                    _this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    };\n    ListView.prototype.preRender = function () {\n        this.listBaseOption = {\n            template: this.template,\n            headerTemplate: this.headerTemplate,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'listitem', listRole: 'list', itemText: '',\n                groupItemRole: 'group', wrapperRole: 'presentation'\n            },\n            fields: this.fields.properties, sortOrder: this.sortOrder, showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this)\n        };\n        this.initialization();\n    };\n    ListView.prototype.initialization = function () {\n        this.curDSLevel = [];\n        this.animateOptions = {};\n        this.curViewDS = [];\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.selectedData = [];\n        this.selectedId = [];\n        this.aniObj = new Animation(this.animateOptions);\n    };\n    ListView.prototype.renderCheckbox = function (args) {\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && this.isValidLI(args.item)) {\n            var checkboxElement = void 0;\n            var fieldData = void 0;\n            checkboxElement = createCheckBox(this.createElement, false, {\n                checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox\n            });\n            checkboxElement.setAttribute('role', 'checkbox');\n            var frameElement_1 = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n                fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (fieldData[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if (((typeof this.dataSource[0] === 'string' ||\n                typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement_1.classList.contains(classNames.checked) ? 'true' : 'false');\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n        }\n    };\n    ListView.prototype.checkInternally = function (args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        args.item.setAttribute('aria-selected', 'true');\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    };\n    /**\n     * It is used to check the checkbox of an item.\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.checkItem = function (item) {\n        this.toggleCheckBase(item, true);\n    };\n    ListView.prototype.toggleCheckBase = function (item, checked) {\n        if (this.showCheckBox) {\n            var liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                checked ? liElement.classList.add(classNames.selected) : liElement.classList.remove(classNames.selected);\n                liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n                checked ? checkboxIcon.classList.add(classNames.checked) : checkboxIcon.classList.remove(classNames.checked);\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n        }\n    };\n    /**\n     * It is used to uncheck the checkbox of an item.\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.uncheckItem = function (item) {\n        this.toggleCheckBase(item, false);\n    };\n    /**\n     * It is used to check all the items in ListView.\n     */\n    ListView.prototype.checkAllItems = function () {\n        this.toggleAllCheckBase(true);\n    };\n    /**\n     * It is used to un-check all the items in ListView.\n     */\n    ListView.prototype.uncheckAllItems = function () {\n        this.toggleAllCheckBase(false);\n    };\n    ListView.prototype.toggleAllCheckBase = function (checked) {\n        if (this.showCheckBox) {\n            for (var i = 0; i < this.liCollection.length; i++) {\n                var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checkIcon) {\n                    if (checked) {\n                        if (!checkIcon.classList.contains(classNames.checked)) {\n                            this.checkItem(this.liCollection[i]);\n                        }\n                    }\n                    else {\n                        if (checkIcon.classList.contains(classNames.checked)) {\n                            this.uncheckItem(this.liCollection[i]);\n                        }\n                    }\n                }\n            }\n            if (this.enableVirtualization) {\n                this.virtualizationModule.checkedItem(checked);\n            }\n        }\n    };\n    ListView.prototype.setCheckbox = function () {\n        var _this = this;\n        if (this.showCheckBox) {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            var args_1 = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            liCollection.forEach(function (element) {\n                args_1.item = element;\n                args_1.curData = _this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                _this.renderCheckbox(args_1);\n                if (args_1.item.classList.contains(classNames.selected)) {\n                    _this.checkInternally(args_1, args_1.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            });\n        }\n        else {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            liCollection.forEach(function (element) {\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            });\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    };\n    ListView.prototype.clickHandler = function (e) {\n        var target = e.target;\n        var classList = target.classList;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n        else {\n            var li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        var args = {\n                            curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li\n                        };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.uncheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (e) {\n                        var eventArgs = this.selectEventData(li, e);\n                        var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        this.trigger('select', eventArgs);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.removeElement = function (element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    };\n    ListView.prototype.hoverHandler = function (e) {\n        var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    };\n    ListView.prototype.leaveHandler = function (e) {\n        this.removeHover();\n    };\n    ;\n    ListView.prototype.homeKeyHandler = function (e, end) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n                this.curUL.querySelector('.' + classNames.selected);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox) {\n                    focusedElement.classList.remove(classNames.selected);\n                }\n            }\n            var index = !end ? 0 : li.length - 1;\n            if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n                li[index].classList.add(classNames.focused);\n            }\n            else {\n                this.setSelectLI(li[index], e);\n            }\n        }\n    };\n    ListView.prototype.onArrowKeyDown = function (e, prev) {\n        var siblingLI;\n        var li;\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n        return siblingLI;\n    };\n    ListView.prototype.arrowKeyHandler = function (e, prev) {\n        var _this = this;\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var siblingLI = this.onArrowKeyDown(e, prev);\n            var elementTop = this.element.getBoundingClientRect().top;\n            var elementHeight = this.element.getBoundingClientRect().height;\n            var firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n            var heightDiff = void 0;\n            var groupItemBounds = void 0;\n            if (this.fields.groupBy) {\n                groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n            }\n            if (siblingLI) {\n                var siblingTop = siblingLI.getBoundingClientRect().top;\n                var siblingHeight = siblingLI.getBoundingClientRect().height;\n                if (!prev) {\n                    var height = this.isWindow ? window.innerHeight : elementHeight;\n                    heightDiff = this.isWindow ? (siblingTop + siblingHeight) :\n                        ((siblingTop - elementTop) + siblingHeight);\n                    if (heightDiff > height) {\n                        this.isWindow ? window.scrollTo(0, pageYOffset + (heightDiff - height)) :\n                            this.element.scrollTo(0, this.element.scrollTop + (heightDiff - height));\n                    }\n                }\n                else {\n                    heightDiff = this.isWindow ? siblingTop : (siblingTop - elementTop);\n                    if (heightDiff < 0) {\n                        this.isWindow ? window.scrollTo(0, pageYOffset + heightDiff) :\n                            this.element.scrollTo(0, this.element.scrollTop + heightDiff);\n                    }\n                }\n            }\n            else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n                this.onUIScrolled = function () {\n                    _this.onArrowKeyDown(e, prev);\n                    _this.onUIScrolled = undefined;\n                };\n                heightDiff = this.virtualizationModule.listItemHeight;\n                this.isWindow ? window.scrollTo(0, pageYOffset - heightDiff) :\n                    this.element.scrollTo(0, this.element.scrollTop - heightDiff);\n            }\n            else if (prev) {\n                if (this.showHeader && this.headerEle) {\n                    var topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n                    var headerBounds = this.headerEle.getBoundingClientRect();\n                    heightDiff = headerBounds.top < 0 ? (headerBounds.height - topHeight) : 0;\n                    this.isWindow ? window.scrollTo(0, pageYOffset - heightDiff)\n                        : this.element.scrollTo(0, 0);\n                }\n                else if (this.fields.groupBy) {\n                    heightDiff = this.isWindow ? (groupItemBounds.top < 0 ? groupItemBounds.top : 0) :\n                        (elementTop - firstItemBounds.top) + groupItemBounds.height;\n                    this.isWindow ? window.scrollTo(0, pageYOffset + heightDiff) :\n                        this.element.scrollTo(0, this.element.scrollTop - heightDiff);\n                }\n            }\n        }\n    };\n    ListView.prototype.enterKeyHandler = function (e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (hasChild && li) {\n                li.classList.remove(classNames.focused);\n                if (this.showCheckBox) {\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.removeHover();\n                }\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.spaceKeyHandler = function (e) {\n        if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                var args = {\n                    curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li\n                };\n                this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n            }\n            else {\n                this.uncheckItem(li);\n            }\n        }\n    };\n    ListView.prototype.keyActionHandler = function (e) {\n        e.preventDefault();\n        switch (e.keyCode) {\n            case 36:\n                this.homeKeyHandler(e);\n                break;\n            case 35:\n                this.homeKeyHandler(e, true);\n                break;\n            case 40:\n                this.arrowKeyHandler(e);\n                break;\n            case 38:\n                this.arrowKeyHandler(e, true);\n                break;\n            case 13:\n                this.enterKeyHandler(e);\n                break;\n            case 8:\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.uncheckAllItems();\n                }\n                this.back();\n                break;\n            case 9:\n                this.tabFocus(e);\n                break;\n            case 32:\n                this.spaceKeyHandler(e);\n                break;\n        }\n    };\n    ListView.prototype.swipeActionHandler = function (e) {\n        if (e.swipeDirection === 'Right') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n    };\n    ListView.prototype.focusout = function () {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n            var activeElement = this.curUL.querySelector('[aria-selected = true]');\n            if (focusedElement && !this.showCheckBox) {\n                focusedElement.classList.remove(classNames.focused);\n                if (activeElement) {\n                    activeElement.classList.add(classNames.selected);\n                }\n            }\n        }\n    };\n    ListView.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        if (!this.enableVirtualization) {\n            EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n            EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        }\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n    };\n    ListView.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        if (!this.enableVirtualization) {\n            EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n            EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        }\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        this.touchModule.destroy();\n    };\n    ListView.prototype.tabFocus = function (e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var selectedList = this.curUL.querySelector('.' + classNames.selected);\n            if ((!selectedList && this.curUL) || this.showCheckBox) {\n                var li = this.curUL.querySelector('.' + classNames.listItem);\n                if (li.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n                    if (isNullOrUndefined(focusedElement)) {\n                        li.classList.add(classNames.focused);\n                    }\n                }\n                else {\n                    this.setSelectLI(li, e);\n                }\n            }\n        }\n    };\n    ListView.prototype.removeFocus = function () {\n        var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (var _i = 0, focusedLI_1 = focusedLI; _i < focusedLI_1.length; _i++) {\n            var ele = focusedLI_1[_i];\n            ele.classList.remove(classNames.focused);\n        }\n    };\n    ListView.prototype.removeHover = function () {\n        var hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    };\n    ListView.prototype.removeSelect = function (li) {\n        if (isNullOrUndefined(li)) {\n            var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n                var ele = selectedLI_1[_i];\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.setAttribute('aria-selected', 'false');\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n    };\n    ListView.prototype.isValidLI = function (li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.groupListItem)\n            && !li.classList.contains(classNames.disable));\n    };\n    ListView.prototype.setCheckboxLI = function (li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            li.classList.add(classNames.focused);\n            var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            if (!checkIcon.classList.contains(classNames.checked)) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n                li.setAttribute('aria-selected', 'true');\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n                li.setAttribute('aria-selected', 'false');\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            var eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setCheckboxLI(li, e);\n            }\n            this.trigger('select', eventArgs);\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.selectEventData = function (li, e) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        var selectedItem;\n        if (!isNullOrUndefined(data)\n            && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n            selectedItem = { item: li, text: li && li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem = { item: li, text: fieldData && fieldData[this.listBaseOption.fields.text], data: data };\n        }\n        var eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, { isInteracted: true, event: e, index: Array.prototype.indexOf.call(this.curUL.children, li) });\n        }\n        return eventArgs;\n    };\n    ListView.prototype.setSelectedItemData = function (li) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (!isNullOrUndefined(data) && ((typeof this.dataSource[0] === 'string') ||\n            (typeof this.dataSource[0] === 'number'))) {\n            this.selectedItems = {\n                item: li,\n                text: li && li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                text: fieldData && fieldData[this.listBaseOption.fields.text],\n                data: data\n            };\n        }\n    };\n    ListView.prototype.setSelectLI = function (li, e) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            li.setAttribute('aria-selected', 'true');\n            this.removeHover();\n            this.setSelectedItemData(li);\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setSelectLI(li, e);\n            }\n            var eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs);\n            this.selectedLI = li;\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.setHoverLI = function (li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    };\n    //Data Source Related Functions\n    ListView.prototype.getSubDS = function () {\n        var levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            var ds = this.localData;\n            for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {\n                var key = levelKeys_1[_i];\n                var field = {};\n                field[this.fields.id] = key;\n                this.curDSJSON = this.findItemFromDS(ds, field);\n                var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    };\n    ListView.prototype.getItemData = function (li) {\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        var fields = this.getElementUID(li);\n        var curDS;\n        if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n            curDS = this.curViewDS;\n        }\n        else {\n            curDS = dataSource;\n        }\n        return this.findItemFromDS(curDS, fields);\n    };\n    ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {\n        var _this = this;\n        var resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some(function (data) {\n                var fieldData = getFieldValues(data, _this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields[_this.fields.id] || fields[_this.fields.text]) &&\n                    (!fields[_this.fields.id] || (!isNullOrUndefined(fieldData[_this.fields.id]) &&\n                        fieldData[_this.fields.id].toString()) === fields[_this.fields.id].toString()) &&\n                    (!fields[_this.fields.text] || fieldData[_this.fields.text] === fields[_this.fields.text])) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields[_this.fields.id]) && isNullOrUndefined(fieldData[_this.fields.id])) {\n                    var li = _this.element.querySelector('[data-uid=\"'\n                        + fields[_this.fields.id] + '\"]');\n                    if (li && li.innerText.trim() === fieldData[_this.fields.text]) {\n                        resultJSON = data;\n                    }\n                }\n                else if (fieldData.hasOwnProperty(_this.fields.child) && fieldData[_this.fields.child].length) {\n                    resultJSON = _this.findItemFromDS(fieldData[_this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    };\n    ListView.prototype.getQuery = function () {\n        var columns = [];\n        var query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column !== 'tableName' && !!(this.fields[column]) &&\n                    this.fields[column] !==\n                        ListBase.defaultMappedFields[column]\n                    && columns.indexOf(this.fields[column]) === -1) {\n                    columns.push(this.fields[column]);\n                }\n            }\n            query.select(columns);\n            if (this.fields.properties.hasOwnProperty('tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    };\n    ListView.prototype.setViewDataSource = function (dataSource) {\n        if (dataSource === void 0) { dataSource = this.localData; }\n        if (dataSource && this.fields.groupBy) {\n            this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy));\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    };\n    ListView.prototype.isInAnimation = function () {\n        return this.curUL.classList.contains('.e-animate');\n    };\n    ListView.prototype.setLocalData = function () {\n        var _this = this;\n        this.trigger('actionBegin');\n        if (this.dataSource instanceof DataManager) {\n            this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.localData = e.result;\n                _this.renderList();\n                _this.trigger('actionComplete', e);\n            }).catch(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.trigger('actionFailure', e);\n            });\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            var ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    };\n    ListView.prototype.reRender = function () {\n        this.element.innerHTML = '';\n        this.headerEle = this.ulElement = this.liCollection = undefined;\n        this.setLocalData();\n        this.header();\n    };\n    ListView.prototype.resetCurrentList = function () {\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    };\n    ListView.prototype.createList = function () {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n    };\n    ListView.prototype.renderSubList = function (li) {\n        var uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            var ul = closest(li.parentNode, '.' + classNames.parentItem);\n            var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (!ele) {\n                var data = this.curViewDS;\n                ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            if (this.selectedItems) {\n                var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n                this.header((fieldData[this.listBaseOption.fields.text]), true);\n            }\n            this.selectedLI = undefined;\n        }\n    };\n    ListView.prototype.renderIntoDom = function (ele) {\n        this.contentContainer.appendChild(ele);\n    };\n    ListView.prototype.renderList = function (data) {\n        this.setViewDataSource(data);\n        if (this.enableVirtualization && Object.keys(this.dataSource).length) {\n            if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n                this.listBaseOption.template = null;\n                this.listBaseOption.groupTemplate = null;\n                this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n            }\n            this.virtualizationModule.uiVirtualization();\n        }\n        else {\n            this.createList();\n            this.contentContainer = this.createElement('div', { className: classNames.content });\n            this.element.appendChild(this.contentContainer);\n            this.renderIntoDom(this.ulElement);\n        }\n    };\n    ListView.prototype.getElementUID = function (obj) {\n        var fields = {};\n        if (obj instanceof Element) {\n            fields[this.fields.id] = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    };\n    /**\n     * It is used to Initialize the control rendering.\n     */\n    ListView.prototype.render = function () {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { role: 'list', tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n    };\n    /**\n     * It is used to destroy the ListView component.\n     */\n    ListView.prototype.destroy = function () {\n        this.unWireEvents();\n        var classAr = [classNames.root, classNames.disable, 'e-rtl',\n            'e-has-header', 'e-control'].concat(this.cssClass.split(' ').filter(function (css) { return css; }));\n        removeClass([this.element], classAr);\n        this.rippleFn();\n        this.element.removeAttribute('role');\n        this.element.removeAttribute('tabindex');\n        this.element.innerHTML = '';\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * It helps to switch back from navigated sub list.\n     */\n    ListView.prototype.back = function () {\n        var pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        var fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        var text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.add(classNames.focused);\n        if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n            li.setAttribute('aria-selected', 'true');\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false));\n    };\n    /**\n     * It is used to select the list item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.selectItem = function (obj) {\n        if (this.enableVirtualization) {\n            this.virtualizationModule.selectItem(obj);\n        }\n        else if (this.showCheckBox) {\n            this.setCheckboxLI(this.getLiFromObjOrElement(obj));\n        }\n        else {\n            isNullOrUndefined(obj) ? this.removeSelect() : this.setSelectLI(this.getLiFromObjOrElement(obj));\n        }\n    };\n    ListView.prototype.getLiFromObjOrElement = function (obj) {\n        var li;\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                if (obj instanceof Element) {\n                    var uid = obj.getAttribute('data-uid').toString();\n                    for (var i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[i];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), function (item) {\n                        if (item.innerText.trim() === obj.toString()) {\n                            li = item;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            else {\n                var resultJSON = this.getItemData(obj);\n                var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (!this.enableVirtualization && isNullOrUndefined(li)) {\n                        var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (var i = 0; i < curLi.length; i++) {\n                            if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                                li = curLi[i];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    };\n    /**\n     * It is used to select multiple list item from the ListView.\n     * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.selectMultipleItems = function (obj) {\n        if (!isNullOrUndefined(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (!isNullOrUndefined(obj[i])) {\n                    this.selectItem(obj[i]);\n                }\n            }\n        }\n    };\n    ListView.prototype.getParentId = function () {\n        var parentId = [];\n        if (this.isNestedList) {\n            for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[i]);\n            }\n        }\n        return parentId;\n    };\n    /**\n     * It is used to get the currently [here](./api-selectedItem.html)\n     *  item details from the list items.\n     */\n    ListView.prototype.getSelectedItems = function () {\n        this.selectedId = [];\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (this.enableVirtualization) {\n            return this.virtualizationModule.getSelectedItems();\n        }\n        else if (this.showCheckBox) {\n            var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            var liTextCollection = [];\n            var liDataCollection = [];\n            this.selectedId = [];\n            var dataParent = [];\n            for (var i = 0; i < liCollection.length; i++) {\n                if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                    liTextCollection.push(liCollection[i].innerText.trim());\n                }\n                else {\n                    var tempData = this.getItemData(liCollection[i]);\n                    var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    if (fieldData) {\n                        liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                        this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    }\n                    else {\n                        liTextCollection.push(undefined);\n                        this.selectedId.push(undefined);\n                    }\n                }\n            }\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                return { item: liCollection, data: dataSource, text: liTextCollection };\n            }\n            if (this.isNestedList) {\n                return { item: liCollection, data: dataParent, text: liTextCollection };\n            }\n            else {\n                return { item: liCollection, data: liDataCollection, text: liTextCollection };\n            }\n        }\n        else {\n            var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            var fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                return (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n            }\n            else {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    return undefined;\n                }\n                else {\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    return {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                }\n            }\n        }\n    };\n    /**\n     * It is used to find out an item details from the current list.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.findItem = function (obj) {\n        return this.getItemData(obj);\n    };\n    /**\n     * A function that used to enable the disabled list items based on passed element.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.enableItem = function (obj) {\n        this.setItemState(obj, true);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.enableItem(obj);\n        }\n    };\n    /**\n     * It is used to disable the list items based on passed element.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.disableItem = function (obj) {\n        this.setItemState(obj, false);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.disableItem(obj);\n        }\n    };\n    //A function that used to set state of the list item like enable, disable.\n    ListView.prototype.setItemState = function (obj, isEnable) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    };\n    /**\n     * It is used to show an list item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.showItem = function (obj) {\n        this.showHideItem(obj, false, '');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.showItem(obj);\n        }\n    };\n    /**\n     * It is used to hide an item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.hideItem = function (obj) {\n        this.showHideItem(obj, true, 'none');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.hideItem(obj);\n        }\n    };\n    ListView.prototype.showHideItem = function (obj, isHide, display) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    };\n    /**\n     * It adds new item to current ListView.\n     * To add a new item in the list view, we need to pass ‘data’ as array or object and ‘fields’ as object.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {{[key:string]:Object}[]} data - Array JSON Data that need to add.\n     * @param  {Fields} fields - Fields as an Object with ID and Text fields.\n     */\n    ListView.prototype.addItem = function (data, fields) {\n        var _this = this;\n        if (fields === void 0) { fields = undefined; }\n        if (!(this.dataSource instanceof DataManager)) {\n            if (data instanceof Array) {\n                if (this.enableVirtualization) {\n                    this.virtualizationModule.addItem(data, fields);\n                }\n                else {\n                    var ds = this.findItemFromDS(this.dataSource, fields);\n                    var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n                    var child = fieldData[this.fields.child];\n                    if (!child) {\n                        child = [];\n                    }\n                    child = child.concat(data);\n                    if (ds instanceof Array) {\n                        data.forEach(function (dataSource) {\n                            _this.dataSource.push(dataSource);\n                            _this.setViewDataSource(_this.dataSource);\n                            if (_this.ulElement) {\n                                var index = _this.curViewDS.indexOf(dataSource);\n                                _this.addListItem(dataSource, index);\n                                var curViewDS = _this.curViewDS[index - 1];\n                                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                                    _this.addListItem(curViewDS, (index - 1));\n                                }\n                            }\n                            else {\n                                _this.reRender();\n                            }\n                        });\n                        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n                    }\n                    else {\n                        ds[this.fields.child] = child;\n                        this.reRender();\n                    }\n                }\n            }\n        }\n    };\n    ListView.prototype.addListItem = function (dataSource, index) {\n        var target = this.getLiFromObjOrElement(this.curViewDS[index + 1]) ||\n            this.getLiFromObjOrElement(this.curViewDS[index + 2]) || null;\n        var li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption);\n        this.ulElement.insertBefore(li[0], target);\n    };\n    /**\n     * A function that removes the item from data source based on passed element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.removeItem = function (obj) {\n        if (!(this.dataSource instanceof DataManager)) {\n            if (this.enableVirtualization) {\n                this.virtualizationModule.removeItem(obj);\n            }\n            else {\n                this.removeItemFromList(obj);\n            }\n        }\n    };\n    ListView.prototype.removeItemFromList = function (obj) {\n        var fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n        var dataSource;\n        dataSource = this.findItemFromDS(this.dataSource, fields, true);\n        if (dataSource) {\n            var data = void 0;\n            data = this.findItemFromDS(dataSource, fields);\n            var index = this.curViewDS.indexOf(data);\n            var li = this.getLiFromObjOrElement(obj);\n            var groupLi = void 0;\n            if (this.fields.groupBy && this.curViewDS[index - 1] &&\n                this.curViewDS[index - 1].isHeader &&\n                (this.curViewDS[index - 1])\n                    .items.length === 1) {\n                if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) &&\n                    (isNullOrUndefined(li.nextElementSibling) || (li.nextElementSibling &&\n                        li.nextElementSibling.classList.contains(classNames.groupListItem)))) {\n                    groupLi = li.previousElementSibling;\n                }\n            }\n            if (li) {\n                detach(li);\n            }\n            if (groupLi) {\n                detach(groupLi);\n            }\n            var dsIndex = dataSource.indexOf(data);\n            dataSource.splice(dsIndex, 1);\n            this.setViewDataSource(this.dataSource);\n            this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        }\n    };\n    /**\n     * A function that removes multiple item from list view based on given input.\n     * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.removeMultipleItems = function (obj) {\n        if (!(this.dataSource instanceof DataManager)) {\n            if (obj.length) {\n                for (var i = 0; i < obj.length; i++) {\n                    if (this.enableVirtualization) {\n                        this.removeItem(obj[i]);\n                    }\n                    else {\n                        this.removeItemFromList(obj[i]);\n                    }\n                }\n            }\n        }\n    };\n    // Module Required function\n    ListView.prototype.getModuleName = function () {\n        return 'listview';\n    };\n    ListView.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualization' });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    ListView.prototype.getPersistData = function () {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    };\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property({})\n    ], ListView.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(true)\n    ], ListView.prototype, \"enable\", void 0);\n    __decorate([\n        Property([])\n    ], ListView.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], ListView.prototype, \"query\", void 0);\n    __decorate([\n        Complex(ListBase.defaultMappedFields, FieldSettings)\n    ], ListView.prototype, \"fields\", void 0);\n    __decorate([\n        Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n    ], ListView.prototype, \"animation\", void 0);\n    __decorate([\n        Property('None')\n    ], ListView.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showCheckBox\", void 0);\n    __decorate([\n        Property('Left')\n    ], ListView.prototype, \"checkBoxPosition\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"headerTitle\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"groupTemplate\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionFailure\", void 0);\n    ListView = __decorate([\n        NotifyPropertyChanges\n    ], ListView);\n    return ListView;\n}(Component));\nexport { ListView };\n","import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.listViewInstance = instance;\n    }\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string'\n            && isNullOrUndefined(this.listViewInstance.fields.groupBy);\n    };\n    Virtualization.prototype.uiVirtualization = function () {\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        this.wireScrollEvent(false);\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) :\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var itemCount = this.listViewInstance.isWindow ? Math.round((window.innerHeight / this.listItemHeight) * 3) :\n            Math.round((this.listViewInstance.height / this.listItemHeight) * 1.5);\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        var _this = this;\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        this.listViewInstance.curViewDS.forEach(function (ds, index) {\n            if (_this.listViewInstance.showCheckBox && ds[_this.listViewInstance.fields.isChecked]) {\n                _this.uiIndices.activeIndices.push(index);\n            }\n            if (!isNullOrUndefined(ds[_this.listViewInstance.fields.enabled]) && !ds[_this.listViewInstance.fields.enabled]) {\n                _this.uiIndices.disabledItemIndices.push(index);\n            }\n        });\n        if (this.isNgTemplate()) {\n            Array.prototype.forEach.call(this.listViewInstance.element.querySelectorAll('.' + classNames.listItem), function (item, index) {\n                item.context = _this.listViewInstance.viewContainerRef._embeddedViews[index].context;\n            });\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function () {\n        return this.listViewInstance.isWindow ? (((pageYOffset - this.startingHeight) <= 0) ? 0 :\n            (pageYOffset - this.startingHeight)) : ((this.listViewInstance.element.scrollTop - this.startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - this.startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function () {\n        if (isNullOrUndefined(this.startingHeight)) {\n            if (this.listViewInstance.isWindow) {\n                this.startingHeight = document.documentElement.getBoundingClientRect().height -\n                    this.listViewInstance.ulElement.getBoundingClientRect().height;\n            }\n            else {\n                this.startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n            }\n            this.scrollPosition = 0;\n        }\n        var scroll = this.getscrollerHeight();\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = ((this.topElementHeight / this.listItemHeight) - this.listDiff);\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = (this.listDiff - (this.topElementHeight / this.listItemHeight));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n            this.listDiff = this.topElementHeight / this.listItemHeight;\n            if (typeof this.listViewInstance.onUIScrolled === 'function') {\n                this.listViewInstance.onUIScrolled();\n            }\n        }\n        this.scrollPosition = scroll;\n        var _a;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var _this = this;\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        Array.prototype.forEach.call(this.listViewInstance.ulElement.querySelectorAll('li'), function (element) {\n            _this.updateUI(element, index);\n            index++;\n        });\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n                curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                curViewDs[index][this.listViewInstance.fields.text].toString();\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    fields[_this.listViewInstance.fields.id].toString()\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString())) || fields === data) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection_1 = [];\n            var textCollection_1 = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    this.uiIndices.activeIndices.forEach(function (index) {\n                        dataCollection_1.push(curViewDS_1[index]);\n                    });\n                    return {\n                        text: dataCollection_1,\n                        data: dataCollection_1,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text_1 = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    this.uiIndices.activeIndices.forEach(function (index) {\n                        textCollection_1.push(curViewDS_2[index][text_1]);\n                        dataCollection_1.push(curViewDS_2[index]);\n                    });\n                    return {\n                        text: textCollection_1,\n                        data: dataCollection_1,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return (_this.listViewInstance.dataSource).indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS_2[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (this.listViewInstance.curViewDS[resutJSON.index - 1] &&\n                this.listViewInstance.curViewDS[resutJSON.index - 1].isHeader &&\n                (this.listViewInstance.curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var index = this.listViewInstance.dataSource.indexOf(dataSource);\n        if (index !== -1) {\n            this.listViewInstance.dataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(this.listViewInstance.dataSource);\n        }\n    };\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        var _this = this;\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            this.listViewInstance.curViewDS.forEach(function (ds, index) {\n                if (!ds.isHeader) {\n                    _this.uiIndices.activeIndices.push(index);\n                }\n            });\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                this.listViewInstance.isWindow ? window.scrollTo(0, (pageYOffset + this.listItemHeight)) :\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = parseFloat(this.topElement.style.height) / this.listItemHeight;\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = parseFloat(this.topElement.style.height) / this.listItemHeight;\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var _this = this;\n        Object.keys(this.uiIndices).forEach(function (key) {\n            _this.uiIndices[key] = _this.uiIndices[key].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        });\n    };\n    Virtualization.prototype.addItem = function (data, fields) {\n        var _this = this;\n        data.forEach(function (dataSource) {\n            _this.listViewInstance.dataSource.push(dataSource);\n            _this.listViewInstance.setViewDataSource(_this.listViewInstance.dataSource);\n            if (!_this.domItemCount) {\n                _this.uiVirtualization();\n            }\n            else if (_this.domItemCount < _this.expectedDomItemCount) {\n                _this.wireScrollEvent(true);\n                detach(_this.listViewInstance.contentContainer);\n                _this.uiVirtualization();\n            }\n            else {\n                var index = _this.listViewInstance.curViewDS.indexOf(dataSource);\n                _this.addUiItem(index);\n                var curViewDS = _this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    _this.addUiItem(index - 1);\n                }\n            }\n        });\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        template.innerHTML = this.listViewInstance.template || commonTemplate;\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        args.item.innerHTML = '';\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        args.item.insertBefore(element.firstElementChild, null);\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            groupTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            flatTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else if (!newData.isHeader) {\n            flatTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else {\n            groupTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n    };\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            resultantOutput.forEach(function (classNameMatch) {\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(_this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(_this.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.classList.remove(subNode.bindedvalue);\n                    element.classList.add(classFunction(value));\n                    subNode.bindedvalue = classFunction(value);\n                };\n                classNameMatch[0].split(' ').forEach(function (className) {\n                    element.classList.remove(className);\n                });\n                element.classList.add(subNode.bindedvalue);\n                _this.updateContextData(listElement, subNode, isHeader);\n            });\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        attributeNames.forEach(function (attributeName) {\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            var attributeNameFunction;\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                _this.updateContextData(listElement, subNode_1, isHeader);\n            }\n        });\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            resultantOutput.forEach(function (textPropertyMatch) {\n                var subNode = {};\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(_this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(_this.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                _this.updateContextData(listElement, subNode, isHeader);\n            });\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        this.listViewInstance.localData = this.listViewInstance.dataSource;\n        this.listViewInstance.renderList();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n                curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            onChange(curViewDS, element);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement) {\n        listElement.context.$implicit = newData;\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"],"names":["getFieldValues","dataItem","fields","fieldData","isNullOrUndefined","isHeader","_i","_a","Object","keys","length","dataField","value","undefined","getValue","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","ListBase","createListFromArray","createElement","dataSource","isSingleLevel","options","generateUL","createListItemFromArray","subChild","curOpt","extend","defaultListBaseOptions","getModuleClass","moduleName","id","generateId","i","itemCreating","curData","generateSingleLevelLI","generateLI","itemCreated","item","push","createListItemFromJson","defaultMappedFields","ariaAttributes","defaultAriaAttributes","child","typeofData","hasOwnProperty","curItem","innerEle","showCheckBox","className","attrs","type","showIcon","iconCss","itemClass","classList","add","setAttribute","toString","tooltip","htmlAttributes","enabled","isVisible","style","display","imageUrl","attr","src","merge","imageAttributes","prepend","firstElementChild","template","ds","element","subDS","hasChildren","processSubChild","subLi","createListFromJson","appendChild","expandCollapse","expandElement","expandIconPosition","append","expandIconClass","querySelector","listClass","indexOf","elementArray","Array","prototype","slice","call","addSorting","sortOrder","sortBy","query","Query","queries","fn","splice","getDataSource","DataManager","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","json","childNodes","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","urlAttributes","data","match","typeof","elementAttributes","class","addClass","split","attributes","index","nodeName","nodeValue","Math","floor","random","substring","innerElements","grpLI","elementID","groupItemRole","itemRole","role","innerText","anchorTag","document","createTextNode","href","innerHTML","uID","groupTemplate","compiledString","compile","innerDiv","wrapperRole","itemText","liElement","ulElement","listRole","isChecked","groupBy","headerTemplate","createList","getSiblingLI","isPrevious","siblingLI","liIndex","liCollections","contains","groupDataSource","curFields","cusQuery","j","itemObj","items","grpItem","key","trim","k","renderContentTemplate","liCollection","renderGroupTemplate","headerItems","category","headerItems_1","header","headerData","generateIcon","__extends","extendStatics","setPrototypeOf","__proto__","d","b","p","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","effectsConfig","None","SlideLeft","SlideDown","Zoom","Fade","effectsRTLConfig","classNames","root","hover","focused","parentItem","listItem","listIcon","listItemText","groupListItem","view","headerText","headerTemplateText","disable","content","backIcon","checkboxWrapper","checkbox","checklist","checkboxIcon","checkboxRight","checkboxLeft","listviewCheckbox","itemCheckList","FieldSettings","_super","apply","Property","ChildProperty","ListView","onPropertyChanged","newProp","oldProp","setHTMLAttribute","setCSSClass","setEnable","setSize","setEnableRTL","listBaseOption","properties","enableVirtualization","virtualizationModule","reRenderUiVirtualization","reRender","curDSLevel","headerTitle","detach","contentContainer","refresh","setCheckbox","curViewDS","getSubDS","resetCurrentList","oldCSSClass","filter","css","removeClass","height","formatUnit","width","isWindow","getBoundingClientRect","enableElement","enable","enableRtl","isEnabled","showBack","headerEle","showHeader","innerHeaderEle","textEle","outerHTML","hedBackButton","headerTemplateEle","parentElement","switchView","fromView","toView","reverse","_this","fPos_1","position","overflow_1","overflow","anim","duration","animation","effect","aniObj","animate","name","timingFunction","easing","end","model","trigger","curUL","preRender","renderCheckbox","bind","initialization","animateOptions","currentLiElements","isNestedList","selectedData","selectedId","Animation","args","isValidLI","checkboxElement","createCheckBox","frameElement_1","checkInternally","checkBoxPosition","insertBefore","checkItem","toggleCheckBase","HTMLLIElement","getLiFromObjOrElement","setSelectedItemData","uncheckItem","checkAllItems","toggleAllCheckBase","uncheckAllItems","checkIcon","checkedItem","args_1","forEach","getItemData","removeElement","selectedItems","clickHandler","e","back","closest","parentNode","removeFocus","eventArgs","selectEventData","removeHover","removeSelect","setSelectLI","setCheckboxLI","removeChild","hoverHandler","curLi","setHoverLI","leaveHandler","homeKeyHandler","focusedElement","onArrowKeyDown","prev","arrowKeyHandler","elementTop","top","elementHeight","firstItemBounds","heightDiff","groupItemBounds","siblingTop","siblingHeight","window","scrollTo","pageYOffset","scrollTop","innerHeight","uiFirstIndex","onUIScrolled","listItemHeight","topHeight","headerBounds","enterKeyHandler","spaceKeyHandler","keyActionHandler","preventDefault","keyCode","tabFocus","swipeActionHandler","swipeDirection","focusout","activeElement","wireEvents","EventHandler","touchModule","Touch","swipe","unWireEvents","destroy","focusedLI_1","hoverLI","selectedLI_1","ele","renderSubList","selectedItem","isInteracted","event","children","selectedLI","lastLi","levelKeys","localData","levelKeys_1","field","curDSJSON","findItemFromDS","curDS","getElementUID","parent","resultJSON","some","getQuery","columns","column","select","from","tableName","setViewDataSource","isInAnimation","setLocalData","executeQuery","then","isDestroyed","result","renderList","catch","setProperties","renderIntoDom","getAttribute","isNgTemplate","createUIItem","uiVirtualization","obj","Element","render","tabindex","rippleFn","rippleEffect","selector","classAr","concat","removeAttribute","pID","pop","toUL","fromUL","selectItem","uid","selectMultipleItems","getParentId","parentId","getSelectedItems","getElementsByClassName","liTextCollection","liDataCollection","dataParent","tempData","findItem","enableItem","setItemState","disableItem","isEnable","showItem","showHideItem","hideItem","isHide","addItem","addListItem","removeItem","removeItemFromList","groupLi","previousElementSibling","nextElementSibling","dsIndex","removeMultipleItems","getModuleName","requiredModules","modules","member","getPersistData","addOnPersist","Complex","Event","NotifyPropertyChanges","Component","Virtualization","instance","listViewInstance","templateRef","firstDs","expectedDomItemCount","ValidateItemCount","domItemCount","uiLastIndex","wireScrollEvent","otherDs","listItems","topElement","bottomElement","totalHeight","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","removeEventListener","onVirtualScroll","onVirtualUiScroll","addEventListener","dataSourceLength","itemCount","round","uiIndices","activeIndices","disabledItemIndices","hiddenItemIndices","context","viewContainerRef","_embeddedViews","getscrollerHeight","startingHeight","documentElement","scrollPosition","scroll","parseFloat","onLongScroll","onNormalScroll","isScrollingDown","updateUI","nextSibling","updateUiContent","curViewDs","dataset","checkListWrapper","changeElementAttributes","checklistElement","activeIndex","findDSAndIndexFromId","dataCollection_1","textCollection_1","curViewDS_1","map","curViewDS_2","text_1","resutJSON","isSelected","removeUiItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","increment","commonTemplate","templateElements","getElementsByTagName","groupTemplateElements","templateData","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","textProperty","classProperty","attributeProperty","onChange","newData","listElement","node","updateContextData","regexMatch","regex","RegExp","resultantOutput","exec","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","attributeNames","attributeName","attributeNameFunction","attributeValueFunction","attrNameMatch","attrValueMatch","subNode_1","attrName","attributeValue","isChildHasTextContent","textPropertyMatch","textFunction","targetElement","onNgChange","$implicit"],"mappings":"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"}