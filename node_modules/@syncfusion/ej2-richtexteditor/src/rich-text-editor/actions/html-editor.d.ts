import { IRichTextEditor, NotifyArgs } from '../base/interface';
import { ServiceLocator } from '../services/service-locator';
/**
 * `HtmlEditor` module is used to HTML editor
 */
export declare class HtmlEditor {
    private parent;
    private locator;
    private contentRenderer;
    private renderFactory;
    private toolbarUpdate;
    private colorPickerModule;
    private nodeSelectionObj;
    private rangeCollection;
    private saveSelection;
    constructor(parent?: IRichTextEditor, serviceLocator?: ServiceLocator);
    /**
     * Destroys the Markdown.
     * @method destroy
     * @return {void}
     */
    destroy(): void;
    private addEventListener();
    private onSelectionSave();
    private onSelectionRestore(e);
    private onKeyDown(e);
    private spaceLink(e?);
    private onToolbarClick(args);
    private renderColorPicker(args);
    private instantiateRenderer();
    private removeEventListener();
    private render();
    /**
     * Called internally if any of the property value changed.
     * @hidden
     */
    protected onPropertyChanged(e: NotifyArgs): void;
    /**
     * For internal use only - Get the module name.
     */
    private getModuleName();
    /**
     * For selecting all content in RTE
     * @private
     */
    private selectAll();
    /**
     * For selecting all content in RTE
     * @private
     */
    private selectRange(e);
    /**
     * For get a selected text in RTE
     * @private
     */
    private getSelectedHtml(e);
}
