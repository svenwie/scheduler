import { IRichTextEditor } from '../base/interface';
import { Dialog, Popup } from '@syncfusion/ej2-popups';
import { ServiceLocator } from '../services/service-locator';
/**
 * `Table` module is used to handle table actions.
 */
export declare class Table {
    element: HTMLElement;
    private rteID;
    private parent;
    private dlgDiv;
    private tblHeader;
    popupObj: Popup;
    editdlgObj: Dialog;
    private contentModule;
    private rendererFactory;
    private quickToolObj;
    private resizeBtnStat;
    private pageX;
    private pageY;
    private curTable;
    private colIndex;
    private columnEle;
    private rowTextBox;
    private columnTextBox;
    private rowEle;
    private l10n;
    private moveEle;
    private helper;
    constructor(parent?: IRichTextEditor, serviceLocator?: ServiceLocator);
    protected addEventListener(): void;
    protected removeEventListener(): void;
    private afterRender();
    private dropdownSelect(e);
    private keyDown(e);
    private onToolbarAction(args);
    private verticalAlign(args, e);
    private tableStyles(args, command);
    private tabSelection(event, selection, ele);
    private tableArrowNavigation(event, selection, ele);
    private setBGColor(args);
    private hideTableQuickToolbar();
    private tableHeader(selection, e);
    private editAreaClickHandler(e);
    private tableCellSelect(e?);
    private tableCellLeave(e?);
    private tableCellClick(e);
    private tableInsert(row, col, e, selectionObj?);
    private cellSelect(e);
    private resizeHelper(e);
    private tableResizeEleCreation(table, e);
    private removeResizeEle();
    private calcPos(elem);
    private getPointX(e);
    private getPointY(e);
    private resizeStart(e);
    private removeHelper(e);
    private appendHelper();
    private setHelperHeight();
    private updateHelper();
    private resizing(e);
    private cancelResizeAction();
    private resizeEnd(e);
    private resizeBtnInit();
    private addRow(selectCell, e, tabkey?);
    private addColumn(selectCell, e);
    private removeRowColumn(selectCell, e);
    private removeTable(selection, args?, delKey?);
    private renderDlgContent(args?);
    private docClick(e);
    private drawTable(tableDiv, args?);
    private editTable(args);
    private insertTableDialog(args);
    private tableCellDlgContent();
    private createDialog(args);
    private customTable(args, e);
    private cancelDialog(e);
    private applyProperties(args, e);
    private tableDlgContent(e);
    /**
     * Destroys the ToolBar.
     * @method destroy
     * @return {void}
     */
    destroy(): void;
    /**
     * For internal use only - Get the module name.
     */
    private getModuleName();
}
