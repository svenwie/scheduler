import { Schedule } from '../base/schedule';
import { MonthEvent } from './month';
/**
 * Timeline view events render
 */
export declare class TimelineEvent extends MonthEvent {
    private startHour;
    private endHour;
    private slotCount;
    private interval;
    private day;
    private renderType;
    private appContainers;
    private dayLength;
    private slotsPerDay;
    private content;
    /**
     * Constructor for timeline views
     */
    constructor(parent: Schedule, type: string);
    getSlotDates(): void;
    getOverlapEvents(date: Date, appointments: {
        [key: string]: Object;
    }[]): Object[];
    renderResourceEvents(): void;
    renderEvents(event: {
        [key: string]: Object;
    }, resIndex: number): void;
    private getStartTime(event, eventData);
    private getNextDay(startTime, eventData);
    private getEndTime(event, eventData);
    private getNormalEventsWidth(startDate, endDate, diffInDays);
    private getSameDayEventsWidth(startDate, endDate);
    private getSpannedEventsWidth(startDate, endDate, diffInDays);
    private isSameDay(startTime, endTime);
    private getAppointmentLeft(schedule, startTime, endTime, day);
    private getPosition(schedule, startTime, endTime, day);
    private getFilterEvents(startDate, endDate, startTime, endTime, gIndex);
    private isAlreadyAvail(appPos, cellTd);
    private getRowTop(resIndex);
}
