define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CellStyle = (function () {
        function CellStyle() {
            this.numFmtId = 0;
            this.backColor = 'none';
            this.fontName = 'Calibri';
            this.fontSize = 14;
            this.fontColor = '#000000';
            this.italic = false;
            this.bold = false;
            this.underline = false;
            this.wrapText = false;
            this.hAlign = 'general';
            this.vAlign = 'bottom';
            this.indent = 0;
            this.numberFormat = 'GENERAL';
            this.type = 'datetime';
            this.borders = new Borders();
            this.isGlobalStyle = false;
        }
        return CellStyle;
    }());
    exports.CellStyle = CellStyle;
    var Font = (function () {
        function Font() {
            this.sz = 14;
            this.name = 'Calibri';
            this.u = false;
            this.b = false;
            this.i = false;
            this.color = 'FF000000';
        }
        return Font;
    }());
    exports.Font = Font;
    var CellXfs = (function () {
        function CellXfs() {
        }
        return CellXfs;
    }());
    exports.CellXfs = CellXfs;
    var Alignment = (function () {
        function Alignment() {
        }
        return Alignment;
    }());
    exports.Alignment = Alignment;
    var CellStyleXfs = (function () {
        function CellStyleXfs() {
        }
        return CellStyleXfs;
    }());
    exports.CellStyleXfs = CellStyleXfs;
    var CellStyles = (function () {
        function CellStyles() {
            this.name = 'Normal';
            this.xfId = 0;
        }
        return CellStyles;
    }());
    exports.CellStyles = CellStyles;
    var NumFmt = (function () {
        function NumFmt(id, code) {
            this.numFmtId = id;
            this.formatCode = code;
        }
        return NumFmt;
    }());
    exports.NumFmt = NumFmt;
    var Border = (function () {
        function Border(mLine, mColor) {
            this.lineStyle = mLine;
            this.color = mColor;
        }
        return Border;
    }());
    exports.Border = Border;
    var Borders = (function () {
        function Borders() {
            this.left = new Border('none', '#FFFFFF');
            this.right = new Border('none', '#FFFFFF');
            this.top = new Border('none', '#FFFFFF');
            this.bottom = new Border('none', '#FFFFFF');
            this.all = new Border('none', '#FFFFFF');
        }
        return Borders;
    }());
    exports.Borders = Borders;
});
