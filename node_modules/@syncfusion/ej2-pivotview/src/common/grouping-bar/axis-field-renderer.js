import { PivotButton } from '../actions/pivot-button';
import * as events from '../../common/base/constant';
import * as cls from '../../common/base/css-constant';
import { createElement, prepend } from '@syncfusion/ej2-base';
/**
 * Module to render Axis Fields
 */
/** @hidden */
var AxisFields = /** @class */ (function () {
    /** Constructor for render module */
    function AxisFields(parent) {
        this.parent = parent;
    }
    /**
     * Initialize the pivot button rendering
     * @returns void
     * @private
     */
    AxisFields.prototype.render = function () {
        this.pivotButton = new PivotButton(this.parent);
        this.createPivotButtons();
        var pivotButtons = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS)
            .querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));
        var vlen = pivotButtons.length;
        for (var j = 0; j < vlen; j++) {
            var indentWidth = 24;
            var indentDiv = createElement('span', {
                className: 'e-indent-div',
                styles: 'width:' + j * indentWidth + 'px'
            });
            prepend([indentDiv], pivotButtons[j]);
        }
    };
    AxisFields.prototype.createPivotButtons = function () {
        var fields = [this.parent.dataSource.rows, this.parent.dataSource.columns, this.parent.dataSource.values, this.parent.dataSource.filters];
        this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS).innerHTML = '';
        this.parent.element.querySelector('.' + cls.GROUP_COLUMN_CLASS).innerHTML = '';
        this.parent.element.querySelector('.' + cls.GROUP_VALUE_CLASS).innerHTML = '';
        this.parent.element.querySelector('.' + cls.GROUP_FILTER_CLASS).innerHTML = '';
        var axis = ['rows', 'columns', 'values', 'filters'];
        var count = axis.length;
        for (var i = 0, lnt = fields.length; i < lnt; i++) {
            if (fields[i]) {
                var args = {
                    field: fields[i],
                    axis: axis[i].toString()
                };
                this.parent.notify(events.pivotButtonUpdate, args);
            }
        }
    };
    return AxisFields;
}());
export { AxisFields };
