import { IGrid, IAction } from '../base/interface';
export declare const resizeClassList: ResizeClasses;
export interface ResizeClasses {
    root: string;
    suppress: string;
    icon: string;
    helper: string;
    header: string;
    cursor: string;
}
/**
 * `Resize` module is used to handle Resize to fit for columns.
 * @hidden
 * @private
 */
export declare class Resize implements IAction {
    private content;
    private header;
    private pageX;
    private column;
    private element;
    private helper;
    private tapped;
    private isDblClk;
    private minMove;
    private parentElementWidth;
    isFrozenColResized: boolean;
    private parent;
    private widthService;
    /**
     * Constructor for the Grid resize module
     * @hidden
     */
    constructor(parent?: IGrid);
    /**
     * Resize by field names.
     * @param  {string|string[]} fName - Defines the field name.
     * @return {void}
     */
    autoFitColumns(fName?: string | string[]): void;
    private resizeColumn(fName, index, id?);
    /**
     * To destroy the resize
     * @return {void}
     * @hidden
     */
    destroy(): void;
    /**
     * For internal use only - Get the module name.
     * @private
     */
    protected getModuleName(): string;
    private findColumn(fName);
    /**
     * To create table for autofit
     * @hidden
     */
    protected createTable(table: Element, text: Element[], tag: string): number;
    /**
     * @hidden
     */
    addEventListener(): void;
    /**
     * @hidden
     */
    removeEventListener(): void;
    /**
     * @hidden
     */
    render(): void;
    private refreshHeight();
    private wireEvents();
    private unwireEvents();
    private getResizeHandlers();
    private setHandlerHeight();
    private callAutoFit(e);
    private resizeStart(e);
    private cancelResizeAction(removeEvents?);
    private getWidth(width, minWidth, maxWidth);
    private resizing(e);
    private resizeEnd(e);
    private getPointX(e);
    private refreshColumnWidth();
    private getTargetColumn(e);
    private updateCursor(action);
    private refresh();
    private appendHelper();
    private setHelperHeight();
    private getScrollBarWidth(height?);
    private removeHelper(e);
    private updateHelper();
    private calcPos(elem);
    private doubleTapEvent(e);
    private getUserAgent();
    private timeoutHandler();
}
