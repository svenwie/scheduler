import { IGrid, IAction, NotifyArgs } from '../base/interface';
/**
 *
 * The `Reorder` module is used for reordering columns.
 */
export declare class Reorder implements IAction {
    private element;
    private upArrow;
    private downArrow;
    private x;
    private timer;
    private parent;
    /**
     * Constructor for the Grid reorder module
     * @hidden
     */
    constructor(parent?: IGrid);
    private chkDropPosition(srcElem, destElem);
    private chkDropAllCols(srcElem, destElem);
    private findColParent(col, cols, parent);
    private getColumnsModel(cols);
    private headerDrop(e);
    private isActionPrevent(gObj);
    private moveColumns(destIndex, column);
    private targetParentContainerIndex(srcElem, destElem);
    private getHeaderCells();
    private getColParent(column, columns);
    /**
     * Changes the position of the Grid columns by field names.
     * @param  {string} fromFName - Defines the origin field name.
     * @param  {string} toFName - Defines the destination field name.
     * @return {void}
     */
    reorderColumns(fromFName: string, toFName: string): void;
    private enableAfterRender(e);
    private createReorderElement();
    /**
     * The function used to trigger onActionComplete
     * @return {void}
     * @hidden
     */
    onActionComplete(e: NotifyArgs): void;
    /**
     * To destroy the reorder
     * @return {void}
     * @hidden
     */
    destroy(): void;
    private drag(e);
    private updateScrollPostion(e);
    private setScrollLeft(scrollElem, isLeft);
    private stopTimer();
    private updateArrowPosition(target, isLeft);
    private dragStart(e);
    private dragStop(e);
    private setDisplay(display);
    /**
     * For internal use only - Get the module name.
     * @private
     */
    protected getModuleName(): string;
}
