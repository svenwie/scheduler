import { IGrid, IAction } from '../base/interface';
import { ServiceLocator } from '../services/service-locator';
/**
 * 'column menu module used to handle column menu actions'
 * @hidden
 */
export declare class ColumnMenu implements IAction {
    private element;
    private gridID;
    private parent;
    private serviceLocator;
    private columnMenu;
    private l10n;
    private defaultItems;
    private localeText;
    private targetColumn;
    private disableItems;
    private hiddenItems;
    private headerCell;
    private isOpen;
    private eventArgs;
    private GROUP;
    private UNGROUP;
    private ASCENDING;
    private DESCENDING;
    private ROOT;
    private FILTER;
    private POP;
    private WRAP;
    private CHOOSER;
    constructor(parent?: IGrid, serviceLocator?: ServiceLocator);
    wireEvents(): void;
    unwireEvents(): void;
    /**
     * To destroy the resize
     * @return {void}
     * @hidden
     */
    destroy(): void;
    columnMenuHandlerClick(e: Event): void;
    private openColumnMenu(e);
    columnMenuHandlerDown(e: Event): void;
    private getColumnMenuHandlers();
    /**
     * @hidden
     */
    addEventListener(): void;
    /**
     * @hidden
     */
    removeEventListener(): void;
    private enableAfterRenderMenu(e);
    private render();
    private wireFilterEvents();
    private unwireFilterEvents();
    private beforeMenuItemRender(args);
    private columnMenuBeforeClose(args);
    private isChooserItem(item);
    private columnMenuBeforeOpen(args);
    private ensureDisabledStatus(item);
    private columnMenuItemClick(args);
    private columnMenuOnClose(args);
    private getDefaultItems();
    private getItems();
    private getDefaultItem(item);
    private getLocaleText(item);
    private generateID(item, append?);
    private getKeyFromId(id, append?);
    getColumnMenu(): HTMLElement;
    private getModuleName();
    private setLocaleKey();
    private getHeaderCell(e);
    private getColumn();
    private createChooserItems();
    private appendFilter(e);
    private getFilter(target, id, isClose?);
    private setPosition(li, ul);
    private filterPosition(e);
    private getDefault();
    private isFilterPopupOpen();
    private getFilterPop();
    private isFilterItemAdded();
}
