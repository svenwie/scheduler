{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { SvgRenderer, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.split(gauge.element.id + '_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLineColor = null;\n    /** @private */\n    Theme.tickLineColor = null;\n    /** @private */\n    Theme.pointerColor = null;\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#000000')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: '#ffffff', size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(Theme.axisLineColor)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(Theme.tickLineColor)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#ffffff')\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(Theme.pointerColor)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(Theme.pointerColor)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = templateFn(axis);\n                while (templateElement.length > 0) {\n                    childElement.appendChild(templateElement[0]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tooltipContent = [];\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            target = e.target;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var location_1 = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(this.currentPointer.currentValue)) :\n                format(this.currentPointer.currentValue);\n            location_1.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location_1.x + 10) : location_1.x;\n            this.findPosition(angle, content, location_1);\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location_1, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && Object.keys(template).length === 1) {\n                template = template[Object.keys(template)[0]];\n            }\n            if (!tooltipArgs.cancel) {\n                tooltipArgs['tooltip']['properties']['textStyle']['color'] = (this.gauge.theme === 'Highcontrast') ? '#00000' : '#FFFFFF';\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    header: '',\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    shapes: [],\n                    location: tooltipArgs.location,\n                    palette: [],\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: (this.gauge.theme === 'Highcontrast') ? '#FFFFFF' : tooltipArgs.tooltip.fill,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border,\n                    theme: this.gauge.theme\n                });\n                this.svgTooltip.appendTo(this.tooltipEle);\n            }\n            else {\n                this.removeTooltip();\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (angle, text, location) {\n        var svgRect = this.gauge.svgObject.getBoundingClientRect();\n        var elementRect = this.gauge.element.getBoundingClientRect();\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, axis.lineStyle.color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, style.font.color) : style.font.color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, minorLineStyle.color) : minorLineStyle.color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, majorLineStyle.color) : majorLineStyle.color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            if (startValue !== endValue) {\n                startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n                endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (range.roundedCornerRadius / 4)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (range.roundedCornerRadius / 4)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    range.roundedCornerRadius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    range.roundedCornerRadius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getRoundedPathArc(gauge.midPoint, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), Math.floor(oldStart), Math.ceil(oldEnd), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, pointer.cap.color, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (pointer.roundedCornerRadius / 4)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEnd = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (pointer.roundedCornerRadius / 4)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundedStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            pointer.roundedCornerRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundedEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            pointer.roundedCornerRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius) {\n                    element.setAttribute('d', getRoundedPathArc(location, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var sweepAngle;\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(i)) :\n                    format(i),\n                value: i\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, Complex, Browser } from '@syncfusion/ej2-base';\nimport { Event, SvgRenderer, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.themeEffect();\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    CircularGauge.prototype.themeEffect = function () {\n        if (this.theme === 'Highcontrast') {\n            this.titleStyle.color = this.titleStyle.color || '#FFFFFF';\n            this.setThemeColors('#FFFFFF', '#FFFFFF');\n        }\n        else {\n            this.titleStyle.color = this.titleStyle.color || '#424242';\n            this.setThemeColors('#212121', '#757575');\n        }\n    };\n    CircularGauge.prototype.setThemeColors = function (labelcolor, others) {\n        for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.lineStyle.color = axis.lineStyle.color || others;\n            axis.labelStyle.font.color = axis.labelStyle.font.color || labelcolor;\n            axis.majorTicks.color = axis.majorTicks.color || others;\n            axis.minorTicks.color = axis.minorTicks.color || others;\n            for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                var pointer = _c[_b];\n                pointer.color = pointer.color || others;\n                pointer.needleTail.color = pointer.needleTail.color || others;\n                pointer.needleTail.border.color = pointer.needleTail.border.color || others;\n                pointer.cap.color = pointer.cap.color || others;\n                pointer.cap.border.color = pointer.cap.border.color || others;\n            }\n        }\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.calculateBounds();\n        this.renderElements();\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.activePointer.value = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        var rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background !== null && this.background !== 'transparent')) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        pointer.currentValue = value;\n        pointer.value = value;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.removeSvg();\n            this.renderElements();\n        }\n        if (refreshBounds) {\n            this.removeSvg();\n            this.calculateBounds();\n            this.renderElements();\n        }\n        if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n            this.removeSvg();\n            this.calculateBounds();\n            this.renderElements(false);\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","height","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","axisLineColor","tickLineColor","pointerColor","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","annotationRender","gaugeMouseMove","gaugeMouseLeave","gaugeMouseDown","Annotations","elementId","renderAnnotation","axis","index","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","templateElement","updateLocation","currentRadius","midPoint","elementRect","left","top","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","type","isTouch","pointerType","currentPointer","currentAxis","currentValue","visibleRange","direction","location_1","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","replace","RegExp","findPosition","tooltipArgs","pointer","event","keys","removeTooltip","theme","svgTooltip","Tooltip","enable","header","data","enableAnimation","shapes","palette","inverted","arrowInverted","areaBounds","tooltipRect","appendTo","addLeft","addTop","addHeight","addWidth","svgRect","svgObject","abs","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","length_1","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","toFixed","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","roundedCornerRadius","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","cap","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","_i","_a","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","availableSize","CircularGauge","preRender","unWireEvents","themeEffect","initPrivateVariable","setCulture","createSvg","wireEvents","titleStyle","setThemeColors","labelcolor","others","_b","_c","render","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","preventDefault","stopPropagation","gaugeAxisLayoutPanel","changedTouches","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","offsetWidth","containerHeight","offsetHeight","margin","titleHeight","title","right","bottom","centerX","centerY","renderBorder","renderTitle","tabIndex","borderWidth","drawRectangle","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","Event","NotifyPropertyChanges","Component"],"mappings":"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"}