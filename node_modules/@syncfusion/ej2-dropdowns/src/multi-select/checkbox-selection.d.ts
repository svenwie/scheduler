import { IMulitSelect } from './interface';
import { InputObject } from '@syncfusion/ej2-inputs';
import { KeyboardEventArgs } from '@syncfusion/ej2-base';
/**
 * The Multiselect enable CheckBoxSelection call this inject module.
 */
export declare class CheckBoxSelection {
    private parent;
    private checkAllParent;
    private selectAllSpan;
    filterInput: HTMLInputElement;
    private filterParent;
    private filterInputObj;
    private backIconElement;
    private clearIconElement;
    private checkWrapper;
    list: HTMLElement;
    private activeLi;
    private activeEle;
    constructor(parent?: IMulitSelect);
    getModuleName(): string;
    addEventListener(): void;
    removeEventListener(): void;
    listOption(args: {
        [key: string]: Object;
    }): void;
    private setPlaceholder(props);
    private checboxCreate(e);
    private setSelectAll();
    destroy(): void;
    listSelection(args: IUpdateListArgs): void;
    private validateCheckNode(checkWrap, isCheck, li?, e?, selectAll?);
    private clickHandler(e);
    private changeState(wrapper, state, e?, isPrevent?, selectAll?);
    protected setSearchBox(args: IUpdateListArgs): InputObject | void;
    private clickOnBackIcon(e);
    private clearText(e);
    private setDeviceSearchBox();
    private setSearchBoxPosition();
    protected targetElement(): string;
    private onBlur(e);
    protected onDocumentClick(e: MouseEvent): void;
    private getFocus(e);
    private checkSelectAll(e);
    private setLocale(unSelect?);
    private getActiveList(args);
    private setReorder(args);
}
export interface ItemCreatedArgs {
    curData: {
        [key: string]: Object;
    };
    item: HTMLElement;
    text: string;
}
export interface IUpdateListArgs {
    module: string;
    enable: boolean;
    li: HTMLElement;
    e: MouseEvent | KeyboardEventArgs;
    popupElement: HTMLElement;
    value: string;
    index: number;
}
