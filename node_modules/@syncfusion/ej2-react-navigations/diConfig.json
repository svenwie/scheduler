{
    "name": "Navigations",
    "keywords": {
        "common": [
            "ej2",
            "syncfusion",
            "web-components",
            "javascript",
            "typescript",
            "model",
            "toolbar",
            "horizontal-scroll",
            "ribbon",
            "navbar",
            "navigation-bar",
            "toolbar-customization",
            "scrollable-toolbar",
            "toolbar-popup",
            "multirow-toolbar",
            "extended-toolbar",
            "overflow",
            "command-buttons",
            "accordion",
            "panelbar",
            "ejTab",
            "tab",
            "tabStrip",
            "scrollable-tab",
            "popup-tab",
            "multirow-tab",
            "header-orientation",
            "close-tab",
            "tab-wizard",
            "tab-with-menu",
            "ejAccordion",
            "accordion",
            "accordion-wizard",
            "multiple-open-panel-bar",
            "multiple-open-accordion",
            "panel-bar",
            "collapsible-panel-bar",
            "context-menu",
            "context menu",
            "contextmenu",
            "ej2 contextmenu",
            "tab-directive",
            "toolbar-directive",
            "accordion-directive",
            "sidebar",
            "dock size",
            "showbackdrop",
            "target",
            "position",
            "dock",
            "gestures",
            "sticky-sidebar",
            "fixed",
            "hamburger",
            "sidenav",
            "nav",
            "hamburger-menu",
            "side-menu",
            "navigation-bar",
            "sticky",
            "drawer",
            "slidebar",
            "slide",
            "slide-panel",
            "multiple-sidebar",
            "slide-navigation",
			"navigation-drawer",
            "menu",
            "menu bar",
            "ej2 menu",
            "menu items",
            "menu item",
            "menu-item",
            "ej menu",
            "treeview", "tree", "ej2-treeview", "tree structure", "hierarchical structure", "tree navigation", "treeview-checkbox", "drag and drop", "tree editing", "load-on-demand", "accordion tree", "tree node template", "tree multi selection"
        ],
        "angular": ["angular", "ng", "ng-template", "ej2-ng-navigations", "ej2-angular-navigations","angular-navigations","ng-navigations", "angular-toolbar", "ng-toolbar", "angular-tab","ng-tab","ng-react", "angular-routing", "ng-routing", "angular-tab-routing", "ng-tab-routing", "ng-contextmenu", "angular-contextmenu", "angular-treeview",
            "ng-tree", "ng-treeview", "angular tree", "angular treeview", "angular2-treeview", "ng-menu", "angular menu", "angular menubar"],
        "react": ["react", "ej2-react-navigations"," react-navigations", "react-toolbar"," react-tab"," react-react","react-routing" , " react-contextmenu", "react tree", "react treeview", "react tree component", "react menu", "react menu component"],
        "vue": ["vue", "ej2-vue-navigations"," vue-navigations", "vue-toolbar"," vue-tab"," vue-react","vue-routing" , " vue-contextmenu", "vue tree", "vue treeview", "vue tree component", "vue menu", "vue menu component"]
      },
    "description": "Navigation Components",
    "components": [
        {
            "baseClass": "Accordion",
            "directoryName": "accordion",
            "type": "simple",
            "defaultTag": "<div id='ej2Accordion'></div>",
            "twoWays": [],
            "comment": [
                "/**",
                " * Represents the Essential JS 2 Angular Accordion Component.",
                " * ```html",
                " * <ejs-accordion></ejs-accordion>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `AccordionComponent` represents the react Accordion Component.",
                " * ```ts",
                " * <AccordionComponent ></AccordionComponent",
                " * ```",
                " */"
            ],
            "vueComment": [
                "/**",
                " * Represents the EJ2 VueJS Accordion Component.",
                " * ```html",
                " * <ejs-accordion  :items='accordionItems'></ejs-accordion>",
                " * ```",
                " */"
             ],
            "tagDirective": [
                {
                    "arrayDirectiveClassName": "AccordionItems",
                    "directiveClassName": "AccordionItem",
                    "parentName": "AccordionItems",
                    "propertyName": "items",
                    "baseClass": "AccordionItem",
                    "comment": [
                        "/**",
                        " * ItemDirective represent a item of the Essential JS 2 Angular Accordion.",
                        " * ```html",
                        " * <ejs-accordion > ",
                        " *   <e-accordionitems>",
                        " *    <e-accordionitem header='Header1'></e-accordionitem>",
                        " *    <e-accordionitem header='Header2' content='Content2'></e-accordionitem>",
                        " *   </e-accordionitems>",
                        " * </ejs-accordion>",
                        " * ```",
                        " */"
                    ],
                    "reactComment": [
                        "/**",
                        " * `ItemDirective` directive represent a item of the react Accordion. ",
                        " * It must be contained in a Accordion component(`Accordion`). ",
                        " * ```tsx",
                        " * <AccordionComponent> ",
                        " * <AccordionItemsDirective>",
                        " * <AccordionItemDirective  header='Header1'></AccordionItemDirective>",
                        " * <AccordionItemDirective  header='Header2' content='Content2'></AccordionItemDirective>",
                        " * <AccordionItemsDirective>",
                        " * </AccordionComponent>",
                        " * ```",
                        " */"
                    ],
                    "templateProperties": [
                        "header",
                        "content"
                    ]
                }
            ],
          "complexDirective": [
            {
              "propertyName": "animation",
              "baseClass": "AccordionAnimationSettings"
            },
            {
              "propertyName": "collapse",
              "baseClass": "AccordionActionSettings"
            },
            {
              "propertyName": "expand",
              "baseClass": "AccordionActionSettings"
            }
          ]
          },
        {
            "baseClass": "Toolbar",
            "directoryName": "toolbar",
            "type": "simple",
            "defaultTag": "<div id='ej2Toolbar'></div>",
            "twoWays": [],
            "comment": [
                "/**",
                " * Represents the Essential JS 2 Angular Toolbar Component.",
                " * ```html",
                " * <ejs-toolbar></ejs-toolbar>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `ToolbarComponent` represents the react Toolbar Component.",
                " * ```ts",
                " * <ToolbarComponent overflowMode= 'Popup' ></ToolbarComponent",
                " * ```",
                " */"
            ],
            "vueComment": [
                "/**",
                " * Represents the Essential JS 2 VueJS Toolbar Component.",
                " * ```html",
                " * <ejs-toolbar  :items='toolbarItems'></ejs-toolbar>",
                " * ```",
                " */"
             ],
            "tagDirective": [
                {
                    "arrayDirectiveClassName": "items",
                    "directiveClassName": "item",
                    "parentName": "items",
                    "propertyName": "items",
                    "baseClass": "Item",
                    "comment": [
                        "/**",
                        " * ItemDirective represent a item of the Essential JS 2 Angular Toolbar.",
                        " * ```html",
                        " * <ejs-toolbar > ",
                        " *   <e-items>",
                        " *    <e-item text='Cut'></e-item>",
                        " *    <e-item text='Copy'></e-item>",
                        " *   </e-items>",
                        " * </ejs-toolbar>",
                        " * ```",
                        " */"
                    ],
                    "reactComment": [
                        "/**",
                        " * `ItemDirective` directive represent a item of the react Toolbar. ",
                        " * It must be contained in a Toolbar component(`Toolbar`). ",
                        " * ```tsx",
                        " * <ToolbarComponent> ",
                        " * <ItemsDirective>",
                        " * <ItemDirective text='Cut'></ItemDirective>",
                        " * <ItemDirective text='Copy'></ItemDirective>",
                        " * <ItemsDirective>",
                        " * </ToolbarComponent>",
                        " * ```",
                        " */"
                    ],
                    "templateProperties": [
                        "template"
                    ]
                }
            ]
        },
         {
            "baseClass": "ContextMenu",
            "directoryName": "context-menu",
            "type": "simple",
            "defaultTag": "<ul id='contextmenu'></ul>",
            "preferredTag": "ul",
            "twoWays": [],
            "comment": [
                "/**",
                " * Represents the EJ2 Angular ContextMenu Component.",
                " * ```html",
                " * <div id='target'>Right click / Touch hold to open the ContextMenu</div>",
                " * <ejs-contextmenu target='#target' [items]='menuItems'></ejs-contextmenu>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `ContextMenuComponent` represents the react ContextMenu Component.",
                " * ```ts",
                " * <div id='target'>Right click / Touch hold to open the ContextMenu</div>",
                " * <ContextMenuComponent target='#target' items={menuItems} />",
                " * ```",
                " */"
            ],
            "vueComment": [
                "/**",
                " * Represents the Essential JS 2 VueJS ContextMenu Component.",
                " * ```html",
                " * <div id='target'>Right click / Touch hold to open the ContextMenu</div>",
                " * <ejs-contextmenu target='#target' :items='menuItems'></ejs-contextmenu>",
                " * ```",
                " */"
             ],
            "complexDirective": [
                {
                    "baseClass": "MenuAnimationSettings",
                    "propertyName": "animationSettings",
                    "aspSelectorName": "e-contextmenu-animationsettings"
                }
            ]
        },
        {
            "baseClass": "Tab",
            "directoryName": "tab",
            "type": "simple",
            "defaultTag": "<div id='ej2Tab'></div>",
            "twoWays": [],
            "comment": [
                "/**",
                " * Represents the EJ2 Angular Tab Component.",
                " * ```html",
                " * <ejs-tab overflowMode= 'Popup'></ejs-tab>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `TabComponent` represents the react Tab Component.",
                " * ```ts",
                " * <TabComponent overflowMode= 'Popup'></TabComponent>",
                " * ```",
                " */"
            ],
            "vueComment": [
                "/**",
                " * Represents the EJ2 VueJS Tab Component.",
                " * ```html",
                " * <ejs-tab  :items='tabItems'></ejs-tab>",
                " * ```",
                " */"
             ],
            "tagDirective": [
                {
                    "baseClass": "TabItem",
                    "propertyName": "items",
                    "directiveClassName": "tabItem",
                    "arrayDirectiveClassName": "tabItems",
                    "comment": [
                        "/**",
                        " * TabItemDirective represent a item of the EJ2 Angular Tab.",
                        " * ```html",
                        " * <ejs-tab>",
                        " *  <e-tabitems>",
                        " *   <e-tabitem [header]='Header 1' [content]='Content 1'></e-tabitem>",
                        " *   <e-tabitem [header]='Header 2' [content]='Content 2'></e-tabitem>",
                        " *  <e-tabitems> ",
                        " * </ejs-tab>",
                        " * ```",
                        " */"
                    ],
                    "reactComment": [
                        "/**",
                        " * `TabItemDirective` directive represent a column of the react Tab. ",
                        " * It must be contained in a Tab component(`Tab`). ",
                        " * ```ts",
                        " * <TabComponent ",
                        " *  <TabItemsDirective>",
                        " *   <TabItemDirective header= { 'Header 1' } content= { 'Content 1' } />",
                        " *   <TabItemDirective header= { 'Header 2' } content= { 'Content 2' } />",
                        " *  <TabItemsDirective>",
                        " * </TabComponent>",
                        " * ```",
                        " */"
                    ],
                    "templateProperties": [
                        "content",
                        "header.text"
                    ],
                    "complexDirective": [
                        {
                            "propertyName": "header",
                            "baseClass": "Header"
                        }]
                }
            ],
            "complexDirective": [
                {
                    "propertyName": "animation",
                    "baseClass": "TabAnimationSettings"
                },
                {
                    "propertyName": "previous",
                    "baseClass": "TabActionSettings"
                },
                {
                    "propertyName": "next",
                    "baseClass": "TabActionSettings"
                }
            ]
        },{
           "baseClass": "TreeView",
           "directoryName": "treeview",
           "type": "simple",
           "dynamicModules": [ ],
           "twoWays": [ ],
           "comment": [
              "/**",
              " * TreeView component is used to represent the hierarchical data in tree like structure with advanced functions to perform edit, drag and drop, selection with check-box and more.",
              " * ```html",
              " * <ej-treeview allowDragAndDrop='true'></ej-treeview>",
              " * ```",
              " */"
            ],
          "reactComment": [
             "/**",
             " * `TreeViewComponent` represents the react TreeView Component.",
             " * ```ts",
             " * <TreeViewComponent allowDragAndDrop={true}></TreeViewComponent>",
             " * ```",
             " */"
           ],
           "vueComment": [
               "/**",
               " * Represents the EJ2 VueJS TreeView Component.",
               " * ```html",
               " * <ejs-treeview></ejs-treeview>",
               " * ```",
               " */"
            ],
          "complexDirective": [
                {
                    "propertyName": "fields",
                    "baseClass": "FieldsSettings",
                    "SelectorName": "e-treeview-fields",
                    "complexDirective": [
                        {
                            "propertyName": "child",
                            "baseClass": "FieldsSettings",
                            "aspSelectorName":"e-treeview-child"
                        }
                    ] 
                },
                {
                    "propertyName": "animation",
                    "baseClass": "NodeAnimationSettings",
                    "SelectorName": "e-treeview-animation",
                    "complexDirective": [
                        {
                            "propertyName": "actionSettings",
                            "baseClass": "ActionSettings",
                            "aspSelectorName": "e-treeview-collapse"
                        },
                        {
                            "propertyName": "actionSettings",
                            "baseClass": "ActionSettings",
                            "aspSelectorName": "e-treeview-expand"
                        }
                    ]
                }
                
            ],
        "templateProperties": [
          "nodeTemplate"
        ]
      },

      {
            "baseClass": "Sidebar",
            "directoryName": "sidebar",
            "type": "container",
            "dynamicModules": [],
            "twoWays": ["isOpen"],
            "comment": [
                "/**",
                " * Represents the Essential JS 2 Angular Sidebar Component.",
                " * ```html",
                " * <ejs-sidebar></ejs-sidebar>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `SidebarComponent` represents the Essential JS 2 React Sidebar Component.",
                " * ```ts",
                " * <SidebarComponent></SidebarComponent>",
                " * ```",
                " */"
            ],
			 "vueComment": [
                "/**",
                " *  Represents the Essential JS 2 VueJS Sidebar Component.",
                " * ```html",
                " * <ejs-sidebar></ejs-sidebar>",
                " * ```",
                " */"
            ]
        },
        {
            "baseClass": "Menu",
            "directoryName": "menu",
            "type": "simple",
            "defaultTag": "<ul id='menu'></ul>",
            "preferredTag": "ul",
            "twoWays": [],
            "comment": [
                "/**",
                " * Represents the EJ2 Angular Menu Component.",
                " * ```html",
                " * <ejs-menu [items]='menuItems'></ejs-menu>",
                " * ```",
                " */"
            ],
            "reactComment": [
                "/**",
                " * `MenuComponent` represents the react Menu Component.",
                " * ```ts",
                " * <MenuComponent items={menuItems} />",
                " * ```",
                " */"
            ],
            "vueComment": [
                "/**",
                " * Represents the Essential JS 2 VueJS Menu Component.",
                " * ```html",
                " * <ejs-menu :items='menuItems'></ejs-menu>",
                " * ```",
                " */"
             ],
            "complexDirective": [
                {
                    "baseClass": "MenuAnimationSettings",
                    "propertyName": "animationSettings",
                    "aspSelectorName": "e-menu-animationsettings"
                },
                {
                    "baseClass": "FieldSettings",
                    "propertyName": "fields",
                    "aspSelectorName": "e-menu-fieldsettings"
                }
            ],
            "templateProperties": [
                "template"
              ]
        }
   ]
}