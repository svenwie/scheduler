{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { EventHandler, createElement, formatUnit } from '@syncfusion/ej2-base';\nimport { Month } from './month';\nimport { TimelineEvent } from '../event-renderer/timeline-view';\nimport * as util from '../base/util';\nimport * as cls from '../base/css-constant';\nimport { TimelineHeaderRow } from './timeline-header-row';\n/**\n * timeline month view\n */\n\nvar TimelineMonth =\n/** @class */\nfunction (_super) {\n  __extends(TimelineMonth, _super);\n  /**\n   * Constructor for timeline month view\n   */\n\n\n  function TimelineMonth(parent) {\n    var _this = _super.call(this, parent) || this;\n\n    _this.viewClass = 'e-timeline-month-view';\n    _this.isInverseTableSelect = true;\n    return _this;\n  }\n  /**\n   * Get module name.\n   */\n\n\n  TimelineMonth.prototype.getModuleName = function () {\n    return 'timelineMonth';\n  };\n\n  TimelineMonth.prototype.onDataReady = function (args) {\n    var appointment = new TimelineEvent(this.parent, 'day');\n    appointment.renderAppointments();\n  };\n\n  TimelineMonth.prototype.getLeftPanelElement = function () {\n    return this.element.querySelector('.' + cls.RESOURCE_COLUMN_WRAP_CLASS);\n  };\n\n  TimelineMonth.prototype.scrollTopPanel = function (target) {\n    _super.prototype.scrollTopPanel.call(this, target);\n\n    this.scrollHeaderLabels(target);\n  };\n\n  TimelineMonth.prototype.setContentHeight = function (content, leftPanelElement, height) {\n    if (leftPanelElement) {\n      leftPanelElement.style.height = formatUnit(height - this.getScrollXIndent(content));\n    }\n\n    content.style.height = formatUnit(height);\n  };\n\n  TimelineMonth.prototype.getDateSlots = function (renderDates, workDays) {\n    var dateSlots = [];\n\n    for (var _i = 0, renderDates_1 = renderDates; _i < renderDates_1.length; _i++) {\n      var col = renderDates_1[_i];\n      var classList = [cls.HEADER_CELLS_CLASS];\n\n      if (this.isCurrentDate(col)) {\n        classList.push(cls.CURRENT_DAY_CLASS);\n      }\n\n      dateSlots.push({\n        date: col,\n        type: 'dateHeader',\n        className: classList,\n        colSpan: 1,\n        workDays: workDays\n      });\n    }\n\n    return dateSlots;\n  };\n\n  TimelineMonth.prototype.renderLeftIndent = function (tr) {\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.uiStateValues.isGroupAdaptive) {\n      this.parent.resourceBase.renderResourceHeaderIndent(tr);\n    }\n  };\n\n  TimelineMonth.prototype.renderContent = function () {\n    var contentTr = createElement('tr');\n\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.uiStateValues.isGroupAdaptive) {\n      var resTd = createElement('td');\n      resTd.appendChild(this.parent.resourceBase.createResourceColumn());\n      contentTr.appendChild(resTd);\n    }\n\n    var contentTd = createElement('td');\n    this.element.querySelector('tbody').appendChild(contentTr);\n    var wrap = createElement('div', {\n      className: cls.CONTENT_WRAP_CLASS\n    });\n    wrap.appendChild(this.renderContentArea());\n    wrap.appendChild(this.createEventTable(this.getRowCount()));\n    this.collapseRows(wrap);\n    EventHandler.add(wrap, 'scroll', this.onContentScroll, this);\n    contentTd.appendChild(wrap);\n    contentTr.appendChild(contentTd);\n  };\n\n  TimelineMonth.prototype.getRowCount = function () {\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.uiStateValues.isGroupAdaptive) {\n      return this.parent.resourceBase.lastResourceLevel.length;\n    }\n\n    return 1;\n  };\n\n  TimelineMonth.prototype.getContentSlots = function () {\n    var slotDatas = [];\n\n    for (var row = 0; row < this.getRowCount(); row++) {\n      for (var _i = 0, _a = this.colLevels[this.colLevels.length - 1]; _i < _a.length; _i++) {\n        var data = _a[_i];\n        data.className = [cls.WORK_CELLS_CLASS];\n\n        if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.uiStateValues.isGroupAdaptive) {\n          var resLevel = this.parent.resourceBase.lastResourceLevel[row];\n          data.workDays = resLevel.resourceData[resLevel.resource.workDaysField] || this.parent.workDays;\n          data.className = data.className.concat(resLevel.className);\n          data.groupIndex = resLevel.groupIndex;\n          data.groupOrder = resLevel.groupOrder;\n        }\n\n        var slotData = {\n          date: new Date(+data.date),\n          colSpan: data.colSpan,\n          groupIndex: data.groupIndex,\n          workDays: data.workDays,\n          type: 'monthCells',\n          className: data.className\n        };\n\n        if (!slotDatas[row]) {\n          slotDatas[row] = [];\n        }\n\n        slotDatas[row].push(slotData);\n      }\n    }\n\n    return slotDatas;\n  };\n\n  TimelineMonth.prototype.updateClassList = function () {// No need to update content for timeline month view\n  };\n\n  TimelineMonth.prototype.unwireEvents = function () {\n    EventHandler.remove(this.getContentAreaElement(), 'scroll', this.onContentScroll);\n  };\n\n  TimelineMonth.prototype.getMonthStart = function (currentDate) {\n    var monthStart = util.firstDateOfMonth(util.resetTime(currentDate));\n    return new Date(monthStart.getFullYear(), monthStart.getMonth(), monthStart.getDate());\n  };\n\n  TimelineMonth.prototype.getMonthEnd = function (currentDate) {\n    var monthStart = util.firstDateOfMonth(util.resetTime(currentDate));\n    return util.lastDateOfMonth(util.addMonths(new Date(+monthStart), this.parent.activeViewOptions.interval - 1));\n  };\n\n  TimelineMonth.prototype.generateColumnLevels = function () {\n    var colLevels = [];\n    var level = this.getDateSlots(this.renderDates, this.parent.activeViewOptions.workDays);\n    colLevels.push(level);\n\n    if (this.parent.activeViewOptions.group.resources.length > 0) {\n      this.parent.resourceBase.generateResourceLevels(level, !this.parent.uiStateValues.isGroupAdaptive);\n    }\n\n    var hourSlots = [];\n\n    if (this.parent.activeViewOptions.headerRows.length > 0) {\n      var renderGn = new TimelineHeaderRow(this.parent, this.renderDates);\n      colLevels = renderGn.generateColumnLevels(level, hourSlots);\n    }\n\n    this.colLevels = colLevels;\n    return colLevels;\n  };\n\n  return TimelineMonth;\n}(Month);\n\nexport { TimelineMonth };","map":null,"metadata":{},"sourceType":"module"}