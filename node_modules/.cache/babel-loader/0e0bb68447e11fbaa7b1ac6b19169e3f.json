{"ast":null,"code":"import { createElement } from '@syncfusion/ej2-base';\n/**\n * Schedule common utilities\n */\n\nexport var WEEK_LENGTH = 7;\nexport var MS_PER_DAY = 86400000;\nexport var MS_PER_MINUTE = 60000;\nexport function getWeekFirstDate(date1, firstDayOfWeek) {\n  var date = new Date(date1.getTime());\n  firstDayOfWeek = (firstDayOfWeek - date.getDay() + 7 * -1) % 7;\n  return new Date(date.setDate(date.getDate() + firstDayOfWeek));\n}\nexport function firstDateOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth());\n}\nexport function lastDateOfMonth(dt) {\n  return new Date(dt.getFullYear(), dt.getMonth() + 1, 0);\n}\nexport function getWeekNumber(dt) {\n  var currentDate = new Date('' + dt).valueOf();\n  var date = new Date(dt.getFullYear(), 0, 1).valueOf();\n  var a = currentDate - date;\n  return Math.ceil((a / MS_PER_DAY + new Date(date).getDay() + 1) / 7);\n}\nexport function setTime(date, time) {\n  var tzOffsetBefore = date.getTimezoneOffset();\n  var d = new Date(date.getTime() + time);\n  var tzOffsetDiff = d.getTimezoneOffset() - tzOffsetBefore;\n  date.setTime(d.getTime() + tzOffsetDiff * MS_PER_DAY);\n  return date;\n}\nexport function resetTime(date) {\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\nexport function getDateInMs(date) {\n  return date.getTime() - new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTime();\n}\nexport function addDays(date, i) {\n  date = new Date('' + date);\n  return new Date(date.setDate(date.getDate() + i));\n}\nexport function addMonths(date, i) {\n  date = new Date('' + date);\n  var day = date.getDate();\n  date.setDate(1);\n  date.setMonth(date.getMonth() + i);\n  date.setDate(Math.min(day, getMaxDays(date)));\n  return date;\n}\nexport function addYears(date, i) {\n  date = new Date('' + date);\n  var day = date.getDate();\n  date.setDate(1);\n  date.setFullYear(date.getFullYear() + i);\n  date.setDate(Math.min(day, getMaxDays(date)));\n  return date;\n}\nexport function getStartEndHours(date, startHour, endHour) {\n  var date1 = new Date(date.getTime());\n  date1.setHours(startHour.getHours());\n  date1.setMinutes(startHour.getMinutes());\n  date1.setSeconds(startHour.getSeconds());\n  var date2 = new Date(date.getTime());\n\n  if (endHour.getHours() === 0) {\n    date2 = addDays(date2, 1);\n  } else {\n    date2.setHours(endHour.getHours());\n    date2.setMinutes(endHour.getMinutes());\n    date2.setSeconds(endHour.getSeconds());\n  }\n\n  return {\n    startHour: date1,\n    endHour: date2\n  };\n}\nexport function getMaxDays(d) {\n  var date = new Date(d.getFullYear(), d.getMonth() + 1, 0);\n  return date.getDate();\n}\nexport function getDaysCount(startDate, endDate) {\n  var strTime = resetTime(new Date(startDate));\n  var endTime = resetTime(new Date(endDate));\n  return (endTime.getTime() - strTime.getTime()) / MS_PER_DAY;\n}\nexport function getDateFromString(date) {\n  return date.indexOf('Date') !== -1 ? new Date(parseInt(date.match(/\\d+/g).toString(), 10)) : date.indexOf('T') !== -1 ? new Date(date) : new Date(date.replace(/-/g, '/'));\n}\n/** @hidden */\n\nvar scrollWidth = null;\n/** @hidden */\n\nexport function getScrollBarWidth() {\n  if (scrollWidth !== null) {\n    return scrollWidth;\n  }\n\n  var divNode = createElement('div');\n  var value = 0;\n  divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n  document.body.appendChild(divNode);\n  value = divNode.offsetWidth - divNode.clientWidth | 0;\n  document.body.removeChild(divNode);\n  return scrollWidth = value;\n}\nexport function findIndexInData(data, property, value) {\n  for (var i = 0, length_1 = data.length; i < length_1; i++) {\n    if (data[i][property] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function getOuterHeight(element) {\n  var style = getComputedStyle(element);\n  return element.offsetHeight + (parseInt(style.marginTop, 10) || 0) + (parseInt(style.marginBottom, 10) || 0);\n}","map":null,"metadata":{},"sourceType":"module"}