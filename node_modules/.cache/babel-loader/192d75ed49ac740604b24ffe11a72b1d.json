{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, Event, closest, Collection, Complex, attributes, detach } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty, select, isVisible } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, Browser, formatUnit, L10n } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, isNullOrUndefined as isNOU, selectAll } from '@syncfusion/ej2-base';\nimport { EventHandler, rippleEffect, Touch, compile, Animation } from '@syncfusion/ej2-base';\nimport { Toolbar } from '../toolbar/toolbar';\nvar CLS_TAB = 'e-tab';\nvar CLS_HEADER = 'e-tab-header';\nvar CLS_CONTENT = 'e-content';\nvar CLS_NEST = 'e-nested';\nvar CLS_ITEMS = 'e-items';\nvar CLS_ITEM = 'e-item';\nvar CLS_TEMPLATE = 'e-template';\nvar CLS_RTL = 'e-rtl';\nvar CLS_ACTIVE = 'e-active';\nvar CLS_DISABLE = 'e-disable';\nvar CLS_HIDDEN = 'e-hidden';\nvar CLS_FOCUS = 'e-focused';\nvar CLS_ICONS = 'e-icons';\nvar CLS_ICON = 'e-icon';\nvar CLS_ICON_CLOSE = 'e-close-icon';\nvar CLS_CLOSE_SHOW = 'e-close-show';\nvar CLS_TEXT = 'e-tab-text';\nvar CLS_INDICATOR = 'e-indicator';\nvar CLS_WRAP = 'e-tab-wrap';\nvar CLS_TEXT_WRAP = 'e-text-wrap';\nvar CLS_TAB_ICON = 'e-tab-icon';\nvar CLS_TB_ITEMS = 'e-toolbar-items';\nvar CLS_TB_ITEM = 'e-toolbar-item';\nvar CLS_TB_POP = 'e-toolbar-pop';\nvar CLS_TB_POPUP = 'e-toolbar-popup';\nvar CLS_POPUP_OPEN = 'e-popup-open';\nvar CLS_POPUP_CLOSE = 'e-popup-close';\nvar CLS_PROGRESS = 'e-progress';\nvar CLS_IGNORE = 'e-ignore';\nvar CLS_OVERLAY = 'e-overlay';\n\nvar TabActionSettings =\n/** @class */\nfunction (_super) {\n  __extends(TabActionSettings, _super);\n\n  function TabActionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('SlideLeftIn')], TabActionSettings.prototype, \"effect\", void 0);\n\n  __decorate([Property(600)], TabActionSettings.prototype, \"duration\", void 0);\n\n  __decorate([Property('ease')], TabActionSettings.prototype, \"easing\", void 0);\n\n  return TabActionSettings;\n}(ChildProperty);\n\nexport { TabActionSettings };\n\nvar TabAnimationSettings =\n/** @class */\nfunction (_super) {\n  __extends(TabAnimationSettings, _super);\n\n  function TabAnimationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    effect: 'SlideLeftIn',\n    duration: 600,\n    easing: 'ease'\n  }, TabActionSettings)], TabAnimationSettings.prototype, \"previous\", void 0);\n\n  __decorate([Complex({\n    effect: 'SlideRightIn',\n    duration: 600,\n    easing: 'ease'\n  }, TabActionSettings)], TabAnimationSettings.prototype, \"next\", void 0);\n\n  return TabAnimationSettings;\n}(ChildProperty);\n\nexport { TabAnimationSettings };\n/**\n * Objects used for configuring the Tab item header properties.\n */\n\nvar Header =\n/** @class */\nfunction (_super) {\n  __extends(Header, _super);\n\n  function Header() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], Header.prototype, \"text\", void 0);\n\n  __decorate([Property('')], Header.prototype, \"iconCss\", void 0);\n\n  __decorate([Property('left')], Header.prototype, \"iconPosition\", void 0);\n\n  return Header;\n}(ChildProperty);\n\nexport { Header };\n/**\n * An array of object that is used to configure the Tab.\n */\n\nvar TabItem =\n/** @class */\nfunction (_super) {\n  __extends(TabItem, _super);\n\n  function TabItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({}, Header)], TabItem.prototype, \"header\", void 0);\n\n  __decorate([Property('')], TabItem.prototype, \"content\", void 0);\n\n  __decorate([Property('')], TabItem.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(false)], TabItem.prototype, \"disabled\", void 0);\n\n  return TabItem;\n}(ChildProperty);\n\nexport { TabItem };\n/**\n * Tab is a content panel to show multiple contents in a single space, one at a time.\n * Each Tab item has an associated content, that will be displayed based on the active Tab header item.\n * ```html\n * <div id=\"tab\"></div>\n * <script>\n *   var tabObj = new Tab();\n *   tab.appendTo(\"#tab\");\n * </script>\n * ```\n */\n\nvar Tab =\n/** @class */\nfunction (_super) {\n  __extends(Tab, _super);\n  /**\n   * Initializes a new instance of the Tab class.\n   * @param options  - Specifies Tab model properties as options.\n   * @param element  - Specifies the element that is rendered as a Tab.\n   */\n\n\n  function Tab(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.show = {\n      name: 'SlideDown',\n      duration: 100\n    };\n    _this.hide = {\n      name: 'SlideUp',\n      duration: 100\n    };\n    _this.animateOptions = {};\n    _this.animObj = new Animation(_this.animateOptions);\n    _this.maxHeight = 0;\n    _this.title = 'Close';\n    _this.lastIndex = 0;\n    /**\n     * Contains the keyboard configuration of the Tab.\n     */\n\n    _this.keyConfigs = {\n      tab: 'tab',\n      home: 'home',\n      end: 'end',\n      enter: 'enter',\n      space: 'space',\n      delete: 'delete',\n      moveLeft: 'leftarrow',\n      moveRight: 'rightarrow',\n      moveUp: 'uparrow',\n      moveDown: 'downarrow'\n    };\n    return _this;\n  }\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers, attributes and classes.\n   * @returns void\n   */\n\n\n  Tab.prototype.destroy = function () {\n    var _this = this;\n\n    if (!isNOU(this.tbObj)) {\n      this.tbObj.destroy();\n    }\n\n    this.unWireEvents();\n    ['role', 'aria-disabled', 'aria-activedescendant', 'tabindex', 'aria-orientation'].forEach(function (val) {\n      _this.element.removeAttribute(val);\n    });\n    this.expTemplateContent();\n\n    if (!this.isTemplate) {\n      this.element.innerHTML = '';\n    } else {\n      var cntEle = select('.' + CLS_TAB + ' > .' + CLS_CONTENT, this.element);\n      this.element.classList.remove(CLS_TEMPLATE);\n\n      if (!isNOU(cntEle)) {\n        cntEle.innerHTML = this.cnt;\n      }\n    }\n\n    _super.prototype.destroy.call(this);\n\n    this.trigger('destroyed');\n  };\n  /**\n   * Initialize component\n   * @private\n   */\n\n\n  Tab.prototype.preRender = function () {\n    var nested = closest(this.element, '.' + CLS_CONTENT);\n    this.prevIndex = 0;\n    this.isNested = false;\n    this.isPopup = false;\n    this.initRender = true;\n    this.isSwipeed = false;\n    this.itemIndexArray = [];\n    this.templateEle = [];\n\n    if (!isNOU(nested)) {\n      nested.parentElement.classList.add(CLS_NEST);\n      this.isNested = true;\n    }\n\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : name === 'edge' ? 'e-edge' : name === 'safari' ? 'e-safari' : '';\n    setStyle(this.element, {\n      'width': formatUnit(this.width),\n      'height': formatUnit(this.height)\n    });\n    this.setCssClass(this.element, this.cssClass, true);\n    attributes(this.element, {\n      role: 'tablist',\n      'aria-disabled': 'false',\n      'aria-activedescendant': ''\n    });\n    this.setCssClass(this.element, css, true);\n  };\n  /**\n   * Initialize the component rendering\n   * @private\n   */\n\n\n  Tab.prototype.render = function () {\n    this.btnCls = this.createElement('span', {\n      className: CLS_ICONS + ' ' + CLS_ICON_CLOSE,\n      attrs: {\n        title: this.title\n      }\n    });\n    this.renderContainer();\n    this.wireEvents();\n    this.initRender = false;\n  };\n\n  Tab.prototype.renderContainer = function () {\n    var ele = this.element;\n\n    if (this.items.length > 0 && ele.children.length === 0) {\n      ele.appendChild(this.createElement('div', {\n        className: CLS_CONTENT\n      }));\n      this.setOrientation(this.headerPlacement, this.createElement('div', {\n        className: CLS_HEADER\n      }));\n      this.isTemplate = false;\n    } else if (this.element.children.length > 0) {\n      this.isTemplate = true;\n      ele.classList.add(CLS_TEMPLATE);\n      var header = ele.querySelector('.' + CLS_HEADER);\n\n      if (header && this.headerPlacement === 'Bottom') {\n        this.setOrientation(this.headerPlacement, header);\n      }\n    }\n\n    if (!isNOU(select('.' + CLS_HEADER, this.element)) && !isNOU(select('.' + CLS_CONTENT, this.element))) {\n      this.renderHeader();\n      this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n\n      if (!isNOU(this.tbItems)) {\n        rippleEffect(this.tbItems, {\n          selector: '.e-tab-wrap'\n        });\n      }\n\n      this.renderContent();\n\n      if (selectAll('.' + CLS_TB_ITEM, this.element).length > 0) {\n        this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n        this.bdrLine = this.createElement('div', {\n          className: CLS_INDICATOR + ' ' + CLS_HIDDEN + ' ' + CLS_IGNORE\n        });\n        var scrCnt = select('.e-hscroll-content', this.tbItems);\n\n        if (!isNOU(scrCnt)) {\n          scrCnt.insertBefore(this.bdrLine, scrCnt.firstChild);\n        } else {\n          this.tbItems.insertBefore(this.bdrLine, this.tbItems.firstChild);\n        }\n\n        this.setContentHeight(true);\n        this.select(this.selectedItem);\n      }\n\n      this.setRTL(this.enableRtl);\n    }\n  };\n\n  Tab.prototype.renderHeader = function () {\n    var _this = this;\n\n    var tabItems = [];\n    this.hdrEle = select('.' + CLS_HEADER, this.element);\n\n    if (!this.isTemplate) {\n      tabItems = this.parseObject(this.items, 0);\n    } else {\n      var count = this.hdrEle.children.length;\n      var hdrItems = [];\n\n      for (var i = 0; i < count; i++) {\n        hdrItems.push(this.hdrEle.children.item(i).innerHTML);\n      }\n\n      if (count > 0) {\n        this.hdrEle.innerHTML = '';\n        this.hdrEle.appendChild(this.createElement('div', {\n          className: CLS_ITEMS\n        }));\n        hdrItems.forEach(function (item, index) {\n          _this.lastIndex = index;\n          var attr = {\n            className: CLS_ITEM,\n            id: CLS_ITEM + '_' + index,\n            attrs: {\n              role: 'tab',\n              'aria-controls': CLS_CONTENT + '_' + index,\n              'aria-selected': 'false'\n            }\n          };\n\n          var txt = _this.createElement('span', {\n            className: CLS_TEXT,\n            innerHTML: item,\n            attrs: {\n              'role': 'presentation'\n            }\n          }).outerHTML;\n\n          var cont = _this.createElement('div', {\n            className: CLS_TEXT_WRAP,\n            innerHTML: txt + _this.btnCls.outerHTML\n          }).outerHTML;\n\n          var wrap = _this.createElement('div', {\n            className: CLS_WRAP,\n            innerHTML: cont,\n            attrs: {\n              tabIndex: '-1'\n            }\n          });\n\n          select('.' + CLS_ITEMS, _this.element).appendChild(_this.createElement('div', attr));\n          selectAll('.' + CLS_ITEM, _this.element)[index].appendChild(wrap);\n        });\n      }\n    }\n\n    this.tbObj = new Toolbar({\n      width: '100%',\n      overflowMode: this.overflowMode,\n      items: tabItems.length !== 0 ? tabItems : [],\n      clicked: this.clickHandler.bind(this)\n    });\n    this.tbObj.createElement = this.createElement;\n    this.tbObj.appendTo(this.hdrEle);\n    attributes(this.element, {\n      'aria-orientation': 'horizontal'\n    });\n    this.setCloseButton(this.showCloseButton);\n    this.setProperties({\n      headerPlacement: this.element.children.item(0).classList.contains(CLS_HEADER) ? 'Top' : 'Bottom'\n    }, true);\n  };\n\n  Tab.prototype.renderContent = function () {\n    this.cntEle = select('.' + CLS_CONTENT, this.element);\n    var hdrItem = selectAll('.' + CLS_TB_ITEM, this.element);\n\n    if (this.isTemplate) {\n      this.cnt = this.cntEle.children.length > 0 ? this.cntEle.innerHTML : '';\n      var contents = this.cntEle.children;\n\n      for (var i = 0; i < hdrItem.length; i++) {\n        if (contents.length - 1 >= i) {\n          contents.item(i).className += CLS_ITEM;\n          attributes(contents.item(i), {\n            'role': 'tabpanel',\n            'aria-labelledby': CLS_ITEM + '_' + i\n          });\n          contents.item(i).id = CLS_CONTENT + '_' + i;\n        }\n      }\n    }\n  };\n\n  Tab.prototype.reRenderItems = function () {\n    this.renderContainer();\n\n    if (!isNOU(this.cntEle)) {\n      this.touchModule = new Touch(this.cntEle, {\n        swipe: this.swipeHandler.bind(this)\n      });\n    }\n  };\n\n  Tab.prototype.parseObject = function (items, index) {\n    var _this = this;\n\n    var tbCount = selectAll('.' + CLS_TB_ITEM, this.element).length;\n    var tItems = [];\n    var txtWrapEle;\n    items.forEach(function (item, i) {\n      if (isNOU(item.header) || isNOU(item.header.text)) {\n        _this.items.splice(i, 0);\n\n        return;\n      }\n\n      var pos = isNOU(item.header.iconPosition) ? '' : item.header.iconPosition;\n      var css = isNOU(item.header.iconCss) ? '' : item.header.iconCss;\n      var txt = item.header.text;\n      _this.lastIndex = tbCount === 0 ? i : _this.isReplace ? index + i : _this.lastIndex + 1;\n      var disabled = item.disabled ? ' ' + CLS_DISABLE + ' ' + CLS_OVERLAY : '';\n      txtWrapEle = _this.createElement('div', {\n        className: CLS_TEXT,\n        attrs: {\n          'role': 'presentation'\n        }\n      });\n      var tHtml = txt instanceof Object ? txt.outerHTML : txt;\n      var txtEmpty = !isNOU(tHtml) && tHtml !== '';\n\n      if (!isNOU(txt.tagName)) {\n        txtWrapEle.appendChild(txt);\n      } else {\n        _this.headerTextCompile(txtWrapEle, txt);\n      }\n\n      var tEle;\n\n      var icon = _this.createElement('span', {\n        className: CLS_ICONS + ' ' + CLS_TAB_ICON + ' ' + CLS_ICON + '-' + pos + ' ' + css\n      });\n\n      var tCont = _this.createElement('div', {\n        className: CLS_TEXT_WRAP\n      });\n\n      tCont.appendChild(txtWrapEle);\n\n      if ((txt === '' || txt === undefined) && css === '') {\n        return;\n      } else {\n        if (txt !== '' && txt !== undefined && css !== '') {\n          if (pos === 'left' || pos === 'top') {\n            tCont.insertBefore(icon, tCont.firstElementChild);\n          } else {\n            tCont.appendChild(icon);\n          }\n\n          tEle = txtWrapEle;\n        } else {\n          tEle = css === '' ? txtWrapEle : icon;\n\n          if (tEle === icon) {\n            detach(txtWrapEle);\n            tCont.appendChild(icon);\n          }\n        }\n      }\n\n      var wrapAttrs = item.disabled ? {} : {\n        tabIndex: '-1'\n      };\n      tCont.appendChild(_this.btnCls.cloneNode(true));\n\n      var wrap = _this.createElement('div', {\n        className: CLS_WRAP,\n        attrs: wrapAttrs\n      });\n\n      wrap.appendChild(tCont);\n\n      if (_this.itemIndexArray === []) {\n        _this.itemIndexArray.push(CLS_ITEM + '_' + _this.lastIndex);\n      } else {\n        _this.itemIndexArray.splice(index + i, 0, CLS_ITEM + '_' + _this.lastIndex);\n      }\n\n      var attrObj = {\n        id: CLS_ITEM + '_' + _this.lastIndex,\n        role: 'tab',\n        'aria-selected': 'false'\n      };\n      var tItem = {\n        htmlAttributes: attrObj,\n        template: wrap\n      };\n      tItem.cssClass = item.cssClass + ' ' + disabled + ' ' + (css !== '' ? 'e-i' + pos : '') + ' ' + (!txtEmpty ? CLS_ICON : '');\n\n      if (pos === 'top' || pos === 'bottom') {\n        _this.element.classList.add('e-vertical-icon');\n      }\n\n      tItems.push(tItem);\n    });\n    return tItems;\n  };\n\n  Tab.prototype.removeActiveClass = function (id) {\n    var hdrActEle = selectAll(':root .' + CLS_HEADER + ' .' + CLS_TB_ITEM + '.' + CLS_ACTIVE, this.element)[0];\n\n    if (this.headerPlacement === 'Bottom') {\n      hdrActEle = selectAll(':root .' + CLS_HEADER + ' .' + CLS_TB_ITEM + '.' + CLS_ACTIVE, this.element.children[1])[0];\n    }\n\n    if (!isNOU(hdrActEle)) {\n      hdrActEle.classList.remove(CLS_ACTIVE);\n      var no = this.extIndex(hdrActEle.id);\n      var trg = this.findEle(select('.' + CLS_CONTENT, this.element).children, CLS_CONTENT + '_' + no);\n    }\n  };\n\n  Tab.prototype.checkPopupOverflow = function (ele) {\n    this.tbPop = select('.' + CLS_TB_POP, this.element);\n    var popIcon = select('.e-hor-nav', this.element);\n    var tbrItems = select('.' + CLS_TB_ITEMS, this.element);\n\n    if (this.enableRtl && popIcon.offsetLeft + popIcon.offsetWidth > tbrItems.offsetLeft || !this.enableRtl && popIcon.offsetLeft < tbrItems.offsetWidth) {\n      ele.classList.add(CLS_TB_POPUP);\n      this.tbPop.insertBefore(ele.cloneNode(true), selectAll('.' + CLS_TB_POPUP, this.tbPop)[0]);\n      ele.outerHTML = '';\n    }\n\n    return true;\n  };\n\n  Tab.prototype.popupHandler = function (target) {\n    var ripEle = target.querySelector('.e-ripple-element');\n\n    if (!isNOU(ripEle)) {\n      ripEle.outerHTML = '';\n      target.querySelector('.' + CLS_WRAP).classList.remove('e-ripple');\n    }\n\n    this.tbItem = selectAll('.' + CLS_TB_ITEMS + ' .' + CLS_TB_ITEM, this.hdrEle);\n    var lastChild = this.tbItem[this.tbItem.length - 1];\n\n    if (this.tbItem.length !== 0) {\n      target.classList.remove(CLS_TB_POPUP);\n      this.tbItems.appendChild(target.cloneNode(true));\n      this.actEleId = target.id;\n      target.outerHTML = '';\n\n      if (this.checkPopupOverflow(lastChild)) {\n        var prevEle = this.tbItems.lastChild.previousElementSibling;\n        this.checkPopupOverflow(prevEle);\n      }\n\n      this.isPopup = true;\n    }\n\n    return selectAll('.' + CLS_TB_ITEM, this.tbItems).length - 1;\n  };\n\n  Tab.prototype.setCloseButton = function (val) {\n    var trg = select('.' + CLS_HEADER, this.element);\n    val === true ? trg.classList.add(CLS_CLOSE_SHOW) : trg.classList.remove(CLS_CLOSE_SHOW);\n    this.tbObj.refreshOverflow();\n    this.refreshActElePosition();\n  };\n\n  Tab.prototype.prevCtnAnimation = function (prev, current) {\n    var animation;\n    var checkRTL = this.enableRtl || this.element.classList.contains(CLS_RTL);\n\n    if (this.isPopup || prev <= current) {\n      if (this.animation.previous.effect === 'SlideLeftIn') {\n        animation = {\n          name: 'SlideLeftOut',\n          duration: this.animation.previous.duration,\n          timingFunction: this.animation.previous.easing\n        };\n      } else {\n        animation = null;\n      }\n    } else {\n      if (this.animation.next.effect === 'SlideRightIn') {\n        animation = {\n          name: 'SlideRightOut',\n          duration: this.animation.next.duration,\n          timingFunction: this.animation.next.easing\n        };\n      } else {\n        animation = null;\n      }\n    }\n\n    return animation;\n  };\n\n  Tab.prototype.triggerPrevAnimation = function (oldCnt, prevIndex) {\n    var _this = this;\n\n    var animateObj = this.prevCtnAnimation(prevIndex, this.selectedItem);\n\n    if (!isNOU(animateObj)) {\n      animateObj.begin = function () {\n        setStyle(oldCnt, {\n          'position': 'absolute'\n        });\n        oldCnt.classList.add(CLS_PROGRESS);\n        oldCnt.classList.add('e-view');\n      };\n\n      animateObj.end = function () {\n        oldCnt.style.display = 'none';\n        oldCnt.classList.remove(CLS_ACTIVE);\n        oldCnt.classList.remove(CLS_PROGRESS);\n        oldCnt.classList.remove('e-view');\n        setStyle(oldCnt, {\n          'display': '',\n          'position': ''\n        });\n\n        if (oldCnt.childNodes.length === 0 && !_this.isTemplate) {\n          detach(oldCnt);\n        }\n      };\n\n      new Animation(animateObj).animate(oldCnt);\n    } else {\n      oldCnt.classList.remove(CLS_ACTIVE);\n    }\n  };\n\n  Tab.prototype.triggerAnimation = function (id, value) {\n    var _this = this;\n\n    var prevIndex = this.prevIndex;\n    var itemCollection = [].slice.call(this.element.querySelector('.' + CLS_CONTENT).children);\n    var oldCnt;\n    itemCollection.forEach(function (item) {\n      if (item.id === _this.prevActiveEle) {\n        oldCnt = item;\n      }\n    });\n    var prevEle = this.tbItem[prevIndex];\n    var no = this.extIndex(this.tbItem[this.selectedItem].id);\n    var newCnt = this.getTrgContent(this.cntEle, no);\n\n    if (isNOU(oldCnt) && !isNOU(prevEle)) {\n      var idNo = this.extIndex(prevEle.id);\n      oldCnt = this.getTrgContent(this.cntEle, idNo);\n    }\n\n    this.prevActiveEle = newCnt.id;\n\n    if (this.initRender || value === false || this.animation === {} || isNOU(this.animation)) {\n      if (oldCnt && oldCnt !== newCnt) {\n        oldCnt.classList.remove(CLS_ACTIVE);\n      }\n\n      return;\n    }\n\n    var cnt = select('.' + CLS_CONTENT, this.element);\n    var animateObj;\n\n    if (this.prevIndex > this.selectedItem && !this.isPopup) {\n      var openEff = this.animation.previous.effect;\n      animateObj = {\n        name: openEff === 'None' ? '' : openEff !== 'SlideLeftIn' ? openEff : 'SlideLeftIn',\n        duration: this.animation.previous.duration,\n        timingFunction: this.animation.previous.easing\n      };\n    } else if (this.isPopup || this.prevIndex < this.selectedItem || this.prevIndex === this.selectedItem) {\n      var clsEff = this.animation.next.effect;\n      animateObj = {\n        name: clsEff === 'None' ? '' : clsEff !== 'SlideRightIn' ? clsEff : 'SlideRightIn',\n        duration: this.animation.next.duration,\n        timingFunction: this.animation.next.easing\n      };\n    }\n\n    animateObj.progress = function () {\n      cnt.classList.add(CLS_PROGRESS);\n\n      _this.setActiveBorder();\n    };\n\n    animateObj.end = function () {\n      cnt.classList.remove(CLS_PROGRESS);\n      newCnt.classList.add(CLS_ACTIVE);\n    };\n\n    if (!this.initRender && !isNOU(oldCnt)) {\n      this.triggerPrevAnimation(oldCnt, prevIndex);\n    }\n\n    this.isPopup = false;\n\n    if (animateObj.name === '') {\n      newCnt.classList.add(CLS_ACTIVE);\n    } else {\n      new Animation(animateObj).animate(newCnt);\n    }\n  };\n\n  Tab.prototype.keyPressed = function (trg) {\n    var trgParent = closest(trg, '.' + CLS_HEADER + ' .' + CLS_TB_ITEM);\n    var trgIndex = this.getEleIndex(trgParent);\n\n    if (!isNOU(this.popEle) && trg.classList.contains('e-hor-nav')) {\n      this.popEle.classList.contains(CLS_POPUP_OPEN) ? this.popObj.hide(this.hide) : this.popObj.show(this.show);\n    } else if (trg.classList.contains('e-scroll-nav')) {\n      trg.click();\n    } else {\n      if (!isNOU(trgParent) && trgParent.classList.contains(CLS_ACTIVE) === false) {\n        this.select(trgIndex);\n\n        if (!isNOU(this.popEle)) {\n          this.popObj.hide(this.hide);\n        }\n      }\n    }\n  };\n\n  Tab.prototype.getEleIndex = function (item) {\n    return Array.prototype.indexOf.call(selectAll('.' + CLS_HEADER + ' .' + CLS_TB_ITEM, this.element), item);\n  };\n\n  Tab.prototype.extIndex = function (id) {\n    return id.replace(CLS_ITEM + '_', '');\n  };\n\n  Tab.prototype.expTemplateContent = function () {\n    var _this = this;\n\n    this.templateEle.forEach(function (eleStr) {\n      if (!isNOU(_this.element.querySelector(eleStr))) {\n        document.body.appendChild(_this.element.querySelector(eleStr)).style.display = 'none';\n      }\n    });\n  };\n\n  Tab.prototype.templateCompile = function (ele, cnt) {\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n\n    if (tempEle.childNodes.length !== 0) {\n      ele.appendChild(tempEle);\n    }\n  };\n\n  Tab.prototype.compileElement = function (ele, val, prop) {\n    if (typeof val === 'string') {\n      val = val.trim();\n    }\n\n    var templateFn = compile(val);\n    var templateFUN;\n\n    if (!isNOU(templateFn)) {\n      templateFUN = templateFn({}, this, prop);\n    }\n\n    if (!isNOU(templateFn) && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n\n  Tab.prototype.headerTextCompile = function (element, text) {\n    this.compileElement(element, text, 'headerText');\n  };\n\n  Tab.prototype.getContent = function (ele, cnt, callType) {\n    var eleStr;\n\n    if (typeof cnt === 'string' || isNOU(cnt.innerHTML)) {\n      if (cnt[0] === '.' || cnt[0] === '#') {\n        if (document.querySelectorAll(cnt).length) {\n          var eleVal = document.querySelector(cnt);\n          eleStr = eleVal.outerHTML.trim();\n\n          if (callType === 'clone') {\n            ele.appendChild(eleVal.cloneNode(true));\n          } else {\n            ele.appendChild(eleVal);\n            eleVal.style.display = '';\n          }\n        } else {\n          this.templateCompile(ele, cnt);\n        }\n      } else {\n        this.templateCompile(ele, cnt);\n      }\n    } else {\n      ele.appendChild(cnt);\n    }\n\n    if (!isNOU(eleStr)) {\n      if (this.templateEle.indexOf(cnt.toString()) === -1) {\n        this.templateEle.push(cnt.toString());\n      }\n    }\n  };\n\n  Tab.prototype.getTrgContent = function (cntEle, no) {\n    var ele;\n\n    if (this.element.classList.contains(CLS_NEST)) {\n      ele = select('.' + CLS_NEST + '> .' + CLS_CONTENT + ' > #' + CLS_CONTENT + '_' + no, this.element);\n    } else {\n      ele = this.findEle(cntEle.children, CLS_CONTENT + '_' + no);\n    }\n\n    return ele;\n  };\n\n  Tab.prototype.findEle = function (items, key) {\n    var ele;\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].id === key) {\n        ele = items[i];\n        break;\n      }\n    }\n\n    return ele;\n  };\n\n  Tab.prototype.setOrientation = function (place, ele) {\n    place === 'Bottom' ? this.element.appendChild(ele) : this.element.insertBefore(ele, select('.' + CLS_CONTENT, this.element));\n  };\n\n  Tab.prototype.setCssClass = function (ele, cls, val) {\n    if (cls === '') {\n      return;\n    }\n\n    var list = cls.split(' ');\n\n    for (var i = 0; i < list.length; i++) {\n      if (val) {\n        ele.classList.add(list[i]);\n      } else {\n        ele.classList.remove(list[i]);\n      }\n    }\n  };\n\n  Tab.prototype.setContentHeight = function (val) {\n    if (isNOU(this.cntEle)) {\n      return;\n    }\n\n    var height;\n    var hdrEle = select('.' + CLS_HEADER, this.element);\n\n    if (this.heightAdjustMode === 'None') {\n      if (this.height === 'auto') {\n        return;\n      } else {\n        setStyle(this.cntEle, {\n          'height': this.element.offsetHeight - hdrEle.offsetHeight + 'px'\n        });\n      }\n    } else if (this.heightAdjustMode === 'Fill') {\n      setStyle(this.element, {\n        'height': '100%'\n      });\n      setStyle(this.cntEle, {\n        'height': 'auto'\n      });\n    } else if (this.heightAdjustMode === 'Auto') {\n      var cnt = selectAll('.' + CLS_CONTENT + ' > .' + CLS_ITEM, this.element);\n\n      if (this.isTemplate === true) {\n        for (var i = 0; i < cnt.length; i++) {\n          cnt[i].setAttribute('style', 'display:block; visibility: visible');\n          this.maxHeight = Math.max(this.maxHeight, this.getHeight(cnt[i]));\n          cnt[i].style.removeProperty('display');\n          cnt[i].style.removeProperty('visibility');\n        }\n      } else {\n        this.cntEle = select('.' + CLS_CONTENT, this.element);\n\n        if (val === true) {\n          this.cntEle.appendChild(this.createElement('div', {\n            id: CLS_CONTENT + '_' + 0,\n            className: CLS_ITEM + ' ' + CLS_ACTIVE,\n            attrs: {\n              'role': 'tabpanel',\n              'aria-labelledby': CLS_ITEM + '_' + 0\n            }\n          }));\n        }\n\n        var ele = this.cntEle.children.item(0);\n\n        for (var i = 0; i < this.items.length; i++) {\n          this.getContent(ele, this.items[i].content, 'clone');\n          this.maxHeight = Math.max(this.maxHeight, this.getHeight(ele));\n\n          while (ele.firstChild) {\n            ele.removeChild(ele.firstChild);\n          }\n        }\n\n        this.templateEle = [];\n        this.getContent(ele, this.items[0].content, 'render');\n        ele.classList.remove(CLS_ACTIVE);\n      }\n\n      setStyle(this.cntEle, {\n        'height': this.maxHeight + 'px'\n      });\n    } else {\n      setStyle(this.cntEle, {\n        'height': 'auto'\n      });\n    }\n  };\n\n  Tab.prototype.getHeight = function (ele) {\n    var cs = window.getComputedStyle(ele);\n    return ele.offsetHeight + parseFloat(cs.getPropertyValue('padding-top')) + parseFloat(cs.getPropertyValue('padding-bottom')) + parseFloat(cs.getPropertyValue('margin-top')) + parseFloat(cs.getPropertyValue('margin-bottom'));\n  };\n\n  Tab.prototype.setActiveBorder = function () {\n    var trg = select('.' + CLS_TB_ITEM + '.' + CLS_ACTIVE, this.element);\n\n    if (this.headerPlacement === 'Bottom') {\n      trg = select('.' + CLS_TB_ITEM + '.' + CLS_ACTIVE, this.element.children[1]);\n    }\n\n    if (trg === null) {\n      return;\n    }\n\n    var root = closest(trg, '.' + CLS_TAB);\n\n    if (this.element !== root) {\n      return;\n    }\n\n    var hsCnt = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS + ' .e-hscroll-content', this.element.children[0]);\n    this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n    var bar = select('.' + CLS_HEADER + ' .' + CLS_INDICATOR, this.element);\n\n    if (this.headerPlacement === 'Bottom') {\n      hsCnt = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS + ' .e-hscroll-content', this.element.children[1]);\n    }\n\n    var tbWidth = isNOU(hsCnt) ? this.tbItems.offsetWidth : hsCnt.offsetWidth;\n\n    if (tbWidth !== 0) {\n      setStyle(bar, {\n        'left': trg.offsetLeft + 'px',\n        'right': tbWidth - (trg.offsetLeft + trg.offsetWidth) + 'px'\n      });\n    } else {\n      setStyle(bar, {\n        'left': 'auto',\n        'right': 'auto'\n      });\n    }\n\n    if (!isNOU(this.bdrLine)) {\n      this.bdrLine.classList.remove(CLS_HIDDEN);\n    }\n  };\n\n  Tab.prototype.setActive = function (value) {\n    this.tbItem = selectAll('.' + CLS_HEADER + ' .' + CLS_TB_ITEM, this.element);\n    var trg = this.tbItem[value];\n\n    if (value >= 0) {\n      this.setProperties({\n        selectedItem: value\n      }, true);\n    }\n\n    if (value < 0 || isNaN(value) || this.tbItem.length === 0) {\n      return;\n    }\n\n    if (trg.classList.contains(CLS_ACTIVE)) {\n      this.setActiveBorder();\n      return;\n    }\n\n    if (!this.isTemplate) {\n      var prev = this.tbItem[this.prevIndex];\n\n      if (!isNOU(prev)) {\n        prev.removeAttribute('aria-controls');\n      }\n\n      attributes(trg, {\n        'aria-controls': CLS_CONTENT + '_' + value\n      });\n    }\n\n    var id = trg.id;\n    this.removeActiveClass(id);\n    trg.classList.add(CLS_ACTIVE);\n    trg.setAttribute('aria-selected', 'true');\n    var no = Number(this.extIndex(id));\n\n    if (isNOU(this.prevActiveEle)) {\n      this.prevActiveEle = CLS_CONTENT + '_' + no;\n    }\n\n    attributes(this.element, {\n      'aria-activedescendant': id\n    });\n\n    if (this.isTemplate) {\n      if (select('.' + CLS_CONTENT, this.element).children.length > 0) {\n        var trg_1 = this.findEle(select('.' + CLS_CONTENT, this.element).children, CLS_CONTENT + '_' + no);\n\n        if (!isNOU(trg_1)) {\n          trg_1.classList.add(CLS_ACTIVE);\n        }\n\n        this.triggerAnimation(id, this.enableAnimation);\n      }\n    } else {\n      this.cntEle = select('.' + CLS_TAB + ' > .' + CLS_CONTENT, this.element);\n      var item = this.getTrgContent(this.cntEle, this.extIndex(id));\n\n      if (isNOU(item)) {\n        this.cntEle.appendChild(this.createElement('div', {\n          id: CLS_CONTENT + '_' + this.extIndex(id),\n          className: CLS_ITEM + ' ' + CLS_ACTIVE,\n          attrs: {\n            role: 'tabpanel',\n            'aria-labelledby': CLS_ITEM + '_' + this.extIndex(id)\n          }\n        }));\n        var eleTrg = this.getTrgContent(this.cntEle, this.extIndex(id));\n        var itemIndex = Array.prototype.indexOf.call(this.itemIndexArray, trg.id);\n        this.getContent(eleTrg, this.items[itemIndex].content, 'render');\n      } else {\n        item.classList.add(CLS_ACTIVE);\n      }\n\n      this.triggerAnimation(id, this.enableAnimation);\n    }\n\n    this.setActiveBorder();\n    var curActItem = select('.' + CLS_HEADER + ' #' + id, this.element);\n    this.refreshItemVisibility(curActItem);\n    curActItem.firstChild.focus();\n    var eventArg = {\n      previousItem: this.prevItem,\n      previousIndex: this.prevIndex,\n      selectedItem: trg,\n      selectedIndex: value,\n      isSwiped: this.isSwipeed\n    };\n\n    if (!this.initRender || this.selectedItem !== 0) {\n      this.trigger('selected', eventArg);\n    }\n  };\n\n  Tab.prototype.setItems = function (items) {\n    this.isReplace = true;\n    this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n    this.tbObj.items = this.parseObject(items, 0);\n    this.tbObj.dataBind();\n    this.isReplace = false;\n  };\n\n  Tab.prototype.setRTL = function (value) {\n    this.tbObj.enableRtl = value;\n    this.tbObj.dataBind();\n    this.setCssClass(this.element, CLS_RTL, value);\n    this.refreshActiveBorder();\n  };\n\n  Tab.prototype.refreshActiveBorder = function () {\n    if (!isNOU(this.bdrLine)) {\n      this.bdrLine.classList.add(CLS_HIDDEN);\n    }\n\n    this.setActiveBorder();\n  };\n\n  Tab.prototype.wireEvents = function () {\n    window.addEventListener('resize', this.refreshActElePosition.bind(this));\n    EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n    EventHandler.add(this.element, 'keydown', this.spaceKeyDown, this);\n\n    if (!isNOU(this.cntEle)) {\n      this.touchModule = new Touch(this.cntEle, {\n        swipe: this.swipeHandler.bind(this)\n      });\n    }\n\n    this.keyModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyHandler.bind(this),\n      keyConfigs: this.keyConfigs\n    });\n    this.tabKeyModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyHandler.bind(this),\n      keyConfigs: {\n        openPopup: 'shift+f10',\n        tab: 'tab',\n        shiftTab: 'shift+tab'\n      },\n      eventName: 'keydown'\n    });\n  };\n\n  Tab.prototype.unWireEvents = function () {\n    this.keyModule.destroy();\n    this.tabKeyModule.destroy();\n\n    if (!isNOU(this.cntEle)) {\n      this.touchModule.destroy();\n    }\n\n    window.removeEventListener('resize', this.refreshActElePosition.bind(this));\n    this.element.removeEventListener('mouseover', this.hoverHandler.bind(this));\n  };\n\n  Tab.prototype.clickHandler = function (args) {\n    this.element.classList.remove(CLS_FOCUS);\n    var trg = args.originalEvent.target;\n    var trgParent = closest(trg, '.' + CLS_TB_ITEM);\n    var trgIndex = this.getEleIndex(trgParent);\n\n    if (trg.classList.contains(CLS_ICON_CLOSE)) {\n      this.removeTab(trgIndex);\n    } else {\n      this.isPopup = false;\n\n      if (!isNOU(trgParent) && trgIndex !== this.selectedItem) {\n        this.select(trgIndex);\n      }\n    }\n  };\n\n  Tab.prototype.swipeHandler = function (e) {\n    if (e.velocity < 3 && isNOU(e.originalEvent.changedTouches)) {\n      return;\n    }\n\n    this.isSwipeed = true;\n\n    if (e.swipeDirection === 'Right' && this.selectedItem !== 0) {\n      for (var k = this.selectedItem - 1; k >= 0; k--) {\n        if (!this.tbItem[k].classList.contains('e-hidden')) {\n          this.select(k);\n          break;\n        }\n      }\n    } else if (e.swipeDirection === 'Left' && this.selectedItem !== selectAll('.' + CLS_TB_ITEM, this.element).length - 1) {\n      for (var i = this.selectedItem + 1; i < this.tbItem.length; i++) {\n        if (!this.tbItem[i].classList.contains('e-hidden')) {\n          this.select(i);\n          break;\n        }\n      }\n    }\n\n    this.isSwipeed = false;\n  };\n\n  Tab.prototype.spaceKeyDown = function (e) {\n    if (e.keyCode === 32 && e.which === 32 || e.keyCode === 35 && e.which === 35) {\n      var clstHead = closest(e.target, '.' + CLS_HEADER);\n\n      if (!isNOU(clstHead)) {\n        e.preventDefault();\n      }\n    }\n  };\n\n  Tab.prototype.keyHandler = function (e) {\n    if (this.element.classList.contains(CLS_DISABLE)) {\n      return;\n    }\n\n    this.element.classList.add(CLS_FOCUS);\n    var trg = e.target;\n    var actEle = select('.' + CLS_HEADER + ' .' + CLS_ACTIVE, this.element);\n    var tabItem = selectAll('.' + CLS_TB_ITEM + ':not(.' + CLS_TB_POPUP + ')', this.element);\n    this.popEle = select('.' + CLS_HEADER + ' .' + CLS_TB_POP, this.element);\n\n    if (!isNOU(this.popEle)) {\n      this.popObj = this.popEle.ej2_instances[0];\n    }\n\n    switch (e.action) {\n      case 'space':\n      case 'enter':\n        if (trg.parentElement.classList.contains(CLS_DISABLE)) {\n          return;\n        }\n\n        if (e.action === 'enter' && trg.classList.contains('e-hor-nav')) {\n          break;\n        }\n\n        this.keyPressed(trg);\n        break;\n\n      case 'tab':\n      case 'shiftTab':\n        if (trg.classList.contains(CLS_WRAP) && closest(trg, '.' + CLS_TB_ITEM).classList.contains(CLS_ACTIVE) === false) {\n          trg.setAttribute('tabindex', '-1');\n        }\n\n        if (this.popObj && isVisible(this.popObj.element)) {\n          this.popObj.hide(this.hide);\n        }\n\n        actEle.children.item(0).setAttribute('tabindex', '0');\n        break;\n\n      case 'moveLeft':\n      case 'moveRight':\n        var item = closest(document.activeElement, '.' + CLS_TB_ITEM);\n\n        if (!isNOU(item)) {\n          this.refreshItemVisibility(item);\n        }\n\n        break;\n\n      case 'openPopup':\n        e.preventDefault();\n\n        if (!isNOU(this.popEle) && this.popEle.classList.contains(CLS_POPUP_CLOSE)) {\n          this.popObj.show(this.show);\n        }\n\n        break;\n\n      case 'delete':\n        var trgParent = closest(trg, '.' + CLS_TB_ITEM);\n\n        if (this.showCloseButton === true && !isNOU(trgParent)) {\n          var nxtSib = trgParent.nextSibling;\n\n          if (!isNOU(nxtSib) && nxtSib.classList.contains(CLS_TB_ITEM)) {\n            nxtSib.firstChild.focus();\n          }\n\n          this.removeTab(this.getEleIndex(trgParent));\n        }\n\n        this.setActiveBorder();\n        break;\n    }\n  };\n\n  Tab.prototype.refreshActElePosition = function () {\n    var activeEle = select('.' + CLS_TB_ITEM + '.' + CLS_TB_POPUP + '.' + CLS_ACTIVE, this.element);\n\n    if (!isNOU(activeEle)) {\n      this.select(this.getEleIndex(activeEle));\n    }\n\n    this.refreshActiveBorder();\n  };\n\n  Tab.prototype.refreshItemVisibility = function (target) {\n    var scrCnt = select('.e-hscroll-content', this.tbItems);\n\n    if (!isNOU(scrCnt)) {\n      var scrBar = select('.e-hscroll-bar', this.tbItems);\n      var scrStart = scrBar.scrollLeft;\n      var scrEnd = scrStart + scrBar.offsetWidth;\n      var eleStart = target.offsetLeft;\n      var eleWidth = target.offsetWidth;\n      var eleEnd = target.offsetLeft + target.offsetWidth;\n\n      if (scrStart < eleStart && scrEnd < eleEnd) {\n        var eleViewRange = scrEnd - eleStart;\n        scrBar.scrollLeft = scrStart + (eleWidth - eleViewRange);\n      } else {\n        if (scrStart > eleStart && scrEnd > eleEnd) {\n          var eleViewRange = eleEnd - scrStart;\n          scrBar.scrollLeft = scrStart - (eleWidth - eleViewRange);\n        }\n      }\n    } else {\n      return;\n    }\n  };\n\n  Tab.prototype.hoverHandler = function (e) {\n    var trg = e.target;\n\n    if (!isNOU(trg.classList) && trg.classList.contains(CLS_ICON_CLOSE)) {\n      trg.setAttribute('title', new L10n('tab', {\n        closeButtonTitle: this.title\n      }, this.locale).getConstant('closeButtonTitle'));\n    }\n  };\n  /**\n   * Enables or disables the specified Tab item. On passing value as `false`, the item will be disabled.\n   * @param  {number} index - Index value of target Tab item.\n   * @param  {boolean} value - Boolean value that determines whether the command should be enabled or disabled.\n   * By default, isEnable is true.\n   * @returns void.\n   */\n\n\n  Tab.prototype.enableTab = function (index, value) {\n    var tbItems = selectAll('.' + CLS_TB_ITEM, this.element)[index];\n\n    if (isNOU(tbItems)) {\n      return;\n    }\n\n    if (value === true) {\n      tbItems.classList.remove(CLS_DISABLE, CLS_OVERLAY);\n      tbItems.firstChild.setAttribute('tabindex', '-1');\n    } else {\n      tbItems.classList.add(CLS_DISABLE, CLS_OVERLAY);\n      tbItems.firstChild.removeAttribute('tabindex');\n\n      if (tbItems.classList.contains(CLS_ACTIVE)) {\n        this.select(index + 1);\n      }\n    }\n\n    if (!isNOU(this.items[index])) {\n      this.items[index].disabled = !value;\n      this.dataBind();\n    }\n\n    tbItems.setAttribute('aria-disabled', value === true ? 'false' : 'true');\n  };\n  /**\n   * Adds new items to the Tab that accepts an array as Tab items.\n   * @param  {TabItemsModel[]} items - An array of item that is added to the Tab.\n   * @param  {number} index - Number value that determines where the items to be added. By default, index is 0.\n   * @returns void.\n   */\n\n\n  Tab.prototype.addTab = function (items, index) {\n    var _this = this;\n\n    var lastEleIndex = 0;\n\n    if (!this.isReplace) {\n      this.trigger('adding', {\n        addedItems: items\n      });\n    }\n\n    this.hdrEle = select('.' + CLS_HEADER, this.element);\n\n    if (isNOU(this.hdrEle)) {\n      this.items = items;\n      this.reRenderItems();\n      return;\n    }\n\n    var itemsCount = selectAll('.' + CLS_TB_ITEM, this.element).length;\n\n    if (itemsCount !== 0) {\n      lastEleIndex = this.lastIndex + 1;\n    }\n\n    if (isNOU(index)) {\n      index = itemsCount - 1;\n    }\n\n    if (itemsCount < index || index < 0 || isNaN(index)) {\n      return;\n    }\n\n    if (itemsCount === 0 && !isNOU(this.hdrEle)) {\n      this.hdrEle.style.display = '';\n    }\n\n    if (!isNOU(this.bdrLine)) {\n      this.bdrLine.classList.add(CLS_HIDDEN);\n    }\n\n    this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n    var tabItems = this.parseObject(items, index);\n    items.forEach(function (item, place) {\n      _this.items.splice(index + place, 0, item);\n\n      if (_this.isTemplate && !isNOU(item.header) && !isNOU(item.header.text)) {\n        var no = lastEleIndex + place;\n\n        var ele = _this.createElement('div', {\n          id: CLS_CONTENT + '_' + no,\n          className: CLS_ITEM,\n          attrs: {\n            role: 'tabpanel',\n            'aria-labelledby': CLS_ITEM + '_' + no\n          }\n        });\n\n        _this.cntEle.insertBefore(ele, _this.cntEle.children[index + place]);\n\n        var eleTrg = _this.getTrgContent(_this.cntEle, no.toString());\n\n        _this.getContent(eleTrg, item.content, 'render');\n      }\n    });\n    this.tbObj.addItems(tabItems, index);\n\n    if (!this.isReplace) {\n      this.trigger('added', {\n        addedItems: items\n      });\n    }\n\n    if (this.selectedItem === index) {\n      this.select(index);\n    } else {\n      this.setActiveBorder();\n    }\n  };\n  /**\n   * Removes the items in the Tab from the specified index.\n   * @param  {number} index - Index of target item that is going to be removed.\n   * @returns void.\n   */\n\n\n  Tab.prototype.removeTab = function (index) {\n    var trg = selectAll('.' + CLS_TB_ITEM, this.element)[index];\n    var removeArgs = {\n      removedItem: trg,\n      removedIndex: index\n    };\n    this.trigger('removing', removeArgs);\n\n    if (isNOU(trg)) {\n      return;\n    }\n\n    this.tbObj.removeItems(index);\n    this.items.splice(index, 1);\n    this.itemIndexArray.splice(index, 1);\n    this.refreshActiveBorder();\n    var cntTrg = select('#' + CLS_CONTENT + '_' + this.extIndex(trg.id), select('.' + CLS_CONTENT, this.element));\n\n    if (!isNOU(cntTrg)) {\n      detach(cntTrg);\n    }\n\n    this.trigger('removed', removeArgs);\n\n    if (trg.classList.contains(CLS_ACTIVE)) {\n      index = index > selectAll('.' + CLS_TB_ITEM + ':not(.' + CLS_TB_POPUP + ')', this.element).length - 1 ? index - 1 : index;\n      this.enableAnimation = false;\n      this.selectedItem = index;\n      this.select(index);\n    }\n\n    if (selectAll('.' + CLS_TB_ITEM, this.element).length === 0) {\n      this.hdrEle.style.display = 'none';\n    }\n\n    this.enableAnimation = true;\n  };\n  /**\n   * Shows or hides the Tab that is in the specified index.\n   * @param  {number} index - Index value of target item.\n   * @param  {boolean} value - Based on this Boolean value, item will be hide (false) or show (true). By default, value is true.\n   * @returns void.\n   */\n\n\n  Tab.prototype.hideTab = function (index, value) {\n    var items;\n    var item = selectAll('.' + CLS_TB_ITEM, this.element)[index];\n\n    if (isNOU(item)) {\n      return;\n    }\n\n    if (isNOU(value)) {\n      value = true;\n    }\n\n    this.bdrLine.classList.add(CLS_HIDDEN);\n\n    if (value === true) {\n      item.classList.add(CLS_HIDDEN);\n      items = selectAll('.' + CLS_TB_ITEM + ':not(.' + CLS_HIDDEN + ')', this.tbItems);\n\n      if (items.length !== 0 && item.classList.contains(CLS_ACTIVE)) {\n        if (index !== 0) {\n          for (var i = index - 1; i >= 0; i--) {\n            if (!this.tbItem[i].classList.contains('e-hidden')) {\n              this.select(i);\n              break;\n            } else if (i === 0) {\n              for (var k = index + 1; k < this.tbItem.length; k++) {\n                if (!this.tbItem[k].classList.contains('e-hidden')) {\n                  this.select(k);\n                  break;\n                }\n              }\n            }\n          }\n        } else {\n          for (var k = index + 1; k < this.tbItem.length; k++) {\n            if (!this.tbItem[k].classList.contains('e-hidden')) {\n              this.select(k);\n              break;\n            }\n          }\n        }\n      } else if (items.length === 0) {\n        this.element.classList.add(CLS_HIDDEN);\n      }\n    } else {\n      this.element.classList.remove(CLS_HIDDEN);\n      items = selectAll('.' + CLS_TB_ITEM + ':not(.' + CLS_HIDDEN + ')', this.tbItems);\n\n      if (items.length === 0) {\n        this.select(index);\n      }\n\n      item.classList.remove(CLS_HIDDEN);\n    }\n\n    this.setActiveBorder();\n    item.setAttribute('aria-hidden', '' + value);\n  };\n  /**\n   * Specifies the index or HTMLElement to select an item from the Tab.\n   * @param  {number | HTMLElement} args - Index or DOM element is used for selecting an item from the Tab.\n   * @returns void.\n   */\n\n\n  Tab.prototype.select = function (args) {\n    this.tbItems = select('.' + CLS_HEADER + ' .' + CLS_TB_ITEMS, this.element);\n    this.tbItem = selectAll('.' + CLS_HEADER + ' .' + CLS_TB_ITEM, this.element);\n    this.prevItem = this.tbItem[this.prevIndex];\n    var trg = this.tbItem[args];\n\n    if (!isNOU(this.prevItem) && !this.prevItem.classList.contains(CLS_DISABLE)) {\n      this.prevItem.children.item(0).setAttribute('tabindex', '-1');\n    }\n\n    var eventArg = {\n      previousItem: this.prevItem,\n      previousIndex: this.prevIndex,\n      selectedItem: this.tbItem[this.selectedItem],\n      selectedIndex: this.selectedItem,\n      selectingItem: trg,\n      selectingIndex: args,\n      isSwiped: this.isSwipeed\n    };\n\n    if (!this.initRender || this.selectedItem !== 0) {\n      this.trigger('selecting', eventArg);\n    }\n\n    if (eventArg.cancel) {\n      return;\n    }\n\n    if (typeof args === 'number') {\n      if (!isNOU(this.tbItem[args]) && this.tbItem[args].classList.contains(CLS_DISABLE)) {\n        for (var i = args + 1; i < this.items.length; i++) {\n          if (this.items[i].disabled === false) {\n            args = i;\n            break;\n          } else {\n            args = 0;\n          }\n        }\n      }\n\n      if (this.tbItem.length > args && args >= 0 && !isNaN(args)) {\n        this.prevIndex = this.selectedItem;\n\n        if (this.tbItem[args].classList.contains(CLS_TB_POPUP)) {\n          this.setActive(this.popupHandler(this.tbItem[args]));\n        } else {\n          this.setActive(args);\n        }\n      } else {\n        this.setActive(0);\n      }\n    } else if (args instanceof HTMLElement) {\n      this.setActive(this.getEleIndex(args));\n    }\n  };\n  /**\n   * Specifies the value to disable/enable the Tab component.\n   * When set to `true`, the component will be disabled.\n   * @param  {boolean} value - Based on this Boolean value, Tab will be enabled (false) or disabled (true).\n   * @returns void.\n   */\n\n\n  Tab.prototype.disable = function (value) {\n    this.setCssClass(this.element, CLS_DISABLE, value);\n    this.element.setAttribute('aria-disabled', '' + value);\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   * @returns string\n   */\n\n\n  Tab.prototype.getPersistData = function () {\n    return this.addOnPersist(['selectedItem', 'actEleId']);\n  };\n  /**\n   * Returns the current module name.\n   * @returns string\n   * @private\n   */\n\n\n  Tab.prototype.getModuleName = function () {\n    return 'tab';\n  };\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   * @param  {TabModel} newProp\n   * @param  {TabModel} oldProp\n   * @returns void\n   * @private\n   */\n\n\n  Tab.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'width':\n          setStyle(this.element, {\n            width: formatUnit(newProp.width)\n          });\n          break;\n\n        case 'height':\n          setStyle(this.element, {\n            height: formatUnit(newProp.height)\n          });\n          this.setContentHeight(false);\n          break;\n\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass, true);\n          break;\n\n        case 'items':\n          if (!(newProp.items instanceof Array && oldProp.items instanceof Array)) {\n            var changedProp = Object.keys(newProp.items);\n\n            for (var i = 0; i < changedProp.length; i++) {\n              var index = parseInt(Object.keys(newProp.items)[i], 10);\n              var property = Object.keys(newProp.items[index])[0];\n              var oldVal = Object(oldProp.items[index])[property];\n              var newVal = Object(newProp.items[index])[property];\n              var hdrItem = select('.' + CLS_TB_ITEMS + ' #' + CLS_ITEM + '_' + index, this.element);\n              var cntItem = select('.' + CLS_CONTENT + ' #' + CLS_CONTENT + '_' + index, this.element);\n\n              if (property === 'header') {\n                var arr = [];\n                arr.push(this.items[index]);\n                this.items.splice(index, 1);\n                this.itemIndexArray.splice(index, 1);\n                this.tbObj.items.splice(index, 1);\n                var isHiddenEle = hdrItem.classList.contains(CLS_HIDDEN);\n                detach(hdrItem);\n                this.isReplace = true;\n                this.addTab(arr, index);\n\n                if (isHiddenEle) {\n                  this.hideTab(index);\n                }\n\n                this.isReplace = false;\n              }\n\n              if (property === 'content' && !isNOU(cntItem)) {\n                var strVal = typeof newVal === 'string' || isNOU(newVal.innerHTML);\n\n                if (strVal && (newVal[0] === '.' || newVal[0] === '#') && newVal.length) {\n                  var eleVal = document.querySelector(newVal);\n                  cntItem.appendChild(eleVal);\n                  eleVal.style.display = '';\n                } else if (newVal === '' && oldVal[0] === '#') {\n                  document.body.appendChild(this.element.querySelector(oldVal)).style.display = 'none';\n                  cntItem.innerHTML = newVal;\n                } else {\n                  cntItem.innerHTML = newVal;\n                }\n              }\n\n              if (property === 'cssClass') {\n                if (!isNOU(hdrItem)) {\n                  hdrItem.classList.remove(oldVal);\n                  hdrItem.classList.add(newVal);\n                }\n\n                if (!isNOU(cntItem)) {\n                  cntItem.classList.remove(oldVal);\n                  cntItem.classList.add(newVal);\n                }\n              }\n\n              if (property === 'disabled') {\n                this.enableTab(index, newVal === true ? false : true);\n              }\n            }\n          } else {\n            this.lastIndex = 0;\n\n            if (isNOU(this.tbObj)) {\n              this.reRenderItems();\n            } else {\n              this.setItems(newProp.items);\n\n              if (this.templateEle.length > 0) {\n                this.expTemplateContent();\n              }\n\n              this.templateEle = [];\n              select('.' + CLS_TAB + ' > .' + CLS_CONTENT, this.element).innerHTML = '';\n              this.select(this.selectedItem);\n            }\n          }\n\n          break;\n\n        case 'showCloseButton':\n          this.setCloseButton(newProp.showCloseButton);\n          break;\n\n        case 'selectedItem':\n          this.selectedItem = oldProp.selectedItem;\n          this.select(newProp.selectedItem);\n          break;\n\n        case 'headerPlacement':\n          var tempHdrEle = select('.' + CLS_HEADER, this.element);\n          this.setOrientation(newProp.headerPlacement, tempHdrEle);\n          this.select(this.selectedItem);\n          break;\n\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n\n        case 'overflowMode':\n          this.tbObj.overflowMode = newProp.overflowMode;\n          this.tbObj.dataBind();\n          this.refreshActElePosition();\n          break;\n\n        case 'heightAdjustMode':\n          this.setContentHeight(false);\n          this.select(this.selectedItem);\n          break;\n      }\n    }\n  };\n\n  __decorate([Collection([], TabItem)], Tab.prototype, \"items\", void 0);\n\n  __decorate([Property('100%')], Tab.prototype, \"width\", void 0);\n\n  __decorate([Property('auto')], Tab.prototype, \"height\", void 0);\n\n  __decorate([Property('')], Tab.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(0)], Tab.prototype, \"selectedItem\", void 0);\n\n  __decorate([Property('Top')], Tab.prototype, \"headerPlacement\", void 0);\n\n  __decorate([Property('Content')], Tab.prototype, \"heightAdjustMode\", void 0);\n\n  __decorate([Property('Scrollable')], Tab.prototype, \"overflowMode\", void 0);\n\n  __decorate([Property(false)], Tab.prototype, \"enableRtl\", void 0);\n\n  __decorate([Property(false)], Tab.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property(false)], Tab.prototype, \"showCloseButton\", void 0);\n\n  __decorate([Complex({}, TabAnimationSettings)], Tab.prototype, \"animation\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"created\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"adding\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"added\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"selecting\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"selected\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"removing\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"removed\", void 0);\n\n  __decorate([Event()], Tab.prototype, \"destroyed\", void 0);\n\n  Tab = __decorate([NotifyPropertyChanges], Tab);\n  return Tab;\n}(Component);\n\nexport { Tab };","map":null,"metadata":{},"sourceType":"module"}