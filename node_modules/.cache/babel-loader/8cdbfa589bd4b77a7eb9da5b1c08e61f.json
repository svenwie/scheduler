{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { createElement, addClass, formatUnit, remove } from '@syncfusion/ej2-base';\nimport { AgendaBase } from '../event-renderer/agenda-base';\nimport { Month } from './month';\nimport * as util from '../base/util';\nimport * as cls from '../base/css-constant';\n/**\n * month agenda view\n */\n\nvar MonthAgenda =\n/** @class */\nfunction (_super) {\n  __extends(MonthAgenda, _super);\n  /**\n   * Constructor\n   */\n\n\n  function MonthAgenda(parent) {\n    var _this = _super.call(this, parent) || this;\n\n    _this.dayNameFormat = 'narrow';\n    _this.viewClass = 'e-month-agenda-view';\n    _this.agendaDates = {};\n    _this.agendaBase = new AgendaBase(parent);\n    return _this;\n  }\n\n  MonthAgenda.prototype.renderAppointmentContainer = function () {\n    var contentArea = this.getContentAreaElement();\n    var wrapperContainer = createElement('div', {\n      className: cls.WRAPPER_CONTAINER_CLASS\n    });\n    contentArea.appendChild(wrapperContainer);\n    var appWrap = createElement('div', {\n      className: cls.APPOINTMENT_WRAP_CLASS\n    });\n    wrapperContainer.appendChild(appWrap);\n    this.appendAppContainer(appWrap);\n    this.setEventWrapperHeight();\n  };\n\n  MonthAgenda.prototype.getDayNameFormat = function () {\n    if (this.parent.isAdaptive) {\n      return 'narrow';\n    }\n\n    return 'abbreviated';\n  };\n\n  MonthAgenda.prototype.setEventWrapperHeight = function () {\n    var headerHeight = (this.parent.headerModule ? this.parent.headerModule.getHeaderElement().offsetHeight : 0) + 2;\n    var resourceWrapper = this.parent.element.querySelector('.' + cls.RESOURCE_HEADER_TOOLBAR);\n\n    if (resourceWrapper) {\n      headerHeight += resourceWrapper.offsetHeight;\n    }\n\n    var contentArea = this.getContentAreaElement().firstChild;\n    var dateHeader = this.element.querySelector('.' + cls.DATE_HEADER_WRAP_CLASS);\n    var availableHeight = this.parent.element.offsetHeight - headerHeight - dateHeader.offsetHeight - contentArea.offsetHeight;\n    var wrapperContainer = this.element.querySelector('.' + cls.WRAPPER_CONTAINER_CLASS);\n    var eventWrapper = this.element.querySelector('.' + cls.APPOINTMENT_WRAP_CLASS);\n    wrapperContainer.style.height = eventWrapper.style.height = formatUnit(availableHeight);\n  };\n\n  MonthAgenda.prototype.onDataReady = function (args) {\n    this.setEventWrapperHeight();\n    this.clearElements();\n    var eventCollection = args.processedData;\n\n    if (this.parent.uiStateValues.isGroupAdaptive) {\n      var resource = this.parent.resourceBase.lastResourceLevel[this.parent.uiStateValues.groupIndex];\n      eventCollection = this.parent.eventBase.filterEventsByResource(resource, eventCollection);\n    }\n\n    this.parent.eventsProcessed = this.agendaBase.processAgendaEvents(eventCollection);\n    var count = 0;\n\n    for (var _i = 0, _a = this.renderDates; _i < _a.length; _i++) {\n      var date = _a[_i];\n      var filterData = this.appointmentFiltering(date);\n      var workCell = this.element.querySelectorAll('.' + cls.WORK_CELLS_CLASS)[count];\n\n      if (filterData.length > 0) {\n        if (!workCell.querySelector('.' + cls.APPOINTMENT_INDICATOR_CLASS)) {\n          workCell.appendChild(createElement('div', {\n            className: cls.APPOINTMENT_INDICATOR_CLASS\n          }));\n        }\n\n        if (date.getTime() === util.resetTime(new Date(this.parent.selectedDate.getTime())).getTime()) {\n          this.onEventRender(filterData, date);\n        }\n      }\n\n      count++;\n    }\n  };\n\n  MonthAgenda.prototype.onCellClick = function (event) {\n    this.parent.quickPopup.quickPopupHide();\n    var filterData = this.appointmentFiltering(event.startTime);\n    this.onEventRender(filterData, event.startTime);\n    this.parent.setProperties({\n      selectedDate: new Date('' + event.startTime)\n    }, true);\n  };\n\n  MonthAgenda.prototype.onEventRender = function (events, date) {\n    var appWrap = this.element.querySelector('.' + cls.APPOINTMENT_WRAP_CLASS);\n    appWrap.innerHTML = '';\n\n    if (this.parent.activeViewOptions.group.resources.length === 0 || this.parent.uiStateValues.isGroupAdaptive) {\n      if (events.length > 0) {\n        var appContainer = createElement('div', {\n          className: cls.APPOINTMENT_CONTAINER_CLASS\n        });\n        appWrap.appendChild(this.agendaBase.createAgendaContentElement('data', events, appContainer));\n      } else {\n        this.appendAppContainer(appWrap);\n      }\n    } else {\n      if (events.length > 0) {\n        var table = this.createTableLayout();\n        var tBody = table.querySelector('tbody');\n        this.agendaBase.calculateResourceTableElement(tBody, 1, date);\n        table.appendChild(tBody);\n        appWrap.appendChild(table);\n      } else {\n        this.appendAppContainer(appWrap);\n      }\n    }\n\n    this.agendaBase.wireEventActions();\n  };\n\n  MonthAgenda.prototype.appointmentFiltering = function (date) {\n    var dateStart = util.resetTime(new Date(date.getTime()));\n    var dateEnd = util.setTime(new Date(dateStart.getTime()), util.MS_PER_DAY);\n    return this.parent.eventBase.filterEvents(dateStart, dateEnd);\n  };\n\n  MonthAgenda.prototype.clearElements = function () {\n    var appointmentIndicators = [].slice.call(this.element.querySelectorAll('.' + cls.APPOINTMENT_INDICATOR_CLASS));\n\n    for (var _i = 0, appointmentIndicators_1 = appointmentIndicators; _i < appointmentIndicators_1.length; _i++) {\n      var appointmentIndicator = appointmentIndicators_1[_i];\n      remove(appointmentIndicator);\n    }\n\n    this.appendAppContainer(this.element.querySelector('.' + cls.APPOINTMENT_WRAP_CLASS));\n  };\n\n  MonthAgenda.prototype.appendAppContainer = function (appWrap) {\n    var app = createElement('div', {\n      className: cls.APPOINTMENT_CONTAINER_CLASS\n    });\n    addClass([app], cls.AGENDA_NO_EVENT_CLASS);\n    app.innerHTML = this.parent.localeObj.getConstant('noEvents');\n    appWrap.innerHTML = '';\n    appWrap.appendChild(app);\n  };\n  /**\n   * Get module name.\n   */\n\n\n  MonthAgenda.prototype.getModuleName = function () {\n    return 'monthAgenda';\n  };\n\n  return MonthAgenda;\n}(Month);\n\nexport { MonthAgenda };","map":null,"metadata":{},"sourceType":"module"}