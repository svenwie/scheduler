{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dev07-devel\\\\Desktop\\\\scheduler\\\\src\\\\index.js\";\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { extend } from '@syncfusion/ej2-base';\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport AddShifts from './shifts/AddShifts';\nimport DeleteShifts from './shifts/DeleteShifts';\nimport ModifyShifts from './shifts/ModifyShifts';\nimport AddShiftEntry from './shiftEntry/AddShiftEntry';\nimport DeleteShiftEntry from './shiftEntry/DeleteShiftEntry';\nimport ModifyShiftEntry from './shiftEntry/ModifyShiftEntry';\n\nvar Default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Default, _React$Component);\n\n  function Default() {\n    var _this;\n\n    _classCallCheck(this, Default);\n\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n\n    console.log(props);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Default).call(this, props));\n    _this.state = {\n      scheduleData: [//        {\n        //     Id: 1,\n        //     Subject: 'Server Maintenance',\n        //     StartTime: new Date(2018, 11, 11, 10, 0),\n        //     EndTime: new Date(2018, 11, 11, 11, 30),\n        //    // EventType: 'maintenance',\n        //     City: 'Seattle',\n        //     CategoryColor: '#1aaa55'\n        // }\n      ],\n      scheduleShiftEntry: []\n    };\n\n    _this.getData = function () {\n      fetch('http://192.168.30.110:1337/Shifts').then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        var scheduleData = myJson.map(function (shift) {\n          return {\n            Id: shift.id,\n            Subject: shift.name,\n            StartTime: shift.start,\n            EndTime: shift.end\n          };\n        });\n\n        _this.setState({\n          scheduleData: scheduleData\n        }); // console.log(this); \n\n      });\n    };\n\n    _this.getShiftEntry = function () {\n      fetch('http://192.168.30.110:1337/ShiftEntry').then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        var scheduleShiftEntry = myJson.map(function (shiftEntry) {\n          return {\n            Id: shiftEntry.id,\n            Subject: 'Resource',\n            StartTime: shiftEntry.start,\n            EndTime: shiftEntry.end,\n            CategoryColor: '#404040'\n          };\n        });\n\n        _this.setState({\n          scheduleShiftEntry: scheduleShiftEntry\n        });\n      });\n    };\n\n    _this.onEventClick = function () {\n      console.log('onAppointmentClick');\n    };\n\n    _this.onCellClick = function (e) {\n      console.log('onCellKlick wurde ausgelöst');\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.onCellDoubleClick = function () {\n      console.log('onCellDoubleClick wurde ausgeführt');\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.onPopupOpen = function (e) {\n      // console.log('onPopupOpen')\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.data = extend([], null, true);\n    return _this;\n  }\n\n  _createClass(Default, [{\n    key: \"change\",\n    value: function change(args) {\n      this.scheduleObj.selectedDate = args.value;\n      this.scheduleObj.dataBind();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      this.getShiftEntry();\n    }\n  }, {\n    key: \"onEventRendered\",\n    value: function onEventRendered(args) {\n      var categoryColor = args.data.CategoryColor;\n\n      if (!args.element || !categoryColor) {\n        return;\n      }\n\n      if (this.currentView === 'Agenda') {\n        args.element.firstChild.style.borderLeftColor = categoryColor;\n      } else {\n        args.element.style.backgroundColor = categoryColor;\n      }\n    }\n  }, {\n    key: \"onActionBegin\",\n    value: function onActionBegin(args) {\n      console.log('onActionBegin--->', args.requestType);\n\n      if (args.requestType === 'eventCreate') {\n        var data = args.data;\n        console.log('args.data--->', data);\n        console.log('StartTime--->', data[0].StartTime);\n        console.log('EndTime--->', data[0].EndTime);\n        console.log('Subject--->', data[0].Subject);\n        console.log('an event has been created');\n      }\n\n      if (args.requestType === 'eventChange') {\n        var _data = args.data;\n        console.log('args.data--->', _data);\n        console.log('StartTime--->', _data.StartTime);\n        console.log('EndTime--->', _data.EndTime);\n        console.log('Subject--->', _data.Subject);\n        console.log('an event has been changed');\n      }\n\n      if (args.requestType === 'eventRemove') {\n        var _data2 = args.data;\n        console.log('args.data--->', _data2);\n        console.log('StartTime--->', _data2[0].StartTime);\n        console.log('EndTime--->', _data2[0].EndTime);\n        console.log('Subject--->', _data2[0].Subject);\n        console.log('an event has been removed');\n      }\n    } // onPopupOpen(args) { \n    //     console.log('onPopupOpen--->', args.element); \n    //     if (args.type === 'Editor') { \n    //         let statusElement = args.element.querySelector('#EventType'); \n    //         console.log('statusElement--->',args)\n    //         statusElement.setAttribute('name', 'EventType'); \n    //         console.log('onPopupOpen statusElement--->', statusElement); \n    //     } \n    // } \n    // onActionBegin(args) { \n    //     console.log('onActionBegin', args) \n    //     if (args.requestType === 'eventCreate') { \n    //         let data = args.data; \n    //         if (!this.combinedSources.isSlotAvailable(data.StartTime, data.EndTime)) { \n    //             args.cancel = true; \n    //         } \n    //     } \n    // } \n    // editorTemplate(props) { \n    //     console.log(\"test\") \n    //     return ( \n    //         <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}> \n    //             <tbody> \n    //                 <tr> \n    //                     <td className=\"e-textlabel\">Summary</td> \n    //                     <td style={{ colspan: '4' }}> \n    //                         <input \n    //                             id=\"Summary\" \n    //                             className=\"e-field e-input\" \n    //                             type=\"text\" \n    //                             name=\"Subject\" \n    //                             style={{ width: '100%' }} \n    //                         /> \n    //                     </td> \n    //                 </tr> \n    //                 <tr> \n    //                     <td className=\"e-textlabel\">Status</td> \n    //                     <td style={{ colspan: '4' }}> \n    //                         <DropDownListComponent \n    //                             id=\"EventType\" \n    //                             placeholder=\"Choose status\" \n    //                             className=\"e-field\" \n    //                             style={{ width: '100%' }} \n    //                             dataSource={[ 'New', 'Requested', 'Confirmed' ]} \n    //                         /> \n    //                     </td> \n    //                 </tr> \n    //                 <tr> \n    //                     <td className=\"e-textlabel\">From</td> \n    //                     <td style={{ colspan: '4' }}> \n    //                         <DateTimePickerComponent id=\"StartTime\" className=\"e-field\" /> \n    //                     </td> \n    //                 </tr> \n    //                 <tr> \n    //                     <td className=\"e-textlabel\">To</td> \n    //                     <td style={{ colspan: '4' }}> \n    //                         <DateTimePickerComponent id=\"EndTime\" className=\"e-field\" /> \n    //                     </td> \n    //                 </tr> \n    //                 <tr> \n    //                     <td className=\"e-textlabel\">Reason</td> \n    //                     <td style={{ colspan: '4' }}> \n    //                         <textarea \n    //                             id=\"Description\" \n    //                             className=\"e-field e-input\" \n    //                             name=\"Description\" \n    //                             rows={3} \n    //                             cols={50} \n    //                             style={{ width: '100%', height: '60px !important', resize: 'vertical' }} \n    //                         /> \n    //                     </td> \n    //                 </tr> \n    //             </tbody> \n    //         </table> \n    //     ); \n    // } \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var combinedSources = _toConsumableArray(this.state.scheduleData).concat(_toConsumableArray(this.state.scheduleShiftEntry));\n\n      console.log('this.state->', this.state);\n      var open = this.state.open; // console.log('this.scheduleObj->', this.scheduleObj); \n      // console.log('this.state.scheduleData->', this.state.scheduleData) \n      // console.log('this.state.scheduleShiftEntry->', this.state.scheduleShiftEntry) \n      // console.log('combinedSources-->', combinedSources) \n\n      return React.createElement(\"div\", {\n        className: \"schedule-control-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-9 control-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(AddShifts, {\n        parentMethod: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, this.props.children), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(ModifyShifts, {\n        parentMethod: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.props.children), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(DeleteShifts, {\n        parentMethod: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.props.children), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(ScheduleComponent, {\n        height: \"650px\",\n        width: \"1000px\",\n        eventSettings: {\n          dataSource: this.state.scheduleData\n        },\n        ref: function ref(schedule) {\n          return _this2.combinedSources = schedule;\n        },\n        cellClick: this.onCellClick,\n        cellDoubleClick: this.onCellDoubleClick,\n        editorTemplate: this.editorTemplate,\n        showQuickInfo: false,\n        popupOpen: this.onPopupOpen.bind(this),\n        actionBegin: this.onActionBegin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Inject, {\n        services: [Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(AddShiftEntry, {\n        parentMethod: this.getShiftEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, this.props.children), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(ModifyShiftEntry, {\n        parentMethod: this.getShiftEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, this.props.children, \">\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(DeleteShiftEntry, {\n        parentMethod: this.getShiftEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, this.props.children), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(ScheduleComponent, {\n        cssClass: \"custom-work-days\",\n        height: \"650px\",\n        width: \"1000px\",\n        eventSettings: {\n          dataSource: combinedSources\n        },\n        eventRendered: this.onEventRendered.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Inject, {\n        services: [Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Default;\n}(React.Component);\n\nrender(React.createElement(Default, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 310\n  },\n  __self: this\n}), document.getElementById('sample'));","map":{"version":3,"sources":["C:\\Users\\dev07-devel\\Desktop\\scheduler\\src\\index.js"],"names":["render","React","ScheduleComponent","Day","Week","WorkWeek","Month","Agenda","Inject","Resize","DragAndDrop","extend","DateTimePickerComponent","DropDownListComponent","AddShifts","DeleteShifts","ModifyShifts","AddShiftEntry","DeleteShiftEntry","ModifyShiftEntry","Default","props","console","log","state","scheduleData","scheduleShiftEntry","getData","fetch","then","response","json","myJson","map","shift","Id","id","Subject","name","StartTime","start","EndTime","end","setState","getShiftEntry","shiftEntry","CategoryColor","onEventClick","onCellClick","e","open","onCellDoubleClick","onCloseModal","onPopupOpen","data","args","scheduleObj","selectedDate","value","dataBind","categoryColor","element","currentView","firstChild","style","borderLeftColor","backgroundColor","requestType","combinedSources","styles","children","dataSource","schedule","editorTemplate","bind","onActionBegin","onEventRendered","Component","document","getElementById"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'; \r\nimport './index.css'; \r\nimport * as React from 'react'; \r\nimport { \r\n    ScheduleComponent, \r\n    Day, \r\n    Week, \r\n    WorkWeek, \r\n    Month, \r\n    Agenda, \r\n    Inject, \r\n    Resize, \r\n    DragAndDrop \r\n} from '@syncfusion/ej2-react-schedule'; \r\nimport { extend } from '@syncfusion/ej2-base'; \r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars'; \r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns'; \r\nimport AddShifts from './shifts/AddShifts'; \r\nimport DeleteShifts from './shifts/DeleteShifts'; \r\nimport ModifyShifts from './shifts/ModifyShifts'; \r\nimport AddShiftEntry from './shiftEntry/AddShiftEntry'; \r\nimport DeleteShiftEntry from './shiftEntry/DeleteShiftEntry'; \r\nimport ModifyShiftEntry from './shiftEntry/ModifyShiftEntry'; \r\n   \r\nclass Default extends React.Component { \r\n    constructor(...props) { \r\n        console.log(props); \r\n        super(props); \r\n        this.data = extend([], null, true); \r\n    } \r\n   \r\n    state = { \r\n        scheduleData: [ \r\n    //        {\r\n    //     Id: 1,\r\n    //     Subject: 'Server Maintenance',\r\n    //     StartTime: new Date(2018, 11, 11, 10, 0),\r\n    //     EndTime: new Date(2018, 11, 11, 11, 30),\r\n    //    // EventType: 'maintenance',\r\n    //     City: 'Seattle',\r\n    //     CategoryColor: '#1aaa55'\r\n    \r\n    // }\r\n    ], \r\n        scheduleShiftEntry: [] \r\n    }; \r\n   \r\n    change(args) { \r\n        this.scheduleObj.selectedDate = args.value; \r\n        this.scheduleObj.dataBind(); \r\n    } \r\n   \r\n    getData = () => { \r\n        fetch('http://192.168.30.110:1337/Shifts') \r\n            .then((response) => { \r\n                return response.json(); \r\n            }) \r\n            .then((myJson) => { \r\n                let scheduleData = myJson.map((shift) => ({ \r\n                    Id: shift.id, \r\n                    Subject: shift.name, \r\n                    StartTime: shift.start, \r\n                    EndTime: shift.end \r\n                })); \r\n                this.setState({ scheduleData }); \r\n                // console.log(this); \r\n            }); \r\n    }; \r\n   \r\n    getShiftEntry = () => { \r\n        fetch('http://192.168.30.110:1337/ShiftEntry') \r\n            .then((response) => { \r\n                return response.json(); \r\n            }) \r\n            .then((myJson) => { \r\n                let scheduleShiftEntry = myJson.map((shiftEntry) => ({ \r\n                    Id: shiftEntry.id, \r\n                    Subject: 'Resource', \r\n                    StartTime: shiftEntry.start, \r\n                    EndTime: shiftEntry.end, \r\n                    CategoryColor: '#404040' \r\n                })); \r\n                this.setState({ scheduleShiftEntry }); \r\n            }); \r\n    }; \r\n   \r\n    componentDidMount() { \r\n        this.getData(); \r\n        this.getShiftEntry(); \r\n    } \r\n   \r\n    onEventRendered(args) { \r\n        let categoryColor = args.data.CategoryColor; \r\n        if (!args.element || !categoryColor) { \r\n            return; \r\n        } \r\n        if (this.currentView === 'Agenda') { \r\n            args.element.firstChild.style.borderLeftColor = categoryColor; \r\n        } else { \r\n            args.element.style.backgroundColor = categoryColor; \r\n        } \r\n    } \r\n   \r\n    onEventClick = () => {\r\n\t\tconsole.log('onAppointmentClick');\r\n\t};\r\n\r\n\tonCellClick = (e) => {\r\n\t\tconsole.log('onCellKlick wurde ausgelöst');\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\tonCellDoubleClick = () => {\r\n\t\tconsole.log('onCellDoubleClick wurde ausgeführt');\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\t// onOpenModal = () => {\r\n\t// \tthis.setState({ open: true });\r\n\t// };\r\n\r\n\tonCloseModal = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\tonPopupOpen = (e) => {\r\n\t\t// console.log('onPopupOpen')\r\n\t\tthis.setState({ open: true });\r\n    };\r\n    \r\n    onActionBegin(args) {\r\n\t\tconsole.log('onActionBegin--->', args.requestType);\r\n\t\tif (args.requestType === 'eventCreate') {\r\n\t\t\tlet data = args.data;\r\n\t\t\tconsole.log('args.data--->', data);\r\n\t\t\tconsole.log('StartTime--->', data[0].StartTime);\r\n\t\t\tconsole.log('EndTime--->', data[0].EndTime);\r\n\t\t\tconsole.log('Subject--->', data[0].Subject);\r\n\t\t\tconsole.log('an event has been created');\r\n\t\t}\r\n\t\tif (args.requestType === 'eventChange') {\r\n\t\t\tlet data = args.data;\r\n\t\t\tconsole.log('args.data--->', data);\r\n\t\t\tconsole.log('StartTime--->', data.StartTime);\r\n\t\t\tconsole.log('EndTime--->', data.EndTime);\r\n\t\t\tconsole.log('Subject--->', data.Subject);\r\n\t\t\tconsole.log('an event has been changed');\r\n\t\t}\r\n\t\tif (args.requestType === 'eventRemove') {\r\n\t\t\tlet data = args.data;\r\n\t\t\tconsole.log('args.data--->', data);\r\n\t\t\tconsole.log('StartTime--->', data[0].StartTime);\r\n\t\t\tconsole.log('EndTime--->', data[0].EndTime);\r\n\t\t\tconsole.log('Subject--->', data[0].Subject);\r\n\t\t\tconsole.log('an event has been removed');\r\n\t\t}\r\n\t}\r\n\r\n    // onPopupOpen(args) { \r\n    //     console.log('onPopupOpen--->', args.element); \r\n    //     if (args.type === 'Editor') { \r\n    //         let statusElement = args.element.querySelector('#EventType'); \r\n    //         console.log('statusElement--->',args)\r\n    //         statusElement.setAttribute('name', 'EventType'); \r\n    //         console.log('onPopupOpen statusElement--->', statusElement); \r\n    //     } \r\n    // } \r\n     \r\n    // onActionBegin(args) { \r\n    //     console.log('onActionBegin', args) \r\n    //     if (args.requestType === 'eventCreate') { \r\n    //         let data = args.data; \r\n    //         if (!this.combinedSources.isSlotAvailable(data.StartTime, data.EndTime)) { \r\n    //             args.cancel = true; \r\n    //         } \r\n    //     } \r\n    // } \r\n   \r\n    // editorTemplate(props) { \r\n    //     console.log(\"test\") \r\n    //     return ( \r\n    //         <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}> \r\n    //             <tbody> \r\n    //                 <tr> \r\n    //                     <td className=\"e-textlabel\">Summary</td> \r\n    //                     <td style={{ colspan: '4' }}> \r\n    //                         <input \r\n    //                             id=\"Summary\" \r\n    //                             className=\"e-field e-input\" \r\n    //                             type=\"text\" \r\n    //                             name=\"Subject\" \r\n    //                             style={{ width: '100%' }} \r\n    //                         /> \r\n    //                     </td> \r\n    //                 </tr> \r\n    //                 <tr> \r\n    //                     <td className=\"e-textlabel\">Status</td> \r\n    //                     <td style={{ colspan: '4' }}> \r\n    //                         <DropDownListComponent \r\n    //                             id=\"EventType\" \r\n    //                             placeholder=\"Choose status\" \r\n    //                             className=\"e-field\" \r\n    //                             style={{ width: '100%' }} \r\n    //                             dataSource={[ 'New', 'Requested', 'Confirmed' ]} \r\n    //                         /> \r\n    //                     </td> \r\n    //                 </tr> \r\n    //                 <tr> \r\n    //                     <td className=\"e-textlabel\">From</td> \r\n    //                     <td style={{ colspan: '4' }}> \r\n    //                         <DateTimePickerComponent id=\"StartTime\" className=\"e-field\" /> \r\n    //                     </td> \r\n    //                 </tr> \r\n    //                 <tr> \r\n    //                     <td className=\"e-textlabel\">To</td> \r\n    //                     <td style={{ colspan: '4' }}> \r\n    //                         <DateTimePickerComponent id=\"EndTime\" className=\"e-field\" /> \r\n    //                     </td> \r\n    //                 </tr> \r\n    //                 <tr> \r\n    //                     <td className=\"e-textlabel\">Reason</td> \r\n    //                     <td style={{ colspan: '4' }}> \r\n    //                         <textarea \r\n    //                             id=\"Description\" \r\n    //                             className=\"e-field e-input\" \r\n    //                             name=\"Description\" \r\n    //                             rows={3} \r\n    //                             cols={50} \r\n    //                             style={{ width: '100%', height: '60px !important', resize: 'vertical' }} \r\n    //                         /> \r\n    //                     </td> \r\n    //                 </tr> \r\n    //             </tbody> \r\n    //         </table> \r\n    //     ); \r\n    // } \r\n\r\n\r\n   \r\n    render() { \r\n        var combinedSources = [ ...this.state.scheduleData, ...this.state.scheduleShiftEntry ]; \r\n        console.log('this.state->', this.state); \r\n        const { open } = this.state;\r\n        // console.log('this.scheduleObj->', this.scheduleObj); \r\n        // console.log('this.state.scheduleData->', this.state.scheduleData) \r\n        // console.log('this.state.scheduleShiftEntry->', this.state.scheduleShiftEntry) \r\n        // console.log('combinedSources-->', combinedSources) \r\n        return ( \r\n            <div className=\"schedule-control-section\"> \r\n                <div className=\"col-lg-9 control-section\"> \r\n                    <div className=\"control-wrapper\"> \r\n                    <div style={styles}>\r\n\t\t\t\t\t\t\t<Modal open={open} onClose={this.onCloseModal} center>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<AddShifts parentMethod={this.getData}>{this.props.children}</AddShifts>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<ModifyShifts parentMethod={this.getData}>{this.props.children}</ModifyShifts>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<DeleteShifts parentMethod={this.getData}>{this.props.children}</DeleteShifts>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</div>\r\n                        <div> \r\n                            <ScheduleComponent \r\n                                height=\"650px\" \r\n                                width=\"1000px\" \r\n                                eventSettings={{ dataSource: this.state.scheduleData }} \r\n                                ref={(schedule) => (this.combinedSources = schedule)} \r\n                                cellClick={this.onCellClick}\r\n\t\t\t\t\t\t\t\tcellDoubleClick={this.onCellDoubleClick}\r\n                                editorTemplate={this.editorTemplate} \r\n                                showQuickInfo={false} \r\n                                popupOpen={this.onPopupOpen.bind(this)} \r\n                                actionBegin={this.onActionBegin.bind(this)} \r\n                            > \r\n                                <Inject services={[ Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop ]} /> \r\n                            </ScheduleComponent> \r\n                        </div> \r\n                        <div>\r\n\t\t\t\t\t\t\t<AddShiftEntry parentMethod={this.getShiftEntry}>{this.props.children}</AddShiftEntry>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<ModifyShiftEntry parentMethod={this.getShiftEntry}>\r\n\t\t\t\t\t\t\t\t{this.props.children}>\r\n\t\t\t\t\t\t\t</ModifyShiftEntry>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<DeleteShiftEntry parentMethod={this.getShiftEntry}>{this.props.children}</DeleteShiftEntry>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n                        <div> \r\n                            <ScheduleComponent \r\n                                cssClass=\"custom-work-days\" \r\n                                height=\"650px\" \r\n                                width=\"1000px\" \r\n                                eventSettings={{ \r\n                                    dataSource: combinedSources \r\n                                }} \r\n                                eventRendered={this.onEventRendered.bind(this)} \r\n                            > \r\n                                <Inject services={[ Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop ]} /> \r\n                            </ScheduleComponent> \r\n                        </div> \r\n                    </div> \r\n                </div> \r\n            </div> \r\n        ); \r\n    } \r\n} \r\n   \r\nrender(<Default />, document.getElementById('sample')); "]},"metadata":{},"sourceType":"module"}